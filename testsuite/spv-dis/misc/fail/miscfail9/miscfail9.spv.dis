; SPIR-V
; Version: 1.6
; Generator: Google Clspv; 0
; Bound: 7082
; Schema: 0
               OpCapability Shader
        %184 = OpExtInstImport "GLSL.std.450"
       %7072 = OpExtInstImport "NonSemantic.ClspvReflection.5"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %21 "test" %gl_GlobalInvocationID %13 %18 %5
               OpSource OpenCL_C 200
       %7073 = OpString "test"
       %7074 = OpString " __kernel"
       %7076 = OpString "A"
               OpMemberDecorate %_struct_3 0 Offset 0
               OpDecorate %_struct_3 Block
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %_struct_16 0 Offset 0
               OpDecorate %_struct_16 Block
               OpDecorate %18 DescriptorSet 0
               OpDecorate %18 Binding 0
               OpDecorate %228 NoContraction
               OpDecorate %229 NoContraction
               OpDecorate %767 NoContraction
               OpDecorate %796 NoContraction
               OpDecorate %1292 NoContraction
               OpDecorate %1332 NoContraction
               OpDecorate %1341 NoContraction
               OpDecorate %1342 NoContraction
               OpDecorate %1841 NoContraction
               OpDecorate %1875 NoContraction
               OpDecorate %1876 NoContraction
               OpDecorate %1880 NoContraction
               OpDecorate %1881 NoContraction
               OpDecorate %1882 NoContraction
               OpDecorate %1895 NoContraction
               OpDecorate %1897 NoContraction
               OpDecorate %1899 NoContraction
               OpDecorate %1900 NoContraction
               OpDecorate %2396 NoContraction
               OpDecorate %2430 NoContraction
               OpDecorate %2434 NoContraction
               OpDecorate %2435 NoContraction
               OpDecorate %2436 NoContraction
               OpDecorate %2437 NoContraction
               OpDecorate %2438 NoContraction
               OpDecorate %2439 NoContraction
               OpDecorate %2440 NoContraction
               OpDecorate %2934 NoContraction
               OpDecorate %2968 NoContraction
               OpDecorate %2972 NoContraction
               OpDecorate %2973 NoContraction
               OpDecorate %2974 NoContraction
               OpDecorate %2975 NoContraction
               OpDecorate %2976 NoContraction
               OpDecorate %2978 NoContraction
               OpDecorate %2979 NoContraction
               OpDecorate %3474 NoContraction
               OpDecorate %3508 NoContraction
               OpDecorate %3512 NoContraction
               OpDecorate %3513 NoContraction
               OpDecorate %3514 NoContraction
               OpDecorate %3515 NoContraction
               OpDecorate %3516 NoContraction
               OpDecorate %3525 NoContraction
               OpDecorate %3526 NoContraction
               OpDecorate %3528 NoContraction
               OpDecorate %3530 NoContraction
               OpDecorate %3531 NoContraction
               OpDecorate %3533 NoContraction
               OpDecorate %3534 NoContraction
               OpDecorate %3536 NoContraction
               OpDecorate %3537 NoContraction
               OpDecorate %3539 NoContraction
               OpDecorate %3540 NoContraction
               OpDecorate %3541 NoContraction
               OpDecorate %3542 NoContraction
               OpDecorate %3543 NoContraction
               OpDecorate %3544 NoContraction
               OpDecorate %3546 NoContraction
               OpDecorate %3547 NoContraction
               OpDecorate %3548 NoContraction
               OpDecorate %3549 NoContraction
               OpDecorate %3551 NoContraction
               OpDecorate %3553 NoContraction
               OpDecorate %3554 NoContraction
               OpDecorate %3556 NoContraction
               OpDecorate %3557 NoContraction
               OpDecorate %3559 NoContraction
               OpDecorate %3560 NoContraction
               OpDecorate %3562 NoContraction
               OpDecorate %3563 NoContraction
               OpDecorate %3565 NoContraction
               OpDecorate %3566 NoContraction
               OpDecorate %3583 NoContraction
               OpDecorate %3584 NoContraction
               OpDecorate %3586 NoContraction
               OpDecorate %3587 NoContraction
               OpDecorate %3588 NoContraction
               OpDecorate %3589 NoContraction
               OpDecorate %3590 NoContraction
               OpDecorate %3591 NoContraction
               OpDecorate %3760 NoContraction
               OpDecorate %3761 NoContraction
               OpDecorate %4257 NoContraction
               OpDecorate %4286 NoContraction
               OpDecorate %4780 NoContraction
               OpDecorate %4820 NoContraction
               OpDecorate %4829 NoContraction
               OpDecorate %4830 NoContraction
               OpDecorate %5329 NoContraction
               OpDecorate %5363 NoContraction
               OpDecorate %5364 NoContraction
               OpDecorate %5368 NoContraction
               OpDecorate %5369 NoContraction
               OpDecorate %5370 NoContraction
               OpDecorate %5382 NoContraction
               OpDecorate %5383 NoContraction
               OpDecorate %5385 NoContraction
               OpDecorate %5386 NoContraction
               OpDecorate %5882 NoContraction
               OpDecorate %5916 NoContraction
               OpDecorate %5920 NoContraction
               OpDecorate %5921 NoContraction
               OpDecorate %5922 NoContraction
               OpDecorate %5923 NoContraction
               OpDecorate %5924 NoContraction
               OpDecorate %5925 NoContraction
               OpDecorate %5926 NoContraction
               OpDecorate %6420 NoContraction
               OpDecorate %6454 NoContraction
               OpDecorate %6458 NoContraction
               OpDecorate %6459 NoContraction
               OpDecorate %6460 NoContraction
               OpDecorate %6461 NoContraction
               OpDecorate %6462 NoContraction
               OpDecorate %6463 NoContraction
               OpDecorate %6464 NoContraction
               OpDecorate %6958 NoContraction
               OpDecorate %6992 NoContraction
               OpDecorate %6996 NoContraction
               OpDecorate %6997 NoContraction
               OpDecorate %6998 NoContraction
               OpDecorate %6999 NoContraction
               OpDecorate %7000 NoContraction
               OpDecorate %7010 NoContraction
               OpDecorate %7011 NoContraction
               OpDecorate %7012 NoContraction
               OpDecorate %7013 NoContraction
               OpDecorate %7014 NoContraction
               OpDecorate %7015 NoContraction
               OpDecorate %7016 NoContraction
               OpDecorate %7017 NoContraction
               OpDecorate %7018 NoContraction
               OpDecorate %7019 NoContraction
               OpDecorate %7020 NoContraction
               OpDecorate %7021 NoContraction
               OpDecorate %7022 NoContraction
               OpDecorate %7023 NoContraction
               OpDecorate %7024 NoContraction
               OpDecorate %7025 NoContraction
               OpDecorate %7026 NoContraction
               OpDecorate %7027 NoContraction
               OpDecorate %7028 NoContraction
               OpDecorate %7029 NoContraction
               OpDecorate %7030 NoContraction
               OpDecorate %7031 NoContraction
               OpDecorate %7032 NoContraction
               OpDecorate %7033 NoContraction
               OpDecorate %7034 NoContraction
               OpDecorate %7035 NoContraction
               OpDecorate %7036 NoContraction
               OpDecorate %7037 NoContraction
               OpDecorate %7038 NoContraction
               OpDecorate %7050 NoContraction
               OpDecorate %7051 NoContraction
               OpDecorate %7052 NoContraction
               OpDecorate %7053 NoContraction
               OpDecorate %7054 NoContraction
               OpDecorate %7055 NoContraction
               OpDecorate %7056 NoContraction
               OpDecorate %7057 NoContraction
               OpDecorate %8 SpecId 0
               OpDecorate %9 SpecId 1
               OpDecorate %10 SpecId 2
       %uint = OpTypeInt 32 0
     %v3uint = OpTypeVector %uint 3
  %_struct_3 = OpTypeStruct %v3uint
%_ptr_PushConstant__struct_3 = OpTypePointer PushConstant %_struct_3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
          %8 = OpSpecConstant %uint 1
          %9 = OpSpecConstant %uint 1
         %10 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %8 %9 %10
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
 %_struct_16 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer__struct_16 = OpTypePointer StorageBuffer %_struct_16
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_ptr_Input_uint = OpTypePointer Input %uint
     %uint_0 = OpConstant %uint 0
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint
         %33 = OpTypeFunction %float %float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%uint_2147483647 = OpConstant %uint 2147483647
       %bool = OpTypeBool
%float_8388608 = OpConstant %float 8388608
    %uint_23 = OpConstant %uint 23
%uint_8388607 = OpConstant %uint 8388607
%uint_8388608 = OpConstant %uint 8388608
%uint_4266746795 = OpConstant %uint 4266746795
 %_struct_58 = OpTypeStruct %uint %uint
%uint_1011060801 = OpConstant %uint 1011060801
     %uint_1 = OpConstant %uint 1
%uint_3680671129 = OpConstant %uint 3680671129
%uint_4113882560 = OpConstant %uint 4113882560
%uint_4230436817 = OpConstant %uint 4230436817
%uint_1313084713 = OpConstant %uint 1313084713
%uint_2734261102 = OpConstant %uint 2734261102
%uint_4294967176 = OpConstant %uint 4294967176
    %uint_31 = OpConstant %uint 31
%uint_4294967264 = OpConstant %uint 4294967264
    %uint_24 = OpConstant %uint 24
    %uint_29 = OpConstant %uint 29
     %uint_2 = OpConstant %uint 2
    %uint_30 = OpConstant %uint 30
     %uint_9 = OpConstant %uint 9
%uint_1056964608 = OpConstant %uint 1056964608
%uint_4294967295 = OpConstant %uint 4294967295
%uint_864026624 = OpConstant %uint 864026624
%float_1_57079625 = OpConstant %float 1.57079625
    %v2float = OpTypeVector %float 2
        %261 = OpUndef %float
        %262 = OpConstantComposite %v2float %float_1_57079625 %261
     %v2uint = OpTypeVector %uint 2
%uint_2139095040 = OpConstant %uint 2139095040
        %267 = OpConstantComposite %v2uint %uint_2139095040 %uint_2139095040
     %v2bool = OpTypeVector %bool 2
        %270 = OpConstantNull %v2uint
        %272 = OpConstantComposite %v2uint %uint_8388607 %uint_8388607
%uint_2147483648 = OpConstant %uint 2147483648
        %277 = OpConstantComposite %v2uint %uint_2147483648 %uint_2147483648
        %290 = OpConstantNull %v2float
        %292 = OpUndef %v2bool
    %float_0 = OpConstant %float 0
   %uint_255 = OpConstant %uint 255
%uint_4294967169 = OpConstant %uint 4294967169
        %319 = OpConstantComposite %v2uint %uint_8388608 %uint_8388608
    %uint_14 = OpConstant %uint 14
    %uint_18 = OpConstant %uint 18
%uint_4294967042 = OpConstant %uint 4294967042
     %uint_5 = OpConstant %uint 5
%uint_268435424 = OpConstant %uint 268435424
%uint_268435456 = OpConstant %uint 268435456
        %351 = OpUndef %uint
        %352 = OpConstantComposite %v2uint %uint_0 %351
    %uint_32 = OpConstant %uint 32
%uint_4294967233 = OpConstant %uint 4294967233
        %417 = OpConstantComposite %v2uint %351 %uint_0
    %uint_63 = OpConstant %uint 63
        %525 = OpUndef %v2uint
      %false = OpConstantFalse %bool
        %533 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
     %uint_3 = OpConstant %uint 3
%uint_4294967293 = OpConstant %uint 4294967293
        %647 = OpConstantComposite %v2uint %uint_4294967295 %351
     %uint_4 = OpConstant %uint 4
       %true = OpConstantTrue %bool
%uint_16777215 = OpConstant %uint 16777215
   %uint_127 = OpConstant %uint 127
%uint_4294967170 = OpConstant %uint 4294967170
%uint_1065353216 = OpConstant %uint 1065353216
        %765 = OpUndef %v2float
%float_7_54978942en08 = OpConstant %float 7.54978942e-08
        %826 = OpConstantComposite %v2float %float_7_54978942en08 %261
%float_0_636619747 = OpConstant %float 0.636619747
  %float_0_5 = OpConstant %float 0.5
%float_5_39030253en15 = OpConstant %float 5.39030253e-15
       %3008 = OpConstantComposite %v2float %float_5_39030253en15 %261
%float_1_58969102en10 = OpConstant %float 1.58969102e-10
%float_n2_50507597en08 = OpConstant %float -2.50507597e-08
%float_2_72500006en06 = OpConstant %float 2.72500006e-06
%float_n0_00019840087 = OpConstant %float -0.00019840087
%float_0_00833333191 = OpConstant %float 0.00833333191
%float_0_166666672 = OpConstant %float 0.166666672
%float_1_13596476en11 = OpConstant %float 1.13596476e-11
%float_2_08757234en09 = OpConstant %float 2.08757234e-09
%float_n2_7301013en07 = OpConstant %float -2.7301013e-07
%float_2_48005999en05 = OpConstant %float 2.48005999e-05
%float_n0_00138888881 = OpConstant %float -0.00138888881
%float_0_0416666679 = OpConstant %float 0.0416666679
%uint_4278190080 = OpConstant %uint 4278190080
%uint_3244713574 = OpConstant %uint 3244713574
%uint_11429479 = OpConstant %uint 11429479
%uint_1061683200 = OpConstant %uint 1061683200
%float_0_28125 = OpConstant %float 0.28125
    %float_1 = OpConstant %float 1
%uint_2139095039 = OpConstant %uint 2139095039
%float_0x1_8p_128 = OpConstant %float 0x1.8p+128
       %7071 = OpConstantComposite %v2uint %uint_1 %uint_0
    %uint_12 = OpConstant %uint 12
          %5 = OpVariable %_ptr_PushConstant__struct_3 PushConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %13 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %18 = OpVariable %_ptr_StorageBuffer__struct_16 StorageBuffer
         %21 = OpFunction %void None %20
         %22 = OpLabel
         %25 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %26 = OpLoad %uint %25
         %28 = OpAccessChain %_ptr_PushConstant_uint %5 %uint_0 %uint_0
         %29 = OpLoad %uint %28
         %30 = OpIAdd %uint %29 %26
         %31 = OpConvertUToF %float %30
         %32 = OpFunctionCall %float %34 %31
               OpReturn
               OpFunctionEnd
         %34 = OpFunction %float None %33
         %35 = OpFunctionParameter %float
         %36 = OpLabel
         %38 = OpAccessChain %_ptr_StorageBuffer_float %18 %uint_0 %uint_0
         %39 = OpBitcast %uint %35
         %41 = OpBitwiseAnd %uint %39 %uint_2147483647
         %42 = OpBitcast %float %41
         %43 = OpBitcast %uint %42
         %46 = OpFUnordGreaterThanEqual %bool %42 %float_8388608
               OpSelectionMerge %1886 None
               OpBranchConditional %46 %49 %1886
         %49 = OpLabel
         %51 = OpShiftRightLogical %uint %43 %uint_23
         %53 = OpBitwiseAnd %uint %43 %uint_8388607
         %55 = OpBitwiseOr %uint %53 %uint_8388608
         %57 = OpIMul %uint %55 %uint_4266746795
         %59 = OpUMulExtended %_struct_58 %55 %uint_4266746795
         %60 = OpCompositeExtract %uint %59 1
         %62 = OpIMul %uint %55 %uint_1011060801
         %63 = OpIAdd %uint %60 %62
         %64 = OpUMulExtended %_struct_58 %55 %uint_1011060801
         %65 = OpCompositeExtract %uint %64 1
         %66 = OpULessThan %bool %63 %60
         %68 = OpSelect %uint %66 %uint_1 %uint_0
         %69 = OpIAdd %uint %65 %68
         %71 = OpIMul %uint %55 %uint_3680671129
         %72 = OpIAdd %uint %69 %71
         %73 = OpUMulExtended %_struct_58 %55 %uint_3680671129
         %74 = OpCompositeExtract %uint %73 1
         %75 = OpULessThan %bool %72 %69
         %76 = OpSelect %uint %75 %uint_1 %uint_0
         %77 = OpIAdd %uint %74 %76
         %79 = OpIMul %uint %55 %uint_4113882560
         %80 = OpIAdd %uint %77 %79
         %81 = OpUMulExtended %_struct_58 %55 %uint_4113882560
         %82 = OpCompositeExtract %uint %81 1
         %83 = OpULessThan %bool %80 %77
         %84 = OpSelect %uint %83 %uint_1 %uint_0
         %85 = OpIAdd %uint %82 %84
         %87 = OpIMul %uint %55 %uint_4230436817
         %88 = OpIAdd %uint %85 %87
         %89 = OpUMulExtended %_struct_58 %55 %uint_4230436817
         %90 = OpCompositeExtract %uint %89 1
         %91 = OpULessThan %bool %88 %85
         %92 = OpSelect %uint %91 %uint_1 %uint_0
         %93 = OpIAdd %uint %90 %92
         %95 = OpIMul %uint %55 %uint_1313084713
         %96 = OpIAdd %uint %93 %95
         %97 = OpUMulExtended %_struct_58 %55 %uint_1313084713
         %98 = OpCompositeExtract %uint %97 1
         %99 = OpULessThan %bool %96 %93
        %100 = OpSelect %uint %99 %uint_1 %uint_0
        %101 = OpIAdd %uint %98 %100
        %103 = OpIMul %uint %55 %uint_2734261102
        %104 = OpIAdd %uint %101 %103
        %105 = OpUMulExtended %_struct_58 %55 %uint_2734261102
        %106 = OpCompositeExtract %uint %105 1
        %107 = OpULessThan %bool %104 %101
        %108 = OpSelect %uint %107 %uint_1 %uint_0
        %109 = OpIAdd %uint %106 %108
        %111 = OpIAdd %uint %51 %uint_4294967176
        %113 = OpUGreaterThan %bool %111 %uint_31
        %114 = OpSelect %uint %113 %104 %109
        %115 = OpSelect %uint %113 %96 %104
        %116 = OpSelect %uint %113 %88 %96
        %117 = OpSelect %uint %113 %80 %88
        %118 = OpSelect %uint %113 %72 %80
        %119 = OpSelect %uint %113 %63 %72
        %120 = OpSelect %uint %113 %57 %63
        %122 = OpSelect %uint %113 %uint_4294967264 %uint_0
        %123 = OpIAdd %uint %122 %111
        %124 = OpUGreaterThan %bool %123 %uint_31
        %125 = OpSelect %uint %124 %115 %114
        %126 = OpSelect %uint %124 %116 %115
        %127 = OpSelect %uint %124 %117 %116
        %128 = OpSelect %uint %124 %118 %117
        %129 = OpSelect %uint %124 %119 %118
        %130 = OpSelect %uint %124 %120 %119
        %131 = OpSelect %uint %124 %uint_4294967264 %uint_0
        %132 = OpIAdd %uint %131 %123
        %133 = OpUGreaterThan %bool %132 %uint_31
        %134 = OpSelect %uint %133 %126 %125
        %135 = OpSelect %uint %133 %127 %126
        %136 = OpSelect %uint %133 %128 %127
        %137 = OpSelect %uint %133 %129 %128
        %138 = OpSelect %uint %133 %130 %129
        %139 = OpSelect %uint %133 %uint_4294967264 %uint_0
        %140 = OpIAdd %uint %139 %132
        %141 = OpUGreaterThan %bool %140 %uint_31
        %142 = OpSelect %uint %141 %135 %134
        %143 = OpSelect %uint %141 %136 %135
        %144 = OpSelect %uint %141 %137 %136
        %145 = OpSelect %uint %141 %138 %137
        %146 = OpSelect %uint %141 %uint_4294967264 %uint_0
        %147 = OpISub %uint %uint_0 %140
        %148 = OpIEqual %bool %146 %147
        %150 = OpISub %uint %uint_24 %51
        %151 = OpBitwiseAnd %uint %111 %uint_31
        %152 = OpShiftLeftLogical %uint %142 %151
        %153 = OpBitwiseAnd %uint %150 %uint_31
        %154 = OpShiftRightLogical %uint %143 %153
        %155 = OpBitwiseOr %uint %152 %154
        %156 = OpShiftLeftLogical %uint %143 %151
        %157 = OpShiftRightLogical %uint %144 %153
        %158 = OpBitwiseOr %uint %156 %157
        %159 = OpShiftLeftLogical %uint %144 %151
        %160 = OpShiftRightLogical %uint %145 %153
        %161 = OpBitwiseOr %uint %159 %160
        %162 = OpSelect %uint %148 %142 %155
        %163 = OpSelect %uint %148 %143 %158
        %164 = OpSelect %uint %148 %144 %161
        %166 = OpShiftRightLogical %uint %162 %uint_29
        %168 = OpShiftLeftLogical %uint %162 %uint_2
        %170 = OpShiftRightLogical %uint %163 %uint_30
        %171 = OpBitwiseOr %uint %170 %168
        %172 = OpShiftLeftLogical %uint %163 %uint_2
        %173 = OpShiftRightLogical %uint %164 %uint_30
        %174 = OpBitwiseOr %uint %173 %172
        %175 = OpShiftLeftLogical %uint %164 %uint_2
        %176 = OpShiftRightLogical %uint %145 %uint_30
        %177 = OpBitwiseOr %uint %176 %175
        %178 = OpBitwiseAnd %uint %166 %uint_1
        %179 = OpISub %uint %uint_0 %178
        %180 = OpShiftLeftLogical %uint %166 %uint_31
        %181 = OpBitwiseXor %uint %171 %179
        %182 = OpBitwiseXor %uint %174 %179
        %183 = OpBitwiseXor %uint %177 %179
        %185 = OpExtInst %uint %184 FindUMsb %181
        %186 = OpISub %uint %uint_31 %185
        %187 = OpIAdd %uint %186 %uint_1
        %188 = OpISub %uint %uint_31 %186
        %189 = OpBitwiseAnd %uint %187 %uint_31
        %190 = OpShiftLeftLogical %uint %181 %189
        %191 = OpBitwiseAnd %uint %188 %uint_31
        %192 = OpShiftRightLogical %uint %182 %191
        %193 = OpBitwiseOr %uint %190 %192
        %194 = OpShiftLeftLogical %uint %182 %189
        %195 = OpShiftRightLogical %uint %183 %191
        %196 = OpBitwiseOr %uint %194 %195
        %198 = OpShiftRightLogical %uint %193 %uint_9
        %199 = OpShiftLeftLogical %uint %186 %uint_23
        %200 = OpISub %uint %198 %199
        %202 = OpIAdd %uint %200 %uint_1056964608
        %203 = OpBitwiseOr %uint %202 %180
        %204 = OpBitcast %float %203
        %205 = OpShiftLeftLogical %uint %193 %uint_23
        %206 = OpShiftRightLogical %uint %196 %uint_9
        %207 = OpBitwiseOr %uint %206 %205
        %208 = OpExtInst %uint %184 FindUMsb %207
        %209 = OpISub %uint %uint_31 %208
        %211 = OpBitwiseXor %uint %209 %uint_4294967295
        %212 = OpIAdd %uint %209 %uint_1
        %213 = OpISub %uint %uint_31 %209
        %214 = OpBitwiseAnd %uint %212 %uint_31
        %215 = OpShiftLeftLogical %uint %207 %214
        %216 = OpBitwiseAnd %uint %213 %uint_31
        %217 = OpShiftRightLogical %uint %196 %216
        %218 = OpBitwiseOr %uint %215 %217
        %219 = OpISub %uint %211 %186
        %220 = OpShiftLeftLogical %uint %219 %uint_23
        %221 = OpShiftRightLogical %uint %218 %uint_9
        %223 = OpIAdd %uint %220 %uint_864026624
        %224 = OpBitwiseOr %uint %221 %223
        %225 = OpBitwiseOr %uint %224 %180
        %226 = OpBitcast %float %225
        %228 = OpFMul %float %204 %float_1_57079625
        %229 = OpFNegate %float %228
        %230 = OpIsNan %bool %204
        %231 = OpLogicalNot %bool %230
               OpSelectionMerge %1324 None
               OpBranchConditional %231 %234 %1324
        %234 = OpLabel
        %235 = OpIsNan %bool %float_1_57079625
        %236 = OpLogicalNot %bool %235
               OpSelectionMerge %790 None
               OpBranchConditional %236 %239 %790
        %239 = OpLabel
        %240 = OpIsNan %bool %229
        %241 = OpLogicalNot %bool %240
               OpSelectionMerge %786 None
               OpBranchConditional %241 %244 %786
        %244 = OpLabel
        %245 = OpIsInf %bool %204
        %246 = OpLogicalNot %bool %245
               OpSelectionMerge %782 None
               OpBranchConditional %246 %249 %782
        %249 = OpLabel
        %250 = OpIsInf %bool %float_1_57079625
        %251 = OpLogicalNot %bool %250
               OpSelectionMerge %779 None
               OpBranchConditional %251 %254 %779
        %254 = OpLabel
        %255 = OpIsInf %bool %229
        %256 = OpLogicalNot %bool %255
               OpSelectionMerge %776 None
               OpBranchConditional %256 %259 %776
        %259 = OpLabel
        %263 = OpCompositeInsert %v2float %204 %262 1
        %265 = OpBitcast %v2uint %263
        %268 = OpBitwiseAnd %v2uint %265 %267
        %271 = OpINotEqual %v2bool %268 %270
        %273 = OpBitwiseAnd %v2uint %265 %272
        %274 = OpIEqual %v2bool %273 %270
        %275 = OpLogicalOr %v2bool %274 %271
        %278 = OpBitwiseAnd %v2uint %265 %277
        %279 = OpBitcast %v2float %278
        %280 = OpSelect %v2float %275 %263 %279
        %281 = OpBitcast %uint %229
        %282 = OpBitwiseAnd %uint %281 %uint_2139095040
        %283 = OpINotEqual %bool %282 %uint_0
        %284 = OpBitwiseAnd %uint %281 %uint_8388607
        %285 = OpIEqual %bool %284 %uint_0
        %286 = OpLogicalOr %bool %285 %283
        %287 = OpBitwiseAnd %uint %281 %uint_2147483648
        %288 = OpBitcast %float %287
        %289 = OpSelect %float %286 %229 %288
        %291 = OpFOrdEqual %v2bool %280 %290
        %293 = OpVectorShuffle %v2bool %291 %292 1 4294967295
        %294 = OpLogicalOr %v2bool %293 %291
        %295 = OpCompositeExtract %bool %294 0
        %296 = OpLogicalNot %bool %295
               OpSelectionMerge %773 None
               OpBranchConditional %296 %299 %773
        %299 = OpLabel
        %301 = OpFUnordNotEqual %bool %289 %float_0
               OpSelectionMerge %759 None
               OpBranchConditional %301 %304 %759
        %304 = OpLabel
        %305 = OpBitcast %v2uint %280
        %306 = OpCompositeExtract %uint %305 1
        %307 = OpShiftRightLogical %uint %306 %uint_23
        %309 = OpBitwiseAnd %uint %307 %uint_255
        %310 = OpCompositeExtract %uint %305 0
        %311 = OpShiftRightLogical %uint %310 %uint_23
        %312 = OpBitwiseAnd %uint %311 %uint_255
        %313 = OpBitcast %uint %289
        %314 = OpShiftRightLogical %uint %313 %uint_23
        %315 = OpBitwiseAnd %uint %314 %uint_255
        %317 = OpIAdd %uint %315 %uint_4294967169
        %318 = OpBitwiseAnd %v2uint %305 %272
        %320 = OpBitwiseOr %v2uint %318 %319
        %321 = OpBitwiseAnd %uint %313 %uint_2147483648
        %322 = OpBitwiseXor %uint %310 %306
        %323 = OpBitwiseAnd %uint %322 %uint_2147483648
        %324 = OpCompositeExtract %uint %320 0
        %325 = OpCompositeExtract %uint %320 1
        %326 = OpUMulExtended %_struct_58 %325 %324
        %327 = OpCompositeExtract %uint %326 1
        %328 = OpIMul %uint %324 %325
        %330 = OpShiftLeftLogical %uint %327 %uint_14
        %332 = OpShiftRightLogical %uint %328 %uint_18
        %333 = OpBitwiseOr %uint %332 %330
        %334 = OpShiftLeftLogical %uint %328 %uint_14
        %335 = OpCompositeConstruct %v2uint %334 %333
        %336 = OpBitwiseOr %uint %333 %334
        %337 = OpINotEqual %bool %336 %uint_0
        %339 = OpIAdd %uint %309 %uint_4294967042
        %340 = OpIAdd %uint %339 %312
               OpSelectionMerge %756 None
               OpBranchConditional %337 %343 %756
        %343 = OpLabel
        %344 = OpISub %uint %340 %317
        %346 = OpShiftLeftLogical %uint %313 %uint_5
        %348 = OpBitwiseAnd %uint %346 %uint_268435424
        %350 = OpBitwiseOr %uint %348 %uint_268435456
        %353 = OpCompositeInsert %v2uint %350 %352 1
        %354 = OpExtInst %uint %184 SAbs %344
        %355 = OpINotEqual %bool %354 %uint_0
               OpSelectionMerge %383 None
               OpBranchConditional %355 %358 %383
        %358 = OpLabel
        %360 = OpUGreaterThanEqual %bool %354 %uint_32
               OpSelectionMerge %368 None
               OpBranchConditional %360 %363 %368
        %363 = OpLabel
        %364 = OpBitwiseAnd %uint %354 %uint_31
        %365 = OpShiftLeftLogical %uint %uint_1 %364
        %366 = OpCompositeInsert %v2uint %365 %352 1
               OpBranch %368
        %368 = OpLabel
        %369 = OpPhi %v2uint %366 %363 %525 %358
        %370 = OpPhi %bool %false %363 %true %358
               OpSelectionMerge %380 None
               OpBranchConditional %370 %373 %380
        %373 = OpLabel
        %374 = OpISub %uint %uint_0 %354
        %375 = OpBitwiseAnd %uint %374 %uint_31
        %376 = OpShiftRightLogical %uint %uint_1 %375
        %377 = OpShiftLeftLogical %uint %uint_1 %354
        %378 = OpCompositeConstruct %v2uint %377 %376
               OpBranch %380
        %380 = OpLabel
        %381 = OpPhi %v2uint %378 %373 %369 %368
               OpBranch %383
        %383 = OpLabel
        %384 = OpPhi %v2uint %7071 %343 %381 %380
        %385 = OpCompositeExtract %uint %384 0
        %386 = OpShiftRightLogical %uint %385 %uint_1
        %387 = OpIAdd %uint %386 %uint_2147483647
        %388 = OpBitwiseAnd %uint %385 %uint_1
        %389 = OpIAdd %uint %387 %388
        %390 = OpShiftRightLogical %uint %389 %uint_31
        %391 = OpIAdd %uint %385 %uint_4294967295
        %392 = OpCompositeExtract %uint %384 1
        %393 = OpIAdd %uint %392 %uint_4294967295
        %394 = OpIAdd %uint %393 %390
        %395 = OpCompositeConstruct %v2uint %391 %394
        %396 = OpSLessThanEqual %bool %344 %uint_0
               OpSelectionMerge %450 None
               OpBranchConditional %396 %399 %450
        %399 = OpLabel
        %401 = OpSGreaterThanEqual %bool %344 %uint_4294967233
               OpSelectionMerge %445 None
               OpBranchConditional %401 %404 %445
        %404 = OpLabel
        %405 = OpISub %uint %uint_0 %344
        %406 = OpBitwiseAnd %v2uint %395 %335
        %407 = OpINotEqual %bool %340 %317
               OpSelectionMerge %440 None
               OpBranchConditional %407 %410 %440
        %410 = OpLabel
        %411 = OpUGreaterThanEqual %bool %405 %uint_32
               OpSelectionMerge %420 None
               OpBranchConditional %411 %414 %420
        %414 = OpLabel
        %415 = OpBitwiseAnd %uint %405 %uint_31
        %416 = OpShiftRightLogical %uint %333 %415
        %418 = OpCompositeInsert %v2uint %416 %417 0
               OpBranch %420
        %420 = OpLabel
        %421 = OpPhi %v2uint %353 %414 %525 %410
        %422 = OpPhi %v2uint %406 %414 %525 %410
        %423 = OpPhi %v2uint %418 %414 %525 %410
        %424 = OpPhi %bool %false %414 %true %410
               OpSelectionMerge %435 None
               OpBranchConditional %424 %427 %435
        %427 = OpLabel
        %428 = OpShiftRightLogical %uint %334 %405
        %429 = OpBitwiseAnd %uint %344 %uint_31
        %430 = OpShiftLeftLogical %uint %333 %429
        %431 = OpBitwiseOr %uint %430 %428
        %432 = OpShiftRightLogical %uint %333 %405
        %433 = OpCompositeConstruct %v2uint %431 %432
               OpBranch %435
        %435 = OpLabel
        %436 = OpPhi %v2uint %353 %427 %421 %420
        %437 = OpPhi %v2uint %406 %427 %422 %420
        %438 = OpPhi %v2uint %433 %427 %423 %420
               OpBranch %440
        %440 = OpLabel
        %441 = OpPhi %v2uint %436 %435 %353 %404
        %442 = OpPhi %v2uint %437 %435 %406 %404
        %443 = OpPhi %v2uint %438 %435 %335 %404
               OpBranch %445
        %445 = OpLabel
        %446 = OpPhi %v2uint %441 %440 %353 %399
        %447 = OpPhi %v2uint %442 %440 %335 %399
        %448 = OpPhi %v2uint %443 %440 %270 %399
               OpBranch %450
        %450 = OpLabel
        %451 = OpPhi %v2uint %446 %445 %525 %383
        %452 = OpPhi %v2uint %447 %445 %525 %383
        %453 = OpPhi %v2uint %448 %445 %525 %383
        %454 = OpPhi %bool %false %445 %true %383
               OpSelectionMerge %497 None
               OpBranchConditional %454 %457 %497
        %457 = OpLabel
        %459 = OpULessThanEqual %bool %344 %uint_63
               OpSelectionMerge %492 None
               OpBranchConditional %459 %462 %492
        %462 = OpLabel
        %463 = OpBitwiseAnd %uint %394 %350
        %464 = OpCompositeInsert %v2uint %463 %352 1
        %465 = OpUGreaterThanEqual %bool %344 %uint_32
               OpSelectionMerge %473 None
               OpBranchConditional %465 %468 %473
        %468 = OpLabel
        %469 = OpBitwiseAnd %uint %344 %uint_31
        %470 = OpShiftRightLogical %uint %350 %469
        %471 = OpCompositeInsert %v2uint %470 %417 0
               OpBranch %473
        %473 = OpLabel
        %474 = OpPhi %v2uint %471 %468 %525 %462
        %475 = OpPhi %v2uint %464 %468 %525 %462
        %476 = OpPhi %v2uint %335 %468 %525 %462
        %477 = OpPhi %bool %false %468 %true %462
               OpSelectionMerge %487 None
               OpBranchConditional %477 %480 %487
        %480 = OpLabel
        %481 = OpISub %uint %uint_0 %344
        %482 = OpBitwiseAnd %uint %481 %uint_31
        %483 = OpShiftLeftLogical %uint %350 %482
        %484 = OpShiftRightLogical %uint %350 %344
        %485 = OpCompositeConstruct %v2uint %483 %484
               OpBranch %487
        %487 = OpLabel
        %488 = OpPhi %v2uint %485 %480 %474 %473
        %489 = OpPhi %v2uint %464 %480 %475 %473
        %490 = OpPhi %v2uint %335 %480 %476 %473
               OpBranch %492
        %492 = OpLabel
        %493 = OpPhi %v2uint %488 %487 %270 %457
        %494 = OpPhi %v2uint %489 %487 %353 %457
        %495 = OpPhi %v2uint %490 %487 %335 %457
               OpBranch %497
        %497 = OpLabel
        %498 = OpPhi %v2uint %453 %450 %495 %492
        %499 = OpPhi %v2uint %452 %450 %494 %492
        %500 = OpPhi %v2uint %451 %450 %493 %492
        %501 = OpExtInst %uint %184 SMax %340 %317
        %502 = OpINotEqual %bool %321 %323
               OpSelectionMerge %552 None
               OpBranchConditional %502 %505 %552
        %505 = OpLabel
        %506 = OpCompositeExtract %uint %500 0
        %507 = OpBitwiseXor %uint %506 %uint_4294967295
        %508 = OpCompositeExtract %uint %500 1
        %509 = OpBitwiseXor %uint %508 %uint_4294967295
        %510 = OpShiftRightLogical %uint %507 %uint_1
        %511 = OpBitwiseAnd %uint %507 %uint_1
        %512 = OpIAdd %uint %510 %511
        %513 = OpShiftRightLogical %uint %512 %uint_31
        %514 = OpISub %uint %uint_0 %506
        %515 = OpCompositeExtract %uint %498 0
        %516 = OpShiftRightLogical %uint %515 %uint_1
        %517 = OpShiftRightLogical %uint %514 %uint_1
        %518 = OpIAdd %uint %517 %516
        %519 = OpBitwiseAnd %uint %515 %uint_1
        %520 = OpBitwiseAnd %uint %519 %514
        %521 = OpIAdd %uint %518 %520
        %522 = OpShiftRightLogical %uint %521 %uint_31
        %523 = OpISub %uint %515 %506
        %524 = OpCompositeExtract %uint %498 1
        %526 = OpVectorShuffle %v2uint %499 %525 1 4294967295
        %527 = OpBitwiseOr %v2uint %526 %499
        %528 = OpCompositeExtract %uint %527 0
        %529 = OpINotEqual %bool %528 %uint_0
        %530 = OpSGreaterThan %bool %340 %317
        %532 = OpSelect %bool %529 %530 %false
        %534 = OpSelect %v2uint %532 %533 %270
        %535 = OpCompositeExtract %uint %534 0
        %536 = OpShiftRightLogical %uint %523 %uint_1
        %537 = OpShiftRightLogical %uint %535 %uint_1
        %538 = OpIAdd %uint %537 %536
        %539 = OpBitwiseAnd %uint %523 %uint_1
        %540 = OpBitwiseAnd %uint %539 %535
        %541 = OpIAdd %uint %538 %540
        %542 = OpShiftRightLogical %uint %541 %uint_31
        %543 = OpIAdd %uint %535 %523
        %544 = OpCompositeExtract %uint %534 1
        %545 = OpIAdd %uint %524 %509
        %546 = OpIAdd %uint %545 %513
        %547 = OpIAdd %uint %546 %522
        %548 = OpIAdd %uint %547 %544
        %549 = OpIAdd %uint %548 %542
        %550 = OpCompositeConstruct %v2uint %543 %549
               OpBranch %552
        %552 = OpLabel
        %553 = OpPhi %v2uint %550 %505 %525 %497
        %554 = OpPhi %bool %false %505 %true %497
               OpSelectionMerge %573 None
               OpBranchConditional %554 %557 %573
        %557 = OpLabel
        %558 = OpCompositeExtract %uint %498 0
        %559 = OpCompositeExtract %uint %500 0
        %560 = OpShiftRightLogical %uint %558 %uint_1
        %561 = OpShiftRightLogical %uint %559 %uint_1
        %562 = OpIAdd %uint %561 %560
        %563 = OpBitwiseAnd %uint %558 %uint_1
        %564 = OpBitwiseAnd %uint %563 %559
        %565 = OpIAdd %uint %562 %564
        %566 = OpShiftRightLogical %uint %565 %uint_31
        %567 = OpIAdd %uint %559 %558
        %568 = OpIAdd %v2uint %500 %498
        %569 = OpCompositeExtract %uint %568 1
        %570 = OpIAdd %uint %566 %569
        %571 = OpCompositeConstruct %v2uint %567 %570
               OpBranch %573
        %573 = OpLabel
        %574 = OpPhi %v2uint %571 %557 %553 %552
        %575 = OpCompositeExtract %uint %574 1
        %576 = OpSLessThan %bool %575 %uint_0
               OpSelectionMerge %592 None
               OpBranchConditional %576 %579 %592
        %579 = OpLabel
        %580 = OpCompositeExtract %uint %574 0
        %581 = OpBitwiseXor %uint %580 %uint_4294967295
        %582 = OpBitwiseXor %uint %575 %uint_4294967295
        %583 = OpShiftRightLogical %uint %581 %uint_1
        %584 = OpBitwiseAnd %uint %581 %uint_1
        %585 = OpIAdd %uint %583 %584
        %586 = OpShiftRightLogical %uint %585 %uint_31
        %587 = OpISub %uint %uint_0 %580
        %588 = OpIAdd %uint %586 %582
        %589 = OpCompositeConstruct %v2uint %587 %588
        %590 = OpBitwiseXor %uint %323 %uint_2147483648
               OpBranch %592
        %592 = OpLabel
        %593 = OpPhi %uint %590 %579 %323 %573
        %594 = OpPhi %v2uint %589 %579 %574 %573
        %595 = OpCompositeExtract %uint %594 1
        %596 = OpExtInst %uint %184 FindUMsb %595
        %597 = OpISub %uint %uint_31 %596
        %598 = OpIEqual %bool %595 %uint_0
        %599 = OpCompositeExtract %uint %594 0
        %600 = OpExtInst %uint %184 FindUMsb %599
        %601 = OpISub %uint %uint_31 %600
        %602 = OpIAdd %uint %601 %uint_32
        %603 = OpSelect %uint %598 %602 %597
        %605 = OpISub %uint %uint_3 %603
        %606 = OpIAdd %uint %605 %501
        %607 = OpUGreaterThan %bool %603 %uint_3
               OpSelectionMerge %639 None
               OpBranchConditional %607 %610 %639
        %610 = OpLabel
        %612 = OpIAdd %uint %603 %uint_4294967293
        %613 = OpUGreaterThanEqual %bool %612 %uint_32
               OpSelectionMerge %621 None
               OpBranchConditional %613 %616 %621
        %616 = OpLabel
        %617 = OpBitwiseAnd %uint %612 %uint_31
        %618 = OpShiftLeftLogical %uint %599 %617
        %619 = OpCompositeInsert %v2uint %618 %352 1
               OpBranch %621
        %621 = OpLabel
        %622 = OpPhi %uint %uint_0 %616 %351 %610
        %623 = OpPhi %v2uint %619 %616 %525 %610
        %624 = OpPhi %bool %false %616 %true %610
               OpSelectionMerge %635 None
               OpBranchConditional %624 %627 %635
        %627 = OpLabel
        %628 = OpShiftLeftLogical %uint %595 %612
        %629 = OpBitwiseAnd %uint %605 %uint_31
        %630 = OpShiftRightLogical %uint %599 %629
        %631 = OpBitwiseOr %uint %630 %628
        %632 = OpShiftLeftLogical %uint %599 %612
        %633 = OpCompositeConstruct %v2uint %632 %631
               OpBranch %635
        %635 = OpLabel
        %636 = OpPhi %uint %uint_0 %627 %622 %621
        %637 = OpPhi %v2uint %633 %627 %623 %621
               OpBranch %639
        %639 = OpLabel
        %640 = OpPhi %v2uint %594 %592 %637 %635
        %641 = OpPhi %uint %605 %592 %636 %635
        %642 = OpIAdd %uint %641 %uint_5
        %643 = OpBitwiseAnd %uint %642 %uint_31
        %644 = OpShiftLeftLogical %uint %uint_1 %643
        %645 = OpCompositeInsert %v2uint %644 %352 1
        %646 = OpIAdd %uint %644 %uint_4294967295
        %648 = OpCompositeInsert %v2uint %646 %647 1
        %649 = OpBitwiseAnd %v2uint %648 %640
        %650 = OpCompositeExtract %uint %649 1
        %651 = OpBitwiseAnd %v2uint %645 %640
        %652 = OpIAdd %uint %641 %uint_2
        %653 = OpBitwiseAnd %uint %652 %uint_31
        %655 = OpShiftLeftLogical %uint %uint_4 %653
        %656 = OpUGreaterThan %bool %650 %655
        %657 = OpLogicalNot %bool %656
               OpSelectionMerge %689 None
               OpBranchConditional %657 %660 %689
        %660 = OpLabel
        %661 = OpCompositeExtract %uint %649 0
        %662 = OpVectorShuffle %v2uint %499 %525 1 4294967295
        %663 = OpBitwiseOr %v2uint %662 %499
        %664 = OpCompositeExtract %uint %663 0
        %665 = OpINotEqual %bool %664 %uint_0
        %666 = OpSelect %uint %665 %uint_1 %uint_0
        %667 = OpBitwiseOr %uint %661 %666
        %668 = OpIEqual %bool %650 %655
        %669 = OpINotEqual %bool %667 %uint_0
        %670 = OpSelect %bool %668 %669 %false
        %671 = OpLogicalNot %bool %670
               OpSelectionMerge %685 None
               OpBranchConditional %671 %674 %685
        %674 = OpLabel
        %675 = OpINotEqual %bool %650 %655
        %676 = OpLogicalOr %bool %675 %669
        %677 = OpVectorShuffle %v2uint %651 %525 1 4294967295
        %678 = OpBitwiseOr %v2uint %677 %651
        %679 = OpCompositeExtract %uint %678 0
        %680 = OpIEqual %bool %679 %uint_0
        %682 = OpSelect %bool %676 %true %680
        %683 = OpLogicalNot %bool %682
               OpBranch %685
        %685 = OpLabel
        %686 = OpPhi %v2uint %640 %674 %525 %660
        %687 = OpPhi %bool %683 %674 %670 %660
               OpBranch %689
        %689 = OpLabel
        %690 = OpPhi %v2uint %686 %685 %525 %639
        %691 = OpPhi %bool %687 %685 %656 %639
               OpSelectionMerge %699 None
               OpBranchConditional %691 %694 %699
        %694 = OpLabel
        %695 = OpCompositeExtract %uint %640 1
        %696 = OpIAdd %uint %644 %695
        %697 = OpCompositeInsert %v2uint %696 %640 1
               OpBranch %699
        %699 = OpLabel
        %700 = OpPhi %v2uint %697 %694 %690 %689
        %701 = OpCompositeExtract %uint %700 1
        %702 = OpShiftRightLogical %uint %701 %643
        %704 = OpUGreaterThan %bool %702 %uint_16777215
        %705 = OpSelect %uint %704 %uint_1 %uint_0
        %706 = OpShiftRightLogical %uint %702 %705
        %707 = OpIAdd %uint %606 %705
        %708 = OpINotEqual %bool %706 %uint_0
               OpSelectionMerge %753 None
               OpBranchConditional %708 %711 %753
        %711 = OpLabel
        %713 = OpSLessThanEqual %bool %707 %uint_127
               OpSelectionMerge %741 None
               OpBranchConditional %713 %716 %741
        %716 = OpLabel
        %718 = OpSGreaterThanEqual %bool %707 %uint_4294967170
               OpSelectionMerge %730 None
               OpBranchConditional %718 %721 %730
        %721 = OpLabel
        %722 = OpShiftLeftLogical %uint %707 %uint_23
        %724 = OpIAdd %uint %722 %uint_1065353216
        %725 = OpBitwiseAnd %uint %706 %uint_8388607
        %726 = OpBitwiseOr %uint %724 %725
        %727 = OpBitwiseOr %uint %726 %593
        %728 = OpBitcast %float %727
               OpBranch %730
        %730 = OpLabel
        %731 = OpPhi %float %728 %721 %261 %716
        %732 = OpPhi %bool %false %721 %true %716
               OpSelectionMerge %738 None
               OpBranchConditional %732 %735 %738
        %735 = OpLabel
        %736 = OpBitcast %float %593
               OpBranch %738
        %738 = OpLabel
        %739 = OpPhi %float %736 %735 %731 %730
               OpBranch %741
        %741 = OpLabel
        %742 = OpPhi %float %739 %738 %261 %711
        %743 = OpPhi %bool %false %738 %true %711
               OpSelectionMerge %750 None
               OpBranchConditional %743 %746 %750
        %746 = OpLabel
        %747 = OpBitwiseOr %uint %593 %uint_2139095040
        %748 = OpBitcast %float %747
               OpBranch %750
        %750 = OpLabel
        %751 = OpPhi %float %748 %746 %742 %741
               OpBranch %753
        %753 = OpLabel
        %754 = OpPhi %float %751 %750 %float_0 %699
               OpBranch %756
        %756 = OpLabel
        %757 = OpPhi %float %754 %753 %289 %304
               OpBranch %759
        %759 = OpLabel
        %760 = OpPhi %float %757 %756 %261 %299
        %761 = OpPhi %bool %false %756 %true %299
               OpSelectionMerge %770 None
               OpBranchConditional %761 %764 %770
        %764 = OpLabel
        %766 = OpVectorShuffle %v2float %280 %765 1 4294967295
        %767 = OpFMul %v2float %280 %766
        %768 = OpCompositeExtract %float %767 0
               OpBranch %770
        %770 = OpLabel
        %771 = OpPhi %float %768 %764 %760 %759
               OpBranch %773
        %773 = OpLabel
        %774 = OpPhi %float %771 %770 %289 %259
               OpBranch %776
        %776 = OpLabel
        %777 = OpPhi %float %774 %773 %229 %254
               OpBranch %779
        %779 = OpLabel
        %780 = OpPhi %float %777 %776 %261 %249
               OpBranch %782
        %782 = OpLabel
        %783 = OpPhi %float %780 %779 %261 %244
        %784 = OpPhi %bool %250 %779 %true %244
               OpBranch %786
        %786 = OpLabel
        %787 = OpPhi %float %783 %782 %261 %239
        %788 = OpPhi %bool %784 %782 %240 %239
               OpBranch %790
        %790 = OpLabel
        %791 = OpPhi %float %787 %786 %261 %234
        %792 = OpPhi %bool %788 %786 %true %234
               OpSelectionMerge %798 None
               OpBranchConditional %792 %795 %798
        %795 = OpLabel
        %796 = OpFSub %float %228 %228
               OpBranch %798
        %798 = OpLabel
        %799 = OpPhi %float %796 %795 %791 %790
        %801 = OpIsNan %bool %float_7_54978942en08
        %802 = OpLogicalNot %bool %801
               OpSelectionMerge %1319 None
               OpBranchConditional %802 %805 %1319
        %805 = OpLabel
        %806 = OpIsNan %bool %799
        %807 = OpLogicalNot %bool %806
               OpSelectionMerge %1314 None
               OpBranchConditional %807 %810 %1314
        %810 = OpLabel
        %811 = OpIsInf %bool %204
        %812 = OpLogicalNot %bool %811
               OpSelectionMerge %1309 None
               OpBranchConditional %812 %815 %1309
        %815 = OpLabel
        %816 = OpIsInf %bool %float_7_54978942en08
        %817 = OpLogicalNot %bool %816
               OpSelectionMerge %1304 None
               OpBranchConditional %817 %820 %1304
        %820 = OpLabel
        %821 = OpIsInf %bool %799
        %822 = OpLogicalNot %bool %821
               OpSelectionMerge %1301 None
               OpBranchConditional %822 %825 %1301
        %825 = OpLabel
        %827 = OpCompositeInsert %v2float %204 %826 1
        %828 = OpBitcast %v2uint %827
        %829 = OpBitwiseAnd %v2uint %828 %267
        %830 = OpINotEqual %v2bool %829 %270
        %831 = OpBitwiseAnd %v2uint %828 %272
        %832 = OpIEqual %v2bool %831 %270
        %833 = OpLogicalOr %v2bool %832 %830
        %834 = OpBitwiseAnd %v2uint %828 %277
        %835 = OpBitcast %v2float %834
        %836 = OpSelect %v2float %833 %827 %835
        %837 = OpBitcast %uint %799
        %838 = OpBitwiseAnd %uint %837 %uint_2139095040
        %839 = OpINotEqual %bool %838 %uint_0
        %840 = OpBitwiseAnd %uint %837 %uint_8388607
        %841 = OpIEqual %bool %840 %uint_0
        %842 = OpLogicalOr %bool %841 %839
        %843 = OpBitwiseAnd %uint %837 %uint_2147483648
        %844 = OpBitcast %float %843
        %845 = OpSelect %float %842 %799 %844
        %846 = OpFOrdEqual %v2bool %836 %290
        %847 = OpVectorShuffle %v2bool %846 %292 1 4294967295
        %848 = OpLogicalOr %v2bool %847 %846
        %849 = OpCompositeExtract %bool %848 0
        %850 = OpLogicalNot %bool %849
               OpSelectionMerge %1298 None
               OpBranchConditional %850 %853 %1298
        %853 = OpLabel
        %854 = OpFUnordNotEqual %bool %845 %float_0
               OpSelectionMerge %1285 None
               OpBranchConditional %854 %857 %1285
        %857 = OpLabel
        %858 = OpBitcast %v2uint %836
        %859 = OpCompositeExtract %uint %858 1
        %860 = OpShiftRightLogical %uint %859 %uint_23
        %861 = OpBitwiseAnd %uint %860 %uint_255
        %862 = OpCompositeExtract %uint %858 0
        %863 = OpShiftRightLogical %uint %862 %uint_23
        %864 = OpBitwiseAnd %uint %863 %uint_255
        %865 = OpBitcast %uint %845
        %866 = OpShiftRightLogical %uint %865 %uint_23
        %867 = OpBitwiseAnd %uint %866 %uint_255
        %868 = OpIAdd %uint %867 %uint_4294967169
        %869 = OpBitwiseAnd %v2uint %858 %272
        %870 = OpBitwiseOr %v2uint %869 %319
        %871 = OpBitwiseAnd %uint %865 %uint_2147483648
        %872 = OpBitwiseXor %uint %862 %859
        %873 = OpBitwiseAnd %uint %872 %uint_2147483648
        %874 = OpCompositeExtract %uint %870 0
        %875 = OpCompositeExtract %uint %870 1
        %876 = OpUMulExtended %_struct_58 %875 %874
        %877 = OpCompositeExtract %uint %876 1
        %878 = OpIMul %uint %874 %875
        %879 = OpShiftLeftLogical %uint %877 %uint_14
        %880 = OpShiftRightLogical %uint %878 %uint_18
        %881 = OpBitwiseOr %uint %880 %879
        %882 = OpShiftLeftLogical %uint %878 %uint_14
        %883 = OpCompositeConstruct %v2uint %882 %881
        %884 = OpBitwiseOr %uint %881 %882
        %885 = OpINotEqual %bool %884 %uint_0
        %886 = OpIAdd %uint %861 %uint_4294967042
        %887 = OpIAdd %uint %886 %864
               OpSelectionMerge %1282 None
               OpBranchConditional %885 %890 %1282
        %890 = OpLabel
        %891 = OpISub %uint %887 %868
        %892 = OpShiftLeftLogical %uint %865 %uint_5
        %893 = OpBitwiseAnd %uint %892 %uint_268435424
        %894 = OpBitwiseOr %uint %893 %uint_268435456
        %895 = OpCompositeInsert %v2uint %894 %352 1
        %896 = OpExtInst %uint %184 SAbs %891
        %897 = OpINotEqual %bool %896 %uint_0
               OpSelectionMerge %924 None
               OpBranchConditional %897 %900 %924
        %900 = OpLabel
        %901 = OpUGreaterThanEqual %bool %896 %uint_32
               OpSelectionMerge %909 None
               OpBranchConditional %901 %904 %909
        %904 = OpLabel
        %905 = OpBitwiseAnd %uint %896 %uint_31
        %906 = OpShiftLeftLogical %uint %uint_1 %905
        %907 = OpCompositeInsert %v2uint %906 %352 1
               OpBranch %909
        %909 = OpLabel
        %910 = OpPhi %v2uint %907 %904 %525 %900
        %911 = OpPhi %bool %false %904 %true %900
               OpSelectionMerge %921 None
               OpBranchConditional %911 %914 %921
        %914 = OpLabel
        %915 = OpISub %uint %uint_0 %896
        %916 = OpBitwiseAnd %uint %915 %uint_31
        %917 = OpShiftRightLogical %uint %uint_1 %916
        %918 = OpShiftLeftLogical %uint %uint_1 %896
        %919 = OpCompositeConstruct %v2uint %918 %917
               OpBranch %921
        %921 = OpLabel
        %922 = OpPhi %v2uint %919 %914 %910 %909
               OpBranch %924
        %924 = OpLabel
        %925 = OpPhi %v2uint %7071 %890 %922 %921
        %926 = OpCompositeExtract %uint %925 0
        %927 = OpShiftRightLogical %uint %926 %uint_1
        %928 = OpIAdd %uint %927 %uint_2147483647
        %929 = OpBitwiseAnd %uint %926 %uint_1
        %930 = OpIAdd %uint %928 %929
        %931 = OpShiftRightLogical %uint %930 %uint_31
        %932 = OpIAdd %uint %926 %uint_4294967295
        %933 = OpCompositeExtract %uint %925 1
        %934 = OpIAdd %uint %933 %uint_4294967295
        %935 = OpIAdd %uint %934 %931
        %936 = OpCompositeConstruct %v2uint %932 %935
        %937 = OpSLessThanEqual %bool %891 %uint_0
               OpSelectionMerge %989 None
               OpBranchConditional %937 %940 %989
        %940 = OpLabel
        %941 = OpSGreaterThanEqual %bool %891 %uint_4294967233
               OpSelectionMerge %984 None
               OpBranchConditional %941 %944 %984
        %944 = OpLabel
        %945 = OpISub %uint %uint_0 %891
        %946 = OpBitwiseAnd %v2uint %936 %883
        %947 = OpINotEqual %bool %887 %868
               OpSelectionMerge %979 None
               OpBranchConditional %947 %950 %979
        %950 = OpLabel
        %951 = OpUGreaterThanEqual %bool %945 %uint_32
               OpSelectionMerge %959 None
               OpBranchConditional %951 %954 %959
        %954 = OpLabel
        %955 = OpBitwiseAnd %uint %945 %uint_31
        %956 = OpShiftRightLogical %uint %881 %955
        %957 = OpCompositeInsert %v2uint %956 %417 0
               OpBranch %959
        %959 = OpLabel
        %960 = OpPhi %v2uint %895 %954 %525 %950
        %961 = OpPhi %v2uint %946 %954 %525 %950
        %962 = OpPhi %v2uint %957 %954 %525 %950
        %963 = OpPhi %bool %false %954 %true %950
               OpSelectionMerge %974 None
               OpBranchConditional %963 %966 %974
        %966 = OpLabel
        %967 = OpShiftRightLogical %uint %882 %945
        %968 = OpBitwiseAnd %uint %891 %uint_31
        %969 = OpShiftLeftLogical %uint %881 %968
        %970 = OpBitwiseOr %uint %969 %967
        %971 = OpShiftRightLogical %uint %881 %945
        %972 = OpCompositeConstruct %v2uint %970 %971
               OpBranch %974
        %974 = OpLabel
        %975 = OpPhi %v2uint %895 %966 %960 %959
        %976 = OpPhi %v2uint %946 %966 %961 %959
        %977 = OpPhi %v2uint %972 %966 %962 %959
               OpBranch %979
        %979 = OpLabel
        %980 = OpPhi %v2uint %975 %974 %895 %944
        %981 = OpPhi %v2uint %976 %974 %946 %944
        %982 = OpPhi %v2uint %977 %974 %883 %944
               OpBranch %984
        %984 = OpLabel
        %985 = OpPhi %v2uint %980 %979 %895 %940
        %986 = OpPhi %v2uint %981 %979 %883 %940
        %987 = OpPhi %v2uint %982 %979 %270 %940
               OpBranch %989
        %989 = OpLabel
        %990 = OpPhi %v2uint %985 %984 %525 %924
        %991 = OpPhi %v2uint %986 %984 %525 %924
        %992 = OpPhi %v2uint %987 %984 %525 %924
        %993 = OpPhi %bool %false %984 %true %924
               OpSelectionMerge %1035 None
               OpBranchConditional %993 %996 %1035
        %996 = OpLabel
        %997 = OpULessThanEqual %bool %891 %uint_63
               OpSelectionMerge %1030 None
               OpBranchConditional %997 %1000 %1030
       %1000 = OpLabel
       %1001 = OpBitwiseAnd %uint %935 %894
       %1002 = OpCompositeInsert %v2uint %1001 %352 1
       %1003 = OpUGreaterThanEqual %bool %891 %uint_32
               OpSelectionMerge %1011 None
               OpBranchConditional %1003 %1006 %1011
       %1006 = OpLabel
       %1007 = OpBitwiseAnd %uint %891 %uint_31
       %1008 = OpShiftRightLogical %uint %894 %1007
       %1009 = OpCompositeInsert %v2uint %1008 %417 0
               OpBranch %1011
       %1011 = OpLabel
       %1012 = OpPhi %v2uint %1009 %1006 %525 %1000
       %1013 = OpPhi %v2uint %1002 %1006 %525 %1000
       %1014 = OpPhi %v2uint %883 %1006 %525 %1000
       %1015 = OpPhi %bool %false %1006 %true %1000
               OpSelectionMerge %1025 None
               OpBranchConditional %1015 %1018 %1025
       %1018 = OpLabel
       %1019 = OpISub %uint %uint_0 %891
       %1020 = OpBitwiseAnd %uint %1019 %uint_31
       %1021 = OpShiftLeftLogical %uint %894 %1020
       %1022 = OpShiftRightLogical %uint %894 %891
       %1023 = OpCompositeConstruct %v2uint %1021 %1022
               OpBranch %1025
       %1025 = OpLabel
       %1026 = OpPhi %v2uint %1023 %1018 %1012 %1011
       %1027 = OpPhi %v2uint %1002 %1018 %1013 %1011
       %1028 = OpPhi %v2uint %883 %1018 %1014 %1011
               OpBranch %1030
       %1030 = OpLabel
       %1031 = OpPhi %v2uint %1026 %1025 %270 %996
       %1032 = OpPhi %v2uint %1027 %1025 %895 %996
       %1033 = OpPhi %v2uint %1028 %1025 %883 %996
               OpBranch %1035
       %1035 = OpLabel
       %1036 = OpPhi %v2uint %992 %989 %1033 %1030
       %1037 = OpPhi %v2uint %991 %989 %1032 %1030
       %1038 = OpPhi %v2uint %990 %989 %1031 %1030
       %1039 = OpExtInst %uint %184 SMax %887 %868
       %1040 = OpINotEqual %bool %871 %873
               OpSelectionMerge %1087 None
               OpBranchConditional %1040 %1043 %1087
       %1043 = OpLabel
       %1044 = OpCompositeExtract %uint %1038 0
       %1045 = OpBitwiseXor %uint %1044 %uint_4294967295
       %1046 = OpCompositeExtract %uint %1038 1
       %1047 = OpBitwiseXor %uint %1046 %uint_4294967295
       %1048 = OpShiftRightLogical %uint %1045 %uint_1
       %1049 = OpBitwiseAnd %uint %1045 %uint_1
       %1050 = OpIAdd %uint %1048 %1049
       %1051 = OpShiftRightLogical %uint %1050 %uint_31
       %1052 = OpISub %uint %uint_0 %1044
       %1053 = OpCompositeExtract %uint %1036 0
       %1054 = OpShiftRightLogical %uint %1053 %uint_1
       %1055 = OpShiftRightLogical %uint %1052 %uint_1
       %1056 = OpIAdd %uint %1055 %1054
       %1057 = OpBitwiseAnd %uint %1053 %uint_1
       %1058 = OpBitwiseAnd %uint %1057 %1052
       %1059 = OpIAdd %uint %1056 %1058
       %1060 = OpShiftRightLogical %uint %1059 %uint_31
       %1061 = OpISub %uint %1053 %1044
       %1062 = OpCompositeExtract %uint %1036 1
       %1063 = OpVectorShuffle %v2uint %1037 %525 1 4294967295
       %1064 = OpBitwiseOr %v2uint %1063 %1037
       %1065 = OpCompositeExtract %uint %1064 0
       %1066 = OpINotEqual %bool %1065 %uint_0
       %1067 = OpSGreaterThan %bool %887 %868
       %1068 = OpSelect %bool %1066 %1067 %false
       %1069 = OpSelect %v2uint %1068 %533 %270
       %1070 = OpCompositeExtract %uint %1069 0
       %1071 = OpShiftRightLogical %uint %1061 %uint_1
       %1072 = OpShiftRightLogical %uint %1070 %uint_1
       %1073 = OpIAdd %uint %1072 %1071
       %1074 = OpBitwiseAnd %uint %1061 %uint_1
       %1075 = OpBitwiseAnd %uint %1074 %1070
       %1076 = OpIAdd %uint %1073 %1075
       %1077 = OpShiftRightLogical %uint %1076 %uint_31
       %1078 = OpIAdd %uint %1070 %1061
       %1079 = OpCompositeExtract %uint %1069 1
       %1080 = OpIAdd %uint %1062 %1047
       %1081 = OpIAdd %uint %1080 %1051
       %1082 = OpIAdd %uint %1081 %1060
       %1083 = OpIAdd %uint %1082 %1079
       %1084 = OpIAdd %uint %1083 %1077
       %1085 = OpCompositeConstruct %v2uint %1078 %1084
               OpBranch %1087
       %1087 = OpLabel
       %1088 = OpPhi %v2uint %1085 %1043 %525 %1035
       %1089 = OpPhi %bool %false %1043 %true %1035
               OpSelectionMerge %1108 None
               OpBranchConditional %1089 %1092 %1108
       %1092 = OpLabel
       %1093 = OpCompositeExtract %uint %1036 0
       %1094 = OpCompositeExtract %uint %1038 0
       %1095 = OpShiftRightLogical %uint %1093 %uint_1
       %1096 = OpShiftRightLogical %uint %1094 %uint_1
       %1097 = OpIAdd %uint %1096 %1095
       %1098 = OpBitwiseAnd %uint %1093 %uint_1
       %1099 = OpBitwiseAnd %uint %1098 %1094
       %1100 = OpIAdd %uint %1097 %1099
       %1101 = OpShiftRightLogical %uint %1100 %uint_31
       %1102 = OpIAdd %uint %1094 %1093
       %1103 = OpIAdd %v2uint %1038 %1036
       %1104 = OpCompositeExtract %uint %1103 1
       %1105 = OpIAdd %uint %1101 %1104
       %1106 = OpCompositeConstruct %v2uint %1102 %1105
               OpBranch %1108
       %1108 = OpLabel
       %1109 = OpPhi %v2uint %1106 %1092 %1088 %1087
       %1110 = OpCompositeExtract %uint %1109 1
       %1111 = OpSLessThan %bool %1110 %uint_0
               OpSelectionMerge %1127 None
               OpBranchConditional %1111 %1114 %1127
       %1114 = OpLabel
       %1115 = OpCompositeExtract %uint %1109 0
       %1116 = OpBitwiseXor %uint %1115 %uint_4294967295
       %1117 = OpBitwiseXor %uint %1110 %uint_4294967295
       %1118 = OpShiftRightLogical %uint %1116 %uint_1
       %1119 = OpBitwiseAnd %uint %1116 %uint_1
       %1120 = OpIAdd %uint %1118 %1119
       %1121 = OpShiftRightLogical %uint %1120 %uint_31
       %1122 = OpISub %uint %uint_0 %1115
       %1123 = OpIAdd %uint %1121 %1117
       %1124 = OpCompositeConstruct %v2uint %1122 %1123
       %1125 = OpBitwiseXor %uint %873 %uint_2147483648
               OpBranch %1127
       %1127 = OpLabel
       %1128 = OpPhi %uint %1125 %1114 %873 %1108
       %1129 = OpPhi %v2uint %1124 %1114 %1109 %1108
       %1130 = OpCompositeExtract %uint %1129 1
       %1131 = OpExtInst %uint %184 FindUMsb %1130
       %1132 = OpISub %uint %uint_31 %1131
       %1133 = OpIEqual %bool %1130 %uint_0
       %1134 = OpCompositeExtract %uint %1129 0
       %1135 = OpExtInst %uint %184 FindUMsb %1134
       %1136 = OpISub %uint %uint_31 %1135
       %1137 = OpIAdd %uint %1136 %uint_32
       %1138 = OpSelect %uint %1133 %1137 %1132
       %1139 = OpISub %uint %uint_3 %1138
       %1140 = OpIAdd %uint %1139 %1039
       %1141 = OpUGreaterThan %bool %1138 %uint_3
               OpSelectionMerge %1172 None
               OpBranchConditional %1141 %1144 %1172
       %1144 = OpLabel
       %1145 = OpIAdd %uint %1138 %uint_4294967293
       %1146 = OpUGreaterThanEqual %bool %1145 %uint_32
               OpSelectionMerge %1154 None
               OpBranchConditional %1146 %1149 %1154
       %1149 = OpLabel
       %1150 = OpBitwiseAnd %uint %1145 %uint_31
       %1151 = OpShiftLeftLogical %uint %1134 %1150
       %1152 = OpCompositeInsert %v2uint %1151 %352 1
               OpBranch %1154
       %1154 = OpLabel
       %1155 = OpPhi %uint %uint_0 %1149 %351 %1144
       %1156 = OpPhi %v2uint %1152 %1149 %525 %1144
       %1157 = OpPhi %bool %false %1149 %true %1144
               OpSelectionMerge %1168 None
               OpBranchConditional %1157 %1160 %1168
       %1160 = OpLabel
       %1161 = OpShiftLeftLogical %uint %1130 %1145
       %1162 = OpBitwiseAnd %uint %1139 %uint_31
       %1163 = OpShiftRightLogical %uint %1134 %1162
       %1164 = OpBitwiseOr %uint %1163 %1161
       %1165 = OpShiftLeftLogical %uint %1134 %1145
       %1166 = OpCompositeConstruct %v2uint %1165 %1164
               OpBranch %1168
       %1168 = OpLabel
       %1169 = OpPhi %uint %uint_0 %1160 %1155 %1154
       %1170 = OpPhi %v2uint %1166 %1160 %1156 %1154
               OpBranch %1172
       %1172 = OpLabel
       %1173 = OpPhi %v2uint %1129 %1127 %1170 %1168
       %1174 = OpPhi %uint %1139 %1127 %1169 %1168
       %1175 = OpIAdd %uint %1174 %uint_5
       %1176 = OpBitwiseAnd %uint %1175 %uint_31
       %1177 = OpShiftLeftLogical %uint %uint_1 %1176
       %1178 = OpCompositeInsert %v2uint %1177 %352 1
       %1179 = OpIAdd %uint %1177 %uint_4294967295
       %1180 = OpCompositeInsert %v2uint %1179 %647 1
       %1181 = OpBitwiseAnd %v2uint %1180 %1173
       %1182 = OpCompositeExtract %uint %1181 1
       %1183 = OpBitwiseAnd %v2uint %1178 %1173
       %1184 = OpIAdd %uint %1174 %uint_2
       %1185 = OpBitwiseAnd %uint %1184 %uint_31
       %1186 = OpShiftLeftLogical %uint %uint_4 %1185
       %1187 = OpUGreaterThan %bool %1182 %1186
       %1188 = OpLogicalNot %bool %1187
               OpSelectionMerge %1219 None
               OpBranchConditional %1188 %1191 %1219
       %1191 = OpLabel
       %1192 = OpCompositeExtract %uint %1181 0
       %1193 = OpVectorShuffle %v2uint %1037 %525 1 4294967295
       %1194 = OpBitwiseOr %v2uint %1193 %1037
       %1195 = OpCompositeExtract %uint %1194 0
       %1196 = OpINotEqual %bool %1195 %uint_0
       %1197 = OpSelect %uint %1196 %uint_1 %uint_0
       %1198 = OpBitwiseOr %uint %1192 %1197
       %1199 = OpIEqual %bool %1182 %1186
       %1200 = OpINotEqual %bool %1198 %uint_0
       %1201 = OpSelect %bool %1199 %1200 %false
       %1202 = OpLogicalNot %bool %1201
               OpSelectionMerge %1215 None
               OpBranchConditional %1202 %1205 %1215
       %1205 = OpLabel
       %1206 = OpINotEqual %bool %1182 %1186
       %1207 = OpLogicalOr %bool %1206 %1200
       %1208 = OpVectorShuffle %v2uint %1183 %525 1 4294967295
       %1209 = OpBitwiseOr %v2uint %1208 %1183
       %1210 = OpCompositeExtract %uint %1209 0
       %1211 = OpIEqual %bool %1210 %uint_0
       %1212 = OpSelect %bool %1207 %true %1211
       %1213 = OpLogicalNot %bool %1212
               OpBranch %1215
       %1215 = OpLabel
       %1216 = OpPhi %v2uint %1173 %1205 %525 %1191
       %1217 = OpPhi %bool %1213 %1205 %1201 %1191
               OpBranch %1219
       %1219 = OpLabel
       %1220 = OpPhi %v2uint %1216 %1215 %525 %1172
       %1221 = OpPhi %bool %1217 %1215 %1187 %1172
               OpSelectionMerge %1229 None
               OpBranchConditional %1221 %1224 %1229
       %1224 = OpLabel
       %1225 = OpCompositeExtract %uint %1173 1
       %1226 = OpIAdd %uint %1177 %1225
       %1227 = OpCompositeInsert %v2uint %1226 %1173 1
               OpBranch %1229
       %1229 = OpLabel
       %1230 = OpPhi %v2uint %1227 %1224 %1220 %1219
       %1231 = OpCompositeExtract %uint %1230 1
       %1232 = OpShiftRightLogical %uint %1231 %1176
       %1233 = OpUGreaterThan %bool %1232 %uint_16777215
       %1234 = OpSelect %uint %1233 %uint_1 %uint_0
       %1235 = OpShiftRightLogical %uint %1232 %1234
       %1236 = OpIAdd %uint %1140 %1234
       %1237 = OpINotEqual %bool %1235 %uint_0
               OpSelectionMerge %1279 None
               OpBranchConditional %1237 %1240 %1279
       %1240 = OpLabel
       %1241 = OpSLessThanEqual %bool %1236 %uint_127
               OpSelectionMerge %1267 None
               OpBranchConditional %1241 %1244 %1267
       %1244 = OpLabel
       %1245 = OpSGreaterThanEqual %bool %1236 %uint_4294967170
               OpSelectionMerge %1256 None
               OpBranchConditional %1245 %1248 %1256
       %1248 = OpLabel
       %1249 = OpShiftLeftLogical %uint %1236 %uint_23
       %1250 = OpIAdd %uint %1249 %uint_1065353216
       %1251 = OpBitwiseAnd %uint %1235 %uint_8388607
       %1252 = OpBitwiseOr %uint %1250 %1251
       %1253 = OpBitwiseOr %uint %1252 %1128
       %1254 = OpBitcast %float %1253
               OpBranch %1256
       %1256 = OpLabel
       %1257 = OpPhi %float %1254 %1248 %261 %1244
       %1258 = OpPhi %bool %false %1248 %true %1244
               OpSelectionMerge %1264 None
               OpBranchConditional %1258 %1261 %1264
       %1261 = OpLabel
       %1262 = OpBitcast %float %1128
               OpBranch %1264
       %1264 = OpLabel
       %1265 = OpPhi %float %1262 %1261 %1257 %1256
               OpBranch %1267
       %1267 = OpLabel
       %1268 = OpPhi %float %1265 %1264 %261 %1240
       %1269 = OpPhi %bool %false %1264 %true %1240
               OpSelectionMerge %1276 None
               OpBranchConditional %1269 %1272 %1276
       %1272 = OpLabel
       %1273 = OpBitwiseOr %uint %1128 %uint_2139095040
       %1274 = OpBitcast %float %1273
               OpBranch %1276
       %1276 = OpLabel
       %1277 = OpPhi %float %1274 %1272 %1268 %1267
               OpBranch %1279
       %1279 = OpLabel
       %1280 = OpPhi %float %1277 %1276 %float_0 %1229
               OpBranch %1282
       %1282 = OpLabel
       %1283 = OpPhi %float %1280 %1279 %845 %857
               OpBranch %1285
       %1285 = OpLabel
       %1286 = OpPhi %float %1283 %1282 %261 %853
       %1287 = OpPhi %bool %false %1282 %true %853
               OpSelectionMerge %1295 None
               OpBranchConditional %1287 %1290 %1295
       %1290 = OpLabel
       %1291 = OpVectorShuffle %v2float %836 %765 1 4294967295
       %1292 = OpFMul %v2float %836 %1291
       %1293 = OpCompositeExtract %float %1292 0
               OpBranch %1295
       %1295 = OpLabel
       %1296 = OpPhi %float %1293 %1290 %1286 %1285
               OpBranch %1298
       %1298 = OpLabel
       %1299 = OpPhi %float %1296 %1295 %845 %825
               OpBranch %1301
       %1301 = OpLabel
       %1302 = OpPhi %float %1299 %1298 %799 %820
               OpBranch %1304
       %1304 = OpLabel
       %1305 = OpPhi %float %261 %1301 %799 %815
       %1306 = OpPhi %float %1302 %1301 %261 %815
       %1307 = OpPhi %bool %false %1301 %true %815
               OpBranch %1309
       %1309 = OpLabel
       %1310 = OpPhi %float %1305 %1304 %799 %810
       %1311 = OpPhi %float %1306 %1304 %261 %810
       %1312 = OpPhi %bool %1307 %1304 %811 %810
               OpBranch %1314
       %1314 = OpLabel
       %1315 = OpPhi %float %1310 %1309 %799 %805
       %1316 = OpPhi %float %1311 %1309 %261 %805
       %1317 = OpPhi %bool %1312 %1309 %806 %805
               OpBranch %1319
       %1319 = OpLabel
       %1320 = OpPhi %float %1315 %1314 %799 %798
       %1321 = OpPhi %float %1316 %1314 %261 %798
       %1322 = OpPhi %bool %1317 %1314 %801 %798
               OpBranch %1324
       %1324 = OpLabel
       %1325 = OpPhi %float %1320 %1319 %261 %49
       %1326 = OpPhi %float %1321 %1319 %261 %49
       %1327 = OpPhi %bool %1322 %1319 %false %49
       %1328 = OpPhi %bool %false %1319 %true %49
               OpSelectionMerge %1334 None
               OpBranchConditional %1328 %1331 %1334
       %1331 = OpLabel
       %1332 = OpFSub %float %228 %228
               OpBranch %1334
       %1334 = OpLabel
       %1335 = OpPhi %float %1332 %1331 %1325 %1324
       %1336 = OpPhi %float %261 %1331 %1326 %1324
       %1337 = OpPhi %bool %true %1331 %1327 %1324
               OpSelectionMerge %1344 None
               OpBranchConditional %1337 %1340 %1344
       %1340 = OpLabel
       %1341 = OpFMul %float %204 %float_7_54978942en08
       %1342 = OpFAdd %float %1341 %1335
               OpBranch %1344
       %1344 = OpLabel
       %1345 = OpPhi %float %1342 %1340 %1336 %1334
       %1346 = OpIsNan %bool %226
       %1347 = OpLogicalNot %bool %1346
               OpSelectionMerge %1869 None
               OpBranchConditional %1347 %1350 %1869
       %1350 = OpLabel
       %1351 = OpIsNan %bool %float_1_57079625
       %1352 = OpLogicalNot %bool %1351
               OpSelectionMerge %1865 None
               OpBranchConditional %1352 %1355 %1865
       %1355 = OpLabel
       %1356 = OpIsNan %bool %1345
       %1357 = OpLogicalNot %bool %1356
               OpSelectionMerge %1861 None
               OpBranchConditional %1357 %1360 %1861
       %1360 = OpLabel
       %1361 = OpIsInf %bool %226
       %1362 = OpLogicalNot %bool %1361
               OpSelectionMerge %1857 None
               OpBranchConditional %1362 %1365 %1857
       %1365 = OpLabel
       %1366 = OpIsInf %bool %float_1_57079625
       %1367 = OpLogicalNot %bool %1366
               OpSelectionMerge %1853 None
               OpBranchConditional %1367 %1370 %1853
       %1370 = OpLabel
       %1371 = OpIsInf %bool %1345
       %1372 = OpLogicalNot %bool %1371
               OpSelectionMerge %1850 None
               OpBranchConditional %1372 %1375 %1850
       %1375 = OpLabel
       %1376 = OpCompositeInsert %v2float %226 %262 1
       %1377 = OpBitcast %v2uint %1376
       %1378 = OpBitwiseAnd %v2uint %1377 %267
       %1379 = OpINotEqual %v2bool %1378 %270
       %1380 = OpBitwiseAnd %v2uint %1377 %272
       %1381 = OpIEqual %v2bool %1380 %270
       %1382 = OpLogicalOr %v2bool %1381 %1379
       %1383 = OpBitwiseAnd %v2uint %1377 %277
       %1384 = OpBitcast %v2float %1383
       %1385 = OpSelect %v2float %1382 %1376 %1384
       %1386 = OpBitcast %uint %1345
       %1387 = OpBitwiseAnd %uint %1386 %uint_2139095040
       %1388 = OpINotEqual %bool %1387 %uint_0
       %1389 = OpBitwiseAnd %uint %1386 %uint_8388607
       %1390 = OpIEqual %bool %1389 %uint_0
       %1391 = OpLogicalOr %bool %1390 %1388
       %1392 = OpBitwiseAnd %uint %1386 %uint_2147483648
       %1393 = OpBitcast %float %1392
       %1394 = OpSelect %float %1391 %1345 %1393
       %1395 = OpFOrdEqual %v2bool %1385 %290
       %1396 = OpVectorShuffle %v2bool %1395 %292 1 4294967295
       %1397 = OpLogicalOr %v2bool %1396 %1395
       %1398 = OpCompositeExtract %bool %1397 0
       %1399 = OpLogicalNot %bool %1398
               OpSelectionMerge %1847 None
               OpBranchConditional %1399 %1402 %1847
       %1402 = OpLabel
       %1403 = OpFUnordNotEqual %bool %1394 %float_0
               OpSelectionMerge %1834 None
               OpBranchConditional %1403 %1406 %1834
       %1406 = OpLabel
       %1407 = OpBitcast %v2uint %1385
       %1408 = OpCompositeExtract %uint %1407 1
       %1409 = OpShiftRightLogical %uint %1408 %uint_23
       %1410 = OpBitwiseAnd %uint %1409 %uint_255
       %1411 = OpCompositeExtract %uint %1407 0
       %1412 = OpShiftRightLogical %uint %1411 %uint_23
       %1413 = OpBitwiseAnd %uint %1412 %uint_255
       %1414 = OpBitcast %uint %1394
       %1415 = OpShiftRightLogical %uint %1414 %uint_23
       %1416 = OpBitwiseAnd %uint %1415 %uint_255
       %1417 = OpIAdd %uint %1416 %uint_4294967169
       %1418 = OpBitwiseAnd %v2uint %1407 %272
       %1419 = OpBitwiseOr %v2uint %1418 %319
       %1420 = OpBitwiseAnd %uint %1414 %uint_2147483648
       %1421 = OpBitwiseXor %uint %1411 %1408
       %1422 = OpBitwiseAnd %uint %1421 %uint_2147483648
       %1423 = OpCompositeExtract %uint %1419 0
       %1424 = OpCompositeExtract %uint %1419 1
       %1425 = OpUMulExtended %_struct_58 %1424 %1423
       %1426 = OpCompositeExtract %uint %1425 1
       %1427 = OpIMul %uint %1423 %1424
       %1428 = OpShiftLeftLogical %uint %1426 %uint_14
       %1429 = OpShiftRightLogical %uint %1427 %uint_18
       %1430 = OpBitwiseOr %uint %1429 %1428
       %1431 = OpShiftLeftLogical %uint %1427 %uint_14
       %1432 = OpCompositeConstruct %v2uint %1431 %1430
       %1433 = OpBitwiseOr %uint %1430 %1431
       %1434 = OpINotEqual %bool %1433 %uint_0
       %1435 = OpIAdd %uint %1410 %uint_4294967042
       %1436 = OpIAdd %uint %1435 %1413
               OpSelectionMerge %1831 None
               OpBranchConditional %1434 %1439 %1831
       %1439 = OpLabel
       %1440 = OpISub %uint %1436 %1417
       %1441 = OpShiftLeftLogical %uint %1414 %uint_5
       %1442 = OpBitwiseAnd %uint %1441 %uint_268435424
       %1443 = OpBitwiseOr %uint %1442 %uint_268435456
       %1444 = OpCompositeInsert %v2uint %1443 %352 1
       %1445 = OpExtInst %uint %184 SAbs %1440
       %1446 = OpINotEqual %bool %1445 %uint_0
               OpSelectionMerge %1473 None
               OpBranchConditional %1446 %1449 %1473
       %1449 = OpLabel
       %1450 = OpUGreaterThanEqual %bool %1445 %uint_32
               OpSelectionMerge %1458 None
               OpBranchConditional %1450 %1453 %1458
       %1453 = OpLabel
       %1454 = OpBitwiseAnd %uint %1445 %uint_31
       %1455 = OpShiftLeftLogical %uint %uint_1 %1454
       %1456 = OpCompositeInsert %v2uint %1455 %352 1
               OpBranch %1458
       %1458 = OpLabel
       %1459 = OpPhi %v2uint %1456 %1453 %525 %1449
       %1460 = OpPhi %bool %false %1453 %true %1449
               OpSelectionMerge %1470 None
               OpBranchConditional %1460 %1463 %1470
       %1463 = OpLabel
       %1464 = OpISub %uint %uint_0 %1445
       %1465 = OpBitwiseAnd %uint %1464 %uint_31
       %1466 = OpShiftRightLogical %uint %uint_1 %1465
       %1467 = OpShiftLeftLogical %uint %uint_1 %1445
       %1468 = OpCompositeConstruct %v2uint %1467 %1466
               OpBranch %1470
       %1470 = OpLabel
       %1471 = OpPhi %v2uint %1468 %1463 %1459 %1458
               OpBranch %1473
       %1473 = OpLabel
       %1474 = OpPhi %v2uint %7071 %1439 %1471 %1470
       %1475 = OpCompositeExtract %uint %1474 0
       %1476 = OpShiftRightLogical %uint %1475 %uint_1
       %1477 = OpIAdd %uint %1476 %uint_2147483647
       %1478 = OpBitwiseAnd %uint %1475 %uint_1
       %1479 = OpIAdd %uint %1477 %1478
       %1480 = OpShiftRightLogical %uint %1479 %uint_31
       %1481 = OpIAdd %uint %1475 %uint_4294967295
       %1482 = OpCompositeExtract %uint %1474 1
       %1483 = OpIAdd %uint %1482 %uint_4294967295
       %1484 = OpIAdd %uint %1483 %1480
       %1485 = OpCompositeConstruct %v2uint %1481 %1484
       %1486 = OpSLessThanEqual %bool %1440 %uint_0
               OpSelectionMerge %1538 None
               OpBranchConditional %1486 %1489 %1538
       %1489 = OpLabel
       %1490 = OpSGreaterThanEqual %bool %1440 %uint_4294967233
               OpSelectionMerge %1533 None
               OpBranchConditional %1490 %1493 %1533
       %1493 = OpLabel
       %1494 = OpISub %uint %uint_0 %1440
       %1495 = OpBitwiseAnd %v2uint %1485 %1432
       %1496 = OpINotEqual %bool %1436 %1417
               OpSelectionMerge %1528 None
               OpBranchConditional %1496 %1499 %1528
       %1499 = OpLabel
       %1500 = OpUGreaterThanEqual %bool %1494 %uint_32
               OpSelectionMerge %1508 None
               OpBranchConditional %1500 %1503 %1508
       %1503 = OpLabel
       %1504 = OpBitwiseAnd %uint %1494 %uint_31
       %1505 = OpShiftRightLogical %uint %1430 %1504
       %1506 = OpCompositeInsert %v2uint %1505 %417 0
               OpBranch %1508
       %1508 = OpLabel
       %1509 = OpPhi %v2uint %1444 %1503 %525 %1499
       %1510 = OpPhi %v2uint %1495 %1503 %525 %1499
       %1511 = OpPhi %v2uint %1506 %1503 %525 %1499
       %1512 = OpPhi %bool %false %1503 %true %1499
               OpSelectionMerge %1523 None
               OpBranchConditional %1512 %1515 %1523
       %1515 = OpLabel
       %1516 = OpShiftRightLogical %uint %1431 %1494
       %1517 = OpBitwiseAnd %uint %1440 %uint_31
       %1518 = OpShiftLeftLogical %uint %1430 %1517
       %1519 = OpBitwiseOr %uint %1518 %1516
       %1520 = OpShiftRightLogical %uint %1430 %1494
       %1521 = OpCompositeConstruct %v2uint %1519 %1520
               OpBranch %1523
       %1523 = OpLabel
       %1524 = OpPhi %v2uint %1444 %1515 %1509 %1508
       %1525 = OpPhi %v2uint %1495 %1515 %1510 %1508
       %1526 = OpPhi %v2uint %1521 %1515 %1511 %1508
               OpBranch %1528
       %1528 = OpLabel
       %1529 = OpPhi %v2uint %1524 %1523 %1444 %1493
       %1530 = OpPhi %v2uint %1525 %1523 %1495 %1493
       %1531 = OpPhi %v2uint %1526 %1523 %1432 %1493
               OpBranch %1533
       %1533 = OpLabel
       %1534 = OpPhi %v2uint %1529 %1528 %1444 %1489
       %1535 = OpPhi %v2uint %1530 %1528 %1432 %1489
       %1536 = OpPhi %v2uint %1531 %1528 %270 %1489
               OpBranch %1538
       %1538 = OpLabel
       %1539 = OpPhi %v2uint %1534 %1533 %525 %1473
       %1540 = OpPhi %v2uint %1535 %1533 %525 %1473
       %1541 = OpPhi %v2uint %1536 %1533 %525 %1473
       %1542 = OpPhi %bool %false %1533 %true %1473
               OpSelectionMerge %1584 None
               OpBranchConditional %1542 %1545 %1584
       %1545 = OpLabel
       %1546 = OpULessThanEqual %bool %1440 %uint_63
               OpSelectionMerge %1579 None
               OpBranchConditional %1546 %1549 %1579
       %1549 = OpLabel
       %1550 = OpBitwiseAnd %uint %1484 %1443
       %1551 = OpCompositeInsert %v2uint %1550 %352 1
       %1552 = OpUGreaterThanEqual %bool %1440 %uint_32
               OpSelectionMerge %1560 None
               OpBranchConditional %1552 %1555 %1560
       %1555 = OpLabel
       %1556 = OpBitwiseAnd %uint %1440 %uint_31
       %1557 = OpShiftRightLogical %uint %1443 %1556
       %1558 = OpCompositeInsert %v2uint %1557 %417 0
               OpBranch %1560
       %1560 = OpLabel
       %1561 = OpPhi %v2uint %1558 %1555 %525 %1549
       %1562 = OpPhi %v2uint %1551 %1555 %525 %1549
       %1563 = OpPhi %v2uint %1432 %1555 %525 %1549
       %1564 = OpPhi %bool %false %1555 %true %1549
               OpSelectionMerge %1574 None
               OpBranchConditional %1564 %1567 %1574
       %1567 = OpLabel
       %1568 = OpISub %uint %uint_0 %1440
       %1569 = OpBitwiseAnd %uint %1568 %uint_31
       %1570 = OpShiftLeftLogical %uint %1443 %1569
       %1571 = OpShiftRightLogical %uint %1443 %1440
       %1572 = OpCompositeConstruct %v2uint %1570 %1571
               OpBranch %1574
       %1574 = OpLabel
       %1575 = OpPhi %v2uint %1572 %1567 %1561 %1560
       %1576 = OpPhi %v2uint %1551 %1567 %1562 %1560
       %1577 = OpPhi %v2uint %1432 %1567 %1563 %1560
               OpBranch %1579
       %1579 = OpLabel
       %1580 = OpPhi %v2uint %1575 %1574 %270 %1545
       %1581 = OpPhi %v2uint %1576 %1574 %1444 %1545
       %1582 = OpPhi %v2uint %1577 %1574 %1432 %1545
               OpBranch %1584
       %1584 = OpLabel
       %1585 = OpPhi %v2uint %1541 %1538 %1582 %1579
       %1586 = OpPhi %v2uint %1540 %1538 %1581 %1579
       %1587 = OpPhi %v2uint %1539 %1538 %1580 %1579
       %1588 = OpExtInst %uint %184 SMax %1436 %1417
       %1589 = OpINotEqual %bool %1420 %1422
               OpSelectionMerge %1636 None
               OpBranchConditional %1589 %1592 %1636
       %1592 = OpLabel
       %1593 = OpCompositeExtract %uint %1587 0
       %1594 = OpBitwiseXor %uint %1593 %uint_4294967295
       %1595 = OpCompositeExtract %uint %1587 1
       %1596 = OpBitwiseXor %uint %1595 %uint_4294967295
       %1597 = OpShiftRightLogical %uint %1594 %uint_1
       %1598 = OpBitwiseAnd %uint %1594 %uint_1
       %1599 = OpIAdd %uint %1597 %1598
       %1600 = OpShiftRightLogical %uint %1599 %uint_31
       %1601 = OpISub %uint %uint_0 %1593
       %1602 = OpCompositeExtract %uint %1585 0
       %1603 = OpShiftRightLogical %uint %1602 %uint_1
       %1604 = OpShiftRightLogical %uint %1601 %uint_1
       %1605 = OpIAdd %uint %1604 %1603
       %1606 = OpBitwiseAnd %uint %1602 %uint_1
       %1607 = OpBitwiseAnd %uint %1606 %1601
       %1608 = OpIAdd %uint %1605 %1607
       %1609 = OpShiftRightLogical %uint %1608 %uint_31
       %1610 = OpISub %uint %1602 %1593
       %1611 = OpCompositeExtract %uint %1585 1
       %1612 = OpVectorShuffle %v2uint %1586 %525 1 4294967295
       %1613 = OpBitwiseOr %v2uint %1612 %1586
       %1614 = OpCompositeExtract %uint %1613 0
       %1615 = OpINotEqual %bool %1614 %uint_0
       %1616 = OpSGreaterThan %bool %1436 %1417
       %1617 = OpSelect %bool %1615 %1616 %false
       %1618 = OpSelect %v2uint %1617 %533 %270
       %1619 = OpCompositeExtract %uint %1618 0
       %1620 = OpShiftRightLogical %uint %1610 %uint_1
       %1621 = OpShiftRightLogical %uint %1619 %uint_1
       %1622 = OpIAdd %uint %1621 %1620
       %1623 = OpBitwiseAnd %uint %1610 %uint_1
       %1624 = OpBitwiseAnd %uint %1623 %1619
       %1625 = OpIAdd %uint %1622 %1624
       %1626 = OpShiftRightLogical %uint %1625 %uint_31
       %1627 = OpIAdd %uint %1619 %1610
       %1628 = OpCompositeExtract %uint %1618 1
       %1629 = OpIAdd %uint %1611 %1596
       %1630 = OpIAdd %uint %1629 %1600
       %1631 = OpIAdd %uint %1630 %1609
       %1632 = OpIAdd %uint %1631 %1628
       %1633 = OpIAdd %uint %1632 %1626
       %1634 = OpCompositeConstruct %v2uint %1627 %1633
               OpBranch %1636
       %1636 = OpLabel
       %1637 = OpPhi %v2uint %1634 %1592 %525 %1584
       %1638 = OpPhi %bool %false %1592 %true %1584
               OpSelectionMerge %1657 None
               OpBranchConditional %1638 %1641 %1657
       %1641 = OpLabel
       %1642 = OpCompositeExtract %uint %1585 0
       %1643 = OpCompositeExtract %uint %1587 0
       %1644 = OpShiftRightLogical %uint %1642 %uint_1
       %1645 = OpShiftRightLogical %uint %1643 %uint_1
       %1646 = OpIAdd %uint %1645 %1644
       %1647 = OpBitwiseAnd %uint %1642 %uint_1
       %1648 = OpBitwiseAnd %uint %1647 %1643
       %1649 = OpIAdd %uint %1646 %1648
       %1650 = OpShiftRightLogical %uint %1649 %uint_31
       %1651 = OpIAdd %uint %1643 %1642
       %1652 = OpIAdd %v2uint %1587 %1585
       %1653 = OpCompositeExtract %uint %1652 1
       %1654 = OpIAdd %uint %1650 %1653
       %1655 = OpCompositeConstruct %v2uint %1651 %1654
               OpBranch %1657
       %1657 = OpLabel
       %1658 = OpPhi %v2uint %1655 %1641 %1637 %1636
       %1659 = OpCompositeExtract %uint %1658 1
       %1660 = OpSLessThan %bool %1659 %uint_0
               OpSelectionMerge %1676 None
               OpBranchConditional %1660 %1663 %1676
       %1663 = OpLabel
       %1664 = OpCompositeExtract %uint %1658 0
       %1665 = OpBitwiseXor %uint %1664 %uint_4294967295
       %1666 = OpBitwiseXor %uint %1659 %uint_4294967295
       %1667 = OpShiftRightLogical %uint %1665 %uint_1
       %1668 = OpBitwiseAnd %uint %1665 %uint_1
       %1669 = OpIAdd %uint %1667 %1668
       %1670 = OpShiftRightLogical %uint %1669 %uint_31
       %1671 = OpISub %uint %uint_0 %1664
       %1672 = OpIAdd %uint %1670 %1666
       %1673 = OpCompositeConstruct %v2uint %1671 %1672
       %1674 = OpBitwiseXor %uint %1422 %uint_2147483648
               OpBranch %1676
       %1676 = OpLabel
       %1677 = OpPhi %uint %1674 %1663 %1422 %1657
       %1678 = OpPhi %v2uint %1673 %1663 %1658 %1657
       %1679 = OpCompositeExtract %uint %1678 1
       %1680 = OpExtInst %uint %184 FindUMsb %1679
       %1681 = OpISub %uint %uint_31 %1680
       %1682 = OpIEqual %bool %1679 %uint_0
       %1683 = OpCompositeExtract %uint %1678 0
       %1684 = OpExtInst %uint %184 FindUMsb %1683
       %1685 = OpISub %uint %uint_31 %1684
       %1686 = OpIAdd %uint %1685 %uint_32
       %1687 = OpSelect %uint %1682 %1686 %1681
       %1688 = OpISub %uint %uint_3 %1687
       %1689 = OpIAdd %uint %1688 %1588
       %1690 = OpUGreaterThan %bool %1687 %uint_3
               OpSelectionMerge %1721 None
               OpBranchConditional %1690 %1693 %1721
       %1693 = OpLabel
       %1694 = OpIAdd %uint %1687 %uint_4294967293
       %1695 = OpUGreaterThanEqual %bool %1694 %uint_32
               OpSelectionMerge %1703 None
               OpBranchConditional %1695 %1698 %1703
       %1698 = OpLabel
       %1699 = OpBitwiseAnd %uint %1694 %uint_31
       %1700 = OpShiftLeftLogical %uint %1683 %1699
       %1701 = OpCompositeInsert %v2uint %1700 %352 1
               OpBranch %1703
       %1703 = OpLabel
       %1704 = OpPhi %uint %uint_0 %1698 %351 %1693
       %1705 = OpPhi %v2uint %1701 %1698 %525 %1693
       %1706 = OpPhi %bool %false %1698 %true %1693
               OpSelectionMerge %1717 None
               OpBranchConditional %1706 %1709 %1717
       %1709 = OpLabel
       %1710 = OpShiftLeftLogical %uint %1679 %1694
       %1711 = OpBitwiseAnd %uint %1688 %uint_31
       %1712 = OpShiftRightLogical %uint %1683 %1711
       %1713 = OpBitwiseOr %uint %1712 %1710
       %1714 = OpShiftLeftLogical %uint %1683 %1694
       %1715 = OpCompositeConstruct %v2uint %1714 %1713
               OpBranch %1717
       %1717 = OpLabel
       %1718 = OpPhi %uint %uint_0 %1709 %1704 %1703
       %1719 = OpPhi %v2uint %1715 %1709 %1705 %1703
               OpBranch %1721
       %1721 = OpLabel
       %1722 = OpPhi %v2uint %1678 %1676 %1719 %1717
       %1723 = OpPhi %uint %1688 %1676 %1718 %1717
       %1724 = OpIAdd %uint %1723 %uint_5
       %1725 = OpBitwiseAnd %uint %1724 %uint_31
       %1726 = OpShiftLeftLogical %uint %uint_1 %1725
       %1727 = OpCompositeInsert %v2uint %1726 %352 1
       %1728 = OpIAdd %uint %1726 %uint_4294967295
       %1729 = OpCompositeInsert %v2uint %1728 %647 1
       %1730 = OpBitwiseAnd %v2uint %1729 %1722
       %1731 = OpCompositeExtract %uint %1730 1
       %1732 = OpBitwiseAnd %v2uint %1727 %1722
       %1733 = OpIAdd %uint %1723 %uint_2
       %1734 = OpBitwiseAnd %uint %1733 %uint_31
       %1735 = OpShiftLeftLogical %uint %uint_4 %1734
       %1736 = OpUGreaterThan %bool %1731 %1735
       %1737 = OpLogicalNot %bool %1736
               OpSelectionMerge %1768 None
               OpBranchConditional %1737 %1740 %1768
       %1740 = OpLabel
       %1741 = OpCompositeExtract %uint %1730 0
       %1742 = OpVectorShuffle %v2uint %1586 %525 1 4294967295
       %1743 = OpBitwiseOr %v2uint %1742 %1586
       %1744 = OpCompositeExtract %uint %1743 0
       %1745 = OpINotEqual %bool %1744 %uint_0
       %1746 = OpSelect %uint %1745 %uint_1 %uint_0
       %1747 = OpBitwiseOr %uint %1741 %1746
       %1748 = OpIEqual %bool %1731 %1735
       %1749 = OpINotEqual %bool %1747 %uint_0
       %1750 = OpSelect %bool %1748 %1749 %false
       %1751 = OpLogicalNot %bool %1750
               OpSelectionMerge %1764 None
               OpBranchConditional %1751 %1754 %1764
       %1754 = OpLabel
       %1755 = OpINotEqual %bool %1731 %1735
       %1756 = OpLogicalOr %bool %1755 %1749
       %1757 = OpVectorShuffle %v2uint %1732 %525 1 4294967295
       %1758 = OpBitwiseOr %v2uint %1757 %1732
       %1759 = OpCompositeExtract %uint %1758 0
       %1760 = OpIEqual %bool %1759 %uint_0
       %1761 = OpSelect %bool %1756 %true %1760
       %1762 = OpLogicalNot %bool %1761
               OpBranch %1764
       %1764 = OpLabel
       %1765 = OpPhi %v2uint %1722 %1754 %525 %1740
       %1766 = OpPhi %bool %1762 %1754 %1750 %1740
               OpBranch %1768
       %1768 = OpLabel
       %1769 = OpPhi %v2uint %1765 %1764 %525 %1721
       %1770 = OpPhi %bool %1766 %1764 %1736 %1721
               OpSelectionMerge %1778 None
               OpBranchConditional %1770 %1773 %1778
       %1773 = OpLabel
       %1774 = OpCompositeExtract %uint %1722 1
       %1775 = OpIAdd %uint %1726 %1774
       %1776 = OpCompositeInsert %v2uint %1775 %1722 1
               OpBranch %1778
       %1778 = OpLabel
       %1779 = OpPhi %v2uint %1776 %1773 %1769 %1768
       %1780 = OpCompositeExtract %uint %1779 1
       %1781 = OpShiftRightLogical %uint %1780 %1725
       %1782 = OpUGreaterThan %bool %1781 %uint_16777215
       %1783 = OpSelect %uint %1782 %uint_1 %uint_0
       %1784 = OpShiftRightLogical %uint %1781 %1783
       %1785 = OpIAdd %uint %1689 %1783
       %1786 = OpINotEqual %bool %1784 %uint_0
               OpSelectionMerge %1828 None
               OpBranchConditional %1786 %1789 %1828
       %1789 = OpLabel
       %1790 = OpSLessThanEqual %bool %1785 %uint_127
               OpSelectionMerge %1816 None
               OpBranchConditional %1790 %1793 %1816
       %1793 = OpLabel
       %1794 = OpSGreaterThanEqual %bool %1785 %uint_4294967170
               OpSelectionMerge %1805 None
               OpBranchConditional %1794 %1797 %1805
       %1797 = OpLabel
       %1798 = OpShiftLeftLogical %uint %1785 %uint_23
       %1799 = OpIAdd %uint %1798 %uint_1065353216
       %1800 = OpBitwiseAnd %uint %1784 %uint_8388607
       %1801 = OpBitwiseOr %uint %1799 %1800
       %1802 = OpBitwiseOr %uint %1801 %1677
       %1803 = OpBitcast %float %1802
               OpBranch %1805
       %1805 = OpLabel
       %1806 = OpPhi %float %1803 %1797 %261 %1793
       %1807 = OpPhi %bool %false %1797 %true %1793
               OpSelectionMerge %1813 None
               OpBranchConditional %1807 %1810 %1813
       %1810 = OpLabel
       %1811 = OpBitcast %float %1677
               OpBranch %1813
       %1813 = OpLabel
       %1814 = OpPhi %float %1811 %1810 %1806 %1805
               OpBranch %1816
       %1816 = OpLabel
       %1817 = OpPhi %float %1814 %1813 %261 %1789
       %1818 = OpPhi %bool %false %1813 %true %1789
               OpSelectionMerge %1825 None
               OpBranchConditional %1818 %1821 %1825
       %1821 = OpLabel
       %1822 = OpBitwiseOr %uint %1677 %uint_2139095040
       %1823 = OpBitcast %float %1822
               OpBranch %1825
       %1825 = OpLabel
       %1826 = OpPhi %float %1823 %1821 %1817 %1816
               OpBranch %1828
       %1828 = OpLabel
       %1829 = OpPhi %float %1826 %1825 %float_0 %1778
               OpBranch %1831
       %1831 = OpLabel
       %1832 = OpPhi %float %1829 %1828 %1394 %1406
               OpBranch %1834
       %1834 = OpLabel
       %1835 = OpPhi %float %1832 %1831 %261 %1402
       %1836 = OpPhi %bool %false %1831 %true %1402
               OpSelectionMerge %1844 None
               OpBranchConditional %1836 %1839 %1844
       %1839 = OpLabel
       %1840 = OpVectorShuffle %v2float %1385 %765 1 4294967295
       %1841 = OpFMul %v2float %1385 %1840
       %1842 = OpCompositeExtract %float %1841 0
               OpBranch %1844
       %1844 = OpLabel
       %1845 = OpPhi %float %1842 %1839 %1835 %1834
               OpBranch %1847
       %1847 = OpLabel
       %1848 = OpPhi %float %1845 %1844 %1394 %1375
               OpBranch %1850
       %1850 = OpLabel
       %1851 = OpPhi %float %1848 %1847 %1345 %1370
               OpBranch %1853
       %1853 = OpLabel
       %1854 = OpPhi %float %1851 %1850 %261 %1365
       %1855 = OpPhi %bool %false %1850 %true %1365
               OpBranch %1857
       %1857 = OpLabel
       %1858 = OpPhi %float %1854 %1853 %261 %1360
       %1859 = OpPhi %bool %1855 %1853 %1361 %1360
               OpBranch %1861
       %1861 = OpLabel
       %1862 = OpPhi %float %1858 %1857 %261 %1355
       %1863 = OpPhi %bool %1859 %1857 %1356 %1355
               OpBranch %1865
       %1865 = OpLabel
       %1866 = OpPhi %float %1862 %1861 %261 %1350
       %1867 = OpPhi %bool %1863 %1861 %1351 %1350
               OpBranch %1869
       %1869 = OpLabel
       %1870 = OpPhi %float %1866 %1865 %261 %1344
       %1871 = OpPhi %bool %1867 %1865 %1346 %1344
               OpSelectionMerge %1878 None
               OpBranchConditional %1871 %1874 %1878
       %1874 = OpLabel
       %1875 = OpFMul %float %226 %float_1_57079625
       %1876 = OpFAdd %float %1875 %1345
               OpBranch %1878
       %1878 = OpLabel
       %1879 = OpPhi %float %1876 %1874 %1870 %1869
       %1880 = OpFAdd %float %228 %1879
       %1881 = OpFSub %float %1880 %228
       %1882 = OpFSub %float %1879 %1881
       %1883 = OpShiftRightLogical %uint %162 %uint_30
       %1884 = OpIAdd %uint %178 %1883
               OpBranch %1886
       %1886 = OpLabel
       %1887 = OpPhi %uint %1884 %1878 %351 %36
       %1888 = OpPhi %float %1880 %1878 %261 %36
       %1889 = OpPhi %float %1882 %1878 %261 %36
       %1890 = OpPhi %bool %false %1878 %true %36
               OpSelectionMerge %3519 None
               OpBranchConditional %1890 %1893 %3519
       %1893 = OpLabel
       %1895 = OpFMul %float %42 %float_0_636619747
       %1897 = OpFAdd %float %1895 %float_0_5
       %1898 = OpExtInst %float %184 Trunc %1897
       %1899 = OpFMul %float %1898 %float_1_57079625
       %1900 = OpFNegate %float %1899
       %1901 = OpIsNan %bool %1898
       %1902 = OpLogicalNot %bool %1901
               OpSelectionMerge %2424 None
               OpBranchConditional %1902 %1905 %2424
       %1905 = OpLabel
       %1906 = OpIsNan %bool %float_1_57079625
       %1907 = OpLogicalNot %bool %1906
               OpSelectionMerge %2420 None
               OpBranchConditional %1907 %1910 %2420
       %1910 = OpLabel
       %1911 = OpIsNan %bool %1900
       %1912 = OpLogicalNot %bool %1911
               OpSelectionMerge %2416 None
               OpBranchConditional %1912 %1915 %2416
       %1915 = OpLabel
       %1916 = OpIsInf %bool %1898
       %1917 = OpLogicalNot %bool %1916
               OpSelectionMerge %2412 None
               OpBranchConditional %1917 %1920 %2412
       %1920 = OpLabel
       %1921 = OpIsInf %bool %float_1_57079625
       %1922 = OpLogicalNot %bool %1921
               OpSelectionMerge %2408 None
               OpBranchConditional %1922 %1925 %2408
       %1925 = OpLabel
       %1926 = OpIsInf %bool %1900
       %1927 = OpLogicalNot %bool %1926
               OpSelectionMerge %2405 None
               OpBranchConditional %1927 %1930 %2405
       %1930 = OpLabel
       %1931 = OpCompositeInsert %v2float %1898 %262 1
       %1932 = OpBitcast %v2uint %1931
       %1933 = OpBitwiseAnd %v2uint %1932 %267
       %1934 = OpINotEqual %v2bool %1933 %270
       %1935 = OpBitwiseAnd %v2uint %1932 %272
       %1936 = OpIEqual %v2bool %1935 %270
       %1937 = OpLogicalOr %v2bool %1936 %1934
       %1938 = OpBitwiseAnd %v2uint %1932 %277
       %1939 = OpBitcast %v2float %1938
       %1940 = OpSelect %v2float %1937 %1931 %1939
       %1941 = OpBitcast %uint %1900
       %1942 = OpBitwiseAnd %uint %1941 %uint_2139095040
       %1943 = OpINotEqual %bool %1942 %uint_0
       %1944 = OpBitwiseAnd %uint %1941 %uint_8388607
       %1945 = OpIEqual %bool %1944 %uint_0
       %1946 = OpLogicalOr %bool %1945 %1943
       %1947 = OpBitwiseAnd %uint %1941 %uint_2147483648
       %1948 = OpBitcast %float %1947
       %1949 = OpSelect %float %1946 %1900 %1948
       %1950 = OpFOrdEqual %v2bool %1940 %290
       %1951 = OpVectorShuffle %v2bool %1950 %292 1 4294967295
       %1952 = OpLogicalOr %v2bool %1951 %1950
       %1953 = OpCompositeExtract %bool %1952 0
       %1954 = OpLogicalNot %bool %1953
               OpSelectionMerge %2402 None
               OpBranchConditional %1954 %1957 %2402
       %1957 = OpLabel
       %1958 = OpFUnordNotEqual %bool %1949 %float_0
               OpSelectionMerge %2389 None
               OpBranchConditional %1958 %1961 %2389
       %1961 = OpLabel
       %1962 = OpBitcast %v2uint %1940
       %1963 = OpCompositeExtract %uint %1962 1
       %1964 = OpShiftRightLogical %uint %1963 %uint_23
       %1965 = OpBitwiseAnd %uint %1964 %uint_255
       %1966 = OpCompositeExtract %uint %1962 0
       %1967 = OpShiftRightLogical %uint %1966 %uint_23
       %1968 = OpBitwiseAnd %uint %1967 %uint_255
       %1969 = OpBitcast %uint %1949
       %1970 = OpShiftRightLogical %uint %1969 %uint_23
       %1971 = OpBitwiseAnd %uint %1970 %uint_255
       %1972 = OpIAdd %uint %1971 %uint_4294967169
       %1973 = OpBitwiseAnd %v2uint %1962 %272
       %1974 = OpBitwiseOr %v2uint %1973 %319
       %1975 = OpBitwiseAnd %uint %1969 %uint_2147483648
       %1976 = OpBitwiseXor %uint %1966 %1963
       %1977 = OpBitwiseAnd %uint %1976 %uint_2147483648
       %1978 = OpCompositeExtract %uint %1974 0
       %1979 = OpCompositeExtract %uint %1974 1
       %1980 = OpUMulExtended %_struct_58 %1979 %1978
       %1981 = OpCompositeExtract %uint %1980 1
       %1982 = OpIMul %uint %1978 %1979
       %1983 = OpShiftLeftLogical %uint %1981 %uint_14
       %1984 = OpShiftRightLogical %uint %1982 %uint_18
       %1985 = OpBitwiseOr %uint %1984 %1983
       %1986 = OpShiftLeftLogical %uint %1982 %uint_14
       %1987 = OpCompositeConstruct %v2uint %1986 %1985
       %1988 = OpBitwiseOr %uint %1985 %1986
       %1989 = OpINotEqual %bool %1988 %uint_0
       %1990 = OpIAdd %uint %1965 %uint_4294967042
       %1991 = OpIAdd %uint %1990 %1968
               OpSelectionMerge %2386 None
               OpBranchConditional %1989 %1994 %2386
       %1994 = OpLabel
       %1995 = OpISub %uint %1991 %1972
       %1996 = OpShiftLeftLogical %uint %1969 %uint_5
       %1997 = OpBitwiseAnd %uint %1996 %uint_268435424
       %1998 = OpBitwiseOr %uint %1997 %uint_268435456
       %1999 = OpCompositeInsert %v2uint %1998 %352 1
       %2000 = OpExtInst %uint %184 SAbs %1995
       %2001 = OpINotEqual %bool %2000 %uint_0
               OpSelectionMerge %2028 None
               OpBranchConditional %2001 %2004 %2028
       %2004 = OpLabel
       %2005 = OpUGreaterThanEqual %bool %2000 %uint_32
               OpSelectionMerge %2013 None
               OpBranchConditional %2005 %2008 %2013
       %2008 = OpLabel
       %2009 = OpBitwiseAnd %uint %2000 %uint_31
       %2010 = OpShiftLeftLogical %uint %uint_1 %2009
       %2011 = OpCompositeInsert %v2uint %2010 %352 1
               OpBranch %2013
       %2013 = OpLabel
       %2014 = OpPhi %v2uint %2011 %2008 %525 %2004
       %2015 = OpPhi %bool %false %2008 %true %2004
               OpSelectionMerge %2025 None
               OpBranchConditional %2015 %2018 %2025
       %2018 = OpLabel
       %2019 = OpISub %uint %uint_0 %2000
       %2020 = OpBitwiseAnd %uint %2019 %uint_31
       %2021 = OpShiftRightLogical %uint %uint_1 %2020
       %2022 = OpShiftLeftLogical %uint %uint_1 %2000
       %2023 = OpCompositeConstruct %v2uint %2022 %2021
               OpBranch %2025
       %2025 = OpLabel
       %2026 = OpPhi %v2uint %2023 %2018 %2014 %2013
               OpBranch %2028
       %2028 = OpLabel
       %2029 = OpPhi %v2uint %7071 %1994 %2026 %2025
       %2030 = OpCompositeExtract %uint %2029 0
       %2031 = OpShiftRightLogical %uint %2030 %uint_1
       %2032 = OpIAdd %uint %2031 %uint_2147483647
       %2033 = OpBitwiseAnd %uint %2030 %uint_1
       %2034 = OpIAdd %uint %2032 %2033
       %2035 = OpShiftRightLogical %uint %2034 %uint_31
       %2036 = OpIAdd %uint %2030 %uint_4294967295
       %2037 = OpCompositeExtract %uint %2029 1
       %2038 = OpIAdd %uint %2037 %uint_4294967295
       %2039 = OpIAdd %uint %2038 %2035
       %2040 = OpCompositeConstruct %v2uint %2036 %2039
       %2041 = OpSLessThanEqual %bool %1995 %uint_0
               OpSelectionMerge %2093 None
               OpBranchConditional %2041 %2044 %2093
       %2044 = OpLabel
       %2045 = OpSGreaterThanEqual %bool %1995 %uint_4294967233
               OpSelectionMerge %2088 None
               OpBranchConditional %2045 %2048 %2088
       %2048 = OpLabel
       %2049 = OpISub %uint %uint_0 %1995
       %2050 = OpBitwiseAnd %v2uint %2040 %1987
       %2051 = OpINotEqual %bool %1991 %1972
               OpSelectionMerge %2083 None
               OpBranchConditional %2051 %2054 %2083
       %2054 = OpLabel
       %2055 = OpUGreaterThanEqual %bool %2049 %uint_32
               OpSelectionMerge %2063 None
               OpBranchConditional %2055 %2058 %2063
       %2058 = OpLabel
       %2059 = OpBitwiseAnd %uint %2049 %uint_31
       %2060 = OpShiftRightLogical %uint %1985 %2059
       %2061 = OpCompositeInsert %v2uint %2060 %417 0
               OpBranch %2063
       %2063 = OpLabel
       %2064 = OpPhi %v2uint %1999 %2058 %525 %2054
       %2065 = OpPhi %v2uint %2050 %2058 %525 %2054
       %2066 = OpPhi %v2uint %2061 %2058 %525 %2054
       %2067 = OpPhi %bool %false %2058 %true %2054
               OpSelectionMerge %2078 None
               OpBranchConditional %2067 %2070 %2078
       %2070 = OpLabel
       %2071 = OpShiftRightLogical %uint %1986 %2049
       %2072 = OpBitwiseAnd %uint %1995 %uint_31
       %2073 = OpShiftLeftLogical %uint %1985 %2072
       %2074 = OpBitwiseOr %uint %2073 %2071
       %2075 = OpShiftRightLogical %uint %1985 %2049
       %2076 = OpCompositeConstruct %v2uint %2074 %2075
               OpBranch %2078
       %2078 = OpLabel
       %2079 = OpPhi %v2uint %1999 %2070 %2064 %2063
       %2080 = OpPhi %v2uint %2050 %2070 %2065 %2063
       %2081 = OpPhi %v2uint %2076 %2070 %2066 %2063
               OpBranch %2083
       %2083 = OpLabel
       %2084 = OpPhi %v2uint %2079 %2078 %1999 %2048
       %2085 = OpPhi %v2uint %2080 %2078 %2050 %2048
       %2086 = OpPhi %v2uint %2081 %2078 %1987 %2048
               OpBranch %2088
       %2088 = OpLabel
       %2089 = OpPhi %v2uint %2084 %2083 %1999 %2044
       %2090 = OpPhi %v2uint %2085 %2083 %1987 %2044
       %2091 = OpPhi %v2uint %2086 %2083 %270 %2044
               OpBranch %2093
       %2093 = OpLabel
       %2094 = OpPhi %v2uint %2089 %2088 %525 %2028
       %2095 = OpPhi %v2uint %2090 %2088 %525 %2028
       %2096 = OpPhi %v2uint %2091 %2088 %525 %2028
       %2097 = OpPhi %bool %false %2088 %true %2028
               OpSelectionMerge %2139 None
               OpBranchConditional %2097 %2100 %2139
       %2100 = OpLabel
       %2101 = OpULessThanEqual %bool %1995 %uint_63
               OpSelectionMerge %2134 None
               OpBranchConditional %2101 %2104 %2134
       %2104 = OpLabel
       %2105 = OpBitwiseAnd %uint %2039 %1998
       %2106 = OpCompositeInsert %v2uint %2105 %352 1
       %2107 = OpUGreaterThanEqual %bool %1995 %uint_32
               OpSelectionMerge %2115 None
               OpBranchConditional %2107 %2110 %2115
       %2110 = OpLabel
       %2111 = OpBitwiseAnd %uint %1995 %uint_31
       %2112 = OpShiftRightLogical %uint %1998 %2111
       %2113 = OpCompositeInsert %v2uint %2112 %417 0
               OpBranch %2115
       %2115 = OpLabel
       %2116 = OpPhi %v2uint %2113 %2110 %525 %2104
       %2117 = OpPhi %v2uint %2106 %2110 %525 %2104
       %2118 = OpPhi %v2uint %1987 %2110 %525 %2104
       %2119 = OpPhi %bool %false %2110 %true %2104
               OpSelectionMerge %2129 None
               OpBranchConditional %2119 %2122 %2129
       %2122 = OpLabel
       %2123 = OpISub %uint %uint_0 %1995
       %2124 = OpBitwiseAnd %uint %2123 %uint_31
       %2125 = OpShiftLeftLogical %uint %1998 %2124
       %2126 = OpShiftRightLogical %uint %1998 %1995
       %2127 = OpCompositeConstruct %v2uint %2125 %2126
               OpBranch %2129
       %2129 = OpLabel
       %2130 = OpPhi %v2uint %2127 %2122 %2116 %2115
       %2131 = OpPhi %v2uint %2106 %2122 %2117 %2115
       %2132 = OpPhi %v2uint %1987 %2122 %2118 %2115
               OpBranch %2134
       %2134 = OpLabel
       %2135 = OpPhi %v2uint %2130 %2129 %270 %2100
       %2136 = OpPhi %v2uint %2131 %2129 %1999 %2100
       %2137 = OpPhi %v2uint %2132 %2129 %1987 %2100
               OpBranch %2139
       %2139 = OpLabel
       %2140 = OpPhi %v2uint %2096 %2093 %2137 %2134
       %2141 = OpPhi %v2uint %2095 %2093 %2136 %2134
       %2142 = OpPhi %v2uint %2094 %2093 %2135 %2134
       %2143 = OpExtInst %uint %184 SMax %1991 %1972
       %2144 = OpINotEqual %bool %1975 %1977
               OpSelectionMerge %2191 None
               OpBranchConditional %2144 %2147 %2191
       %2147 = OpLabel
       %2148 = OpCompositeExtract %uint %2142 0
       %2149 = OpBitwiseXor %uint %2148 %uint_4294967295
       %2150 = OpCompositeExtract %uint %2142 1
       %2151 = OpBitwiseXor %uint %2150 %uint_4294967295
       %2152 = OpShiftRightLogical %uint %2149 %uint_1
       %2153 = OpBitwiseAnd %uint %2149 %uint_1
       %2154 = OpIAdd %uint %2152 %2153
       %2155 = OpShiftRightLogical %uint %2154 %uint_31
       %2156 = OpISub %uint %uint_0 %2148
       %2157 = OpCompositeExtract %uint %2140 0
       %2158 = OpShiftRightLogical %uint %2157 %uint_1
       %2159 = OpShiftRightLogical %uint %2156 %uint_1
       %2160 = OpIAdd %uint %2159 %2158
       %2161 = OpBitwiseAnd %uint %2157 %uint_1
       %2162 = OpBitwiseAnd %uint %2161 %2156
       %2163 = OpIAdd %uint %2160 %2162
       %2164 = OpShiftRightLogical %uint %2163 %uint_31
       %2165 = OpISub %uint %2157 %2148
       %2166 = OpCompositeExtract %uint %2140 1
       %2167 = OpVectorShuffle %v2uint %2141 %525 1 4294967295
       %2168 = OpBitwiseOr %v2uint %2167 %2141
       %2169 = OpCompositeExtract %uint %2168 0
       %2170 = OpINotEqual %bool %2169 %uint_0
       %2171 = OpSGreaterThan %bool %1991 %1972
       %2172 = OpSelect %bool %2170 %2171 %false
       %2173 = OpSelect %v2uint %2172 %533 %270
       %2174 = OpCompositeExtract %uint %2173 0
       %2175 = OpShiftRightLogical %uint %2165 %uint_1
       %2176 = OpShiftRightLogical %uint %2174 %uint_1
       %2177 = OpIAdd %uint %2176 %2175
       %2178 = OpBitwiseAnd %uint %2165 %uint_1
       %2179 = OpBitwiseAnd %uint %2178 %2174
       %2180 = OpIAdd %uint %2177 %2179
       %2181 = OpShiftRightLogical %uint %2180 %uint_31
       %2182 = OpIAdd %uint %2174 %2165
       %2183 = OpCompositeExtract %uint %2173 1
       %2184 = OpIAdd %uint %2166 %2151
       %2185 = OpIAdd %uint %2184 %2155
       %2186 = OpIAdd %uint %2185 %2164
       %2187 = OpIAdd %uint %2186 %2183
       %2188 = OpIAdd %uint %2187 %2181
       %2189 = OpCompositeConstruct %v2uint %2182 %2188
               OpBranch %2191
       %2191 = OpLabel
       %2192 = OpPhi %v2uint %2189 %2147 %525 %2139
       %2193 = OpPhi %bool %false %2147 %true %2139
               OpSelectionMerge %2212 None
               OpBranchConditional %2193 %2196 %2212
       %2196 = OpLabel
       %2197 = OpCompositeExtract %uint %2140 0
       %2198 = OpCompositeExtract %uint %2142 0
       %2199 = OpShiftRightLogical %uint %2197 %uint_1
       %2200 = OpShiftRightLogical %uint %2198 %uint_1
       %2201 = OpIAdd %uint %2200 %2199
       %2202 = OpBitwiseAnd %uint %2197 %uint_1
       %2203 = OpBitwiseAnd %uint %2202 %2198
       %2204 = OpIAdd %uint %2201 %2203
       %2205 = OpShiftRightLogical %uint %2204 %uint_31
       %2206 = OpIAdd %uint %2198 %2197
       %2207 = OpIAdd %v2uint %2142 %2140
       %2208 = OpCompositeExtract %uint %2207 1
       %2209 = OpIAdd %uint %2205 %2208
       %2210 = OpCompositeConstruct %v2uint %2206 %2209
               OpBranch %2212
       %2212 = OpLabel
       %2213 = OpPhi %v2uint %2210 %2196 %2192 %2191
       %2214 = OpCompositeExtract %uint %2213 1
       %2215 = OpSLessThan %bool %2214 %uint_0
               OpSelectionMerge %2231 None
               OpBranchConditional %2215 %2218 %2231
       %2218 = OpLabel
       %2219 = OpCompositeExtract %uint %2213 0
       %2220 = OpBitwiseXor %uint %2219 %uint_4294967295
       %2221 = OpBitwiseXor %uint %2214 %uint_4294967295
       %2222 = OpShiftRightLogical %uint %2220 %uint_1
       %2223 = OpBitwiseAnd %uint %2220 %uint_1
       %2224 = OpIAdd %uint %2222 %2223
       %2225 = OpShiftRightLogical %uint %2224 %uint_31
       %2226 = OpISub %uint %uint_0 %2219
       %2227 = OpIAdd %uint %2225 %2221
       %2228 = OpCompositeConstruct %v2uint %2226 %2227
       %2229 = OpBitwiseXor %uint %1977 %uint_2147483648
               OpBranch %2231
       %2231 = OpLabel
       %2232 = OpPhi %uint %2229 %2218 %1977 %2212
       %2233 = OpPhi %v2uint %2228 %2218 %2213 %2212
       %2234 = OpCompositeExtract %uint %2233 1
       %2235 = OpExtInst %uint %184 FindUMsb %2234
       %2236 = OpISub %uint %uint_31 %2235
       %2237 = OpIEqual %bool %2234 %uint_0
       %2238 = OpCompositeExtract %uint %2233 0
       %2239 = OpExtInst %uint %184 FindUMsb %2238
       %2240 = OpISub %uint %uint_31 %2239
       %2241 = OpIAdd %uint %2240 %uint_32
       %2242 = OpSelect %uint %2237 %2241 %2236
       %2243 = OpISub %uint %uint_3 %2242
       %2244 = OpIAdd %uint %2243 %2143
       %2245 = OpUGreaterThan %bool %2242 %uint_3
               OpSelectionMerge %2276 None
               OpBranchConditional %2245 %2248 %2276
       %2248 = OpLabel
       %2249 = OpIAdd %uint %2242 %uint_4294967293
       %2250 = OpUGreaterThanEqual %bool %2249 %uint_32
               OpSelectionMerge %2258 None
               OpBranchConditional %2250 %2253 %2258
       %2253 = OpLabel
       %2254 = OpBitwiseAnd %uint %2249 %uint_31
       %2255 = OpShiftLeftLogical %uint %2238 %2254
       %2256 = OpCompositeInsert %v2uint %2255 %352 1
               OpBranch %2258
       %2258 = OpLabel
       %2259 = OpPhi %uint %uint_0 %2253 %351 %2248
       %2260 = OpPhi %v2uint %2256 %2253 %525 %2248
       %2261 = OpPhi %bool %false %2253 %true %2248
               OpSelectionMerge %2272 None
               OpBranchConditional %2261 %2264 %2272
       %2264 = OpLabel
       %2265 = OpShiftLeftLogical %uint %2234 %2249
       %2266 = OpBitwiseAnd %uint %2243 %uint_31
       %2267 = OpShiftRightLogical %uint %2238 %2266
       %2268 = OpBitwiseOr %uint %2267 %2265
       %2269 = OpShiftLeftLogical %uint %2238 %2249
       %2270 = OpCompositeConstruct %v2uint %2269 %2268
               OpBranch %2272
       %2272 = OpLabel
       %2273 = OpPhi %uint %uint_0 %2264 %2259 %2258
       %2274 = OpPhi %v2uint %2270 %2264 %2260 %2258
               OpBranch %2276
       %2276 = OpLabel
       %2277 = OpPhi %v2uint %2233 %2231 %2274 %2272
       %2278 = OpPhi %uint %2243 %2231 %2273 %2272
       %2279 = OpIAdd %uint %2278 %uint_5
       %2280 = OpBitwiseAnd %uint %2279 %uint_31
       %2281 = OpShiftLeftLogical %uint %uint_1 %2280
       %2282 = OpCompositeInsert %v2uint %2281 %352 1
       %2283 = OpIAdd %uint %2281 %uint_4294967295
       %2284 = OpCompositeInsert %v2uint %2283 %647 1
       %2285 = OpBitwiseAnd %v2uint %2284 %2277
       %2286 = OpCompositeExtract %uint %2285 1
       %2287 = OpBitwiseAnd %v2uint %2282 %2277
       %2288 = OpIAdd %uint %2278 %uint_2
       %2289 = OpBitwiseAnd %uint %2288 %uint_31
       %2290 = OpShiftLeftLogical %uint %uint_4 %2289
       %2291 = OpUGreaterThan %bool %2286 %2290
       %2292 = OpLogicalNot %bool %2291
               OpSelectionMerge %2323 None
               OpBranchConditional %2292 %2295 %2323
       %2295 = OpLabel
       %2296 = OpCompositeExtract %uint %2285 0
       %2297 = OpVectorShuffle %v2uint %2141 %525 1 4294967295
       %2298 = OpBitwiseOr %v2uint %2297 %2141
       %2299 = OpCompositeExtract %uint %2298 0
       %2300 = OpINotEqual %bool %2299 %uint_0
       %2301 = OpSelect %uint %2300 %uint_1 %uint_0
       %2302 = OpBitwiseOr %uint %2296 %2301
       %2303 = OpIEqual %bool %2286 %2290
       %2304 = OpINotEqual %bool %2302 %uint_0
       %2305 = OpSelect %bool %2303 %2304 %false
       %2306 = OpLogicalNot %bool %2305
               OpSelectionMerge %2319 None
               OpBranchConditional %2306 %2309 %2319
       %2309 = OpLabel
       %2310 = OpINotEqual %bool %2286 %2290
       %2311 = OpLogicalOr %bool %2310 %2304
       %2312 = OpVectorShuffle %v2uint %2287 %525 1 4294967295
       %2313 = OpBitwiseOr %v2uint %2312 %2287
       %2314 = OpCompositeExtract %uint %2313 0
       %2315 = OpIEqual %bool %2314 %uint_0
       %2316 = OpSelect %bool %2311 %true %2315
       %2317 = OpLogicalNot %bool %2316
               OpBranch %2319
       %2319 = OpLabel
       %2320 = OpPhi %v2uint %2277 %2309 %525 %2295
       %2321 = OpPhi %bool %2317 %2309 %2305 %2295
               OpBranch %2323
       %2323 = OpLabel
       %2324 = OpPhi %v2uint %2320 %2319 %525 %2276
       %2325 = OpPhi %bool %2321 %2319 %2291 %2276
               OpSelectionMerge %2333 None
               OpBranchConditional %2325 %2328 %2333
       %2328 = OpLabel
       %2329 = OpCompositeExtract %uint %2277 1
       %2330 = OpIAdd %uint %2281 %2329
       %2331 = OpCompositeInsert %v2uint %2330 %2277 1
               OpBranch %2333
       %2333 = OpLabel
       %2334 = OpPhi %v2uint %2331 %2328 %2324 %2323
       %2335 = OpCompositeExtract %uint %2334 1
       %2336 = OpShiftRightLogical %uint %2335 %2280
       %2337 = OpUGreaterThan %bool %2336 %uint_16777215
       %2338 = OpSelect %uint %2337 %uint_1 %uint_0
       %2339 = OpShiftRightLogical %uint %2336 %2338
       %2340 = OpIAdd %uint %2244 %2338
       %2341 = OpINotEqual %bool %2339 %uint_0
               OpSelectionMerge %2383 None
               OpBranchConditional %2341 %2344 %2383
       %2344 = OpLabel
       %2345 = OpSLessThanEqual %bool %2340 %uint_127
               OpSelectionMerge %2371 None
               OpBranchConditional %2345 %2348 %2371
       %2348 = OpLabel
       %2349 = OpSGreaterThanEqual %bool %2340 %uint_4294967170
               OpSelectionMerge %2360 None
               OpBranchConditional %2349 %2352 %2360
       %2352 = OpLabel
       %2353 = OpShiftLeftLogical %uint %2340 %uint_23
       %2354 = OpIAdd %uint %2353 %uint_1065353216
       %2355 = OpBitwiseAnd %uint %2339 %uint_8388607
       %2356 = OpBitwiseOr %uint %2354 %2355
       %2357 = OpBitwiseOr %uint %2356 %2232
       %2358 = OpBitcast %float %2357
               OpBranch %2360
       %2360 = OpLabel
       %2361 = OpPhi %float %2358 %2352 %261 %2348
       %2362 = OpPhi %bool %false %2352 %true %2348
               OpSelectionMerge %2368 None
               OpBranchConditional %2362 %2365 %2368
       %2365 = OpLabel
       %2366 = OpBitcast %float %2232
               OpBranch %2368
       %2368 = OpLabel
       %2369 = OpPhi %float %2366 %2365 %2361 %2360
               OpBranch %2371
       %2371 = OpLabel
       %2372 = OpPhi %float %2369 %2368 %261 %2344
       %2373 = OpPhi %bool %false %2368 %true %2344
               OpSelectionMerge %2380 None
               OpBranchConditional %2373 %2376 %2380
       %2376 = OpLabel
       %2377 = OpBitwiseOr %uint %2232 %uint_2139095040
       %2378 = OpBitcast %float %2377
               OpBranch %2380
       %2380 = OpLabel
       %2381 = OpPhi %float %2378 %2376 %2372 %2371
               OpBranch %2383
       %2383 = OpLabel
       %2384 = OpPhi %float %2381 %2380 %float_0 %2333
               OpBranch %2386
       %2386 = OpLabel
       %2387 = OpPhi %float %2384 %2383 %1949 %1961
               OpBranch %2389
       %2389 = OpLabel
       %2390 = OpPhi %float %2387 %2386 %261 %1957
       %2391 = OpPhi %bool %false %2386 %true %1957
               OpSelectionMerge %2399 None
               OpBranchConditional %2391 %2394 %2399
       %2394 = OpLabel
       %2395 = OpVectorShuffle %v2float %1940 %765 1 4294967295
       %2396 = OpFMul %v2float %1940 %2395
       %2397 = OpCompositeExtract %float %2396 0
               OpBranch %2399
       %2399 = OpLabel
       %2400 = OpPhi %float %2397 %2394 %2390 %2389
               OpBranch %2402
       %2402 = OpLabel
       %2403 = OpPhi %float %2400 %2399 %1949 %1930
               OpBranch %2405
       %2405 = OpLabel
       %2406 = OpPhi %float %2403 %2402 %1900 %1925
               OpBranch %2408
       %2408 = OpLabel
       %2409 = OpPhi %float %2406 %2405 %261 %1920
       %2410 = OpPhi %bool %false %2405 %true %1920
               OpBranch %2412
       %2412 = OpLabel
       %2413 = OpPhi %float %2409 %2408 %261 %1915
       %2414 = OpPhi %bool %2410 %2408 %1916 %1915
               OpBranch %2416
       %2416 = OpLabel
       %2417 = OpPhi %float %2413 %2412 %261 %1910
       %2418 = OpPhi %bool %2414 %2412 %1911 %1910
               OpBranch %2420
       %2420 = OpLabel
       %2421 = OpPhi %float %2417 %2416 %261 %1905
       %2422 = OpPhi %bool %2418 %2416 %1906 %1905
               OpBranch %2424
       %2424 = OpLabel
       %2425 = OpPhi %float %2421 %2420 %261 %1893
       %2426 = OpPhi %bool %2422 %2420 %1901 %1893
               OpSelectionMerge %2432 None
               OpBranchConditional %2426 %2429 %2432
       %2429 = OpLabel
       %2430 = OpFSub %float %1899 %1899
               OpBranch %2432
       %2432 = OpLabel
       %2433 = OpPhi %float %2430 %2429 %2425 %2424
       %2434 = OpFSub %float %42 %1899
       %2435 = OpFSub %float %42 %2434
       %2436 = OpFSub %float %2435 %1899
       %2437 = OpFSub %float %2436 %2433
       %2438 = OpFAdd %float %2434 %2437
       %2439 = OpFMul %float %1898 %float_7_54978942en08
       %2440 = OpFNegate %float %2439
               OpSelectionMerge %2962 None
               OpBranchConditional %1902 %2443 %2962
       %2443 = OpLabel
       %2444 = OpIsNan %bool %float_7_54978942en08
       %2445 = OpLogicalNot %bool %2444
               OpSelectionMerge %2958 None
               OpBranchConditional %2445 %2448 %2958
       %2448 = OpLabel
       %2449 = OpIsNan %bool %2440
       %2450 = OpLogicalNot %bool %2449
               OpSelectionMerge %2954 None
               OpBranchConditional %2450 %2453 %2954
       %2453 = OpLabel
       %2454 = OpIsInf %bool %1898
       %2455 = OpLogicalNot %bool %2454
               OpSelectionMerge %2950 None
               OpBranchConditional %2455 %2458 %2950
       %2458 = OpLabel
       %2459 = OpIsInf %bool %float_7_54978942en08
       %2460 = OpLogicalNot %bool %2459
               OpSelectionMerge %2946 None
               OpBranchConditional %2460 %2463 %2946
       %2463 = OpLabel
       %2464 = OpIsInf %bool %2440
       %2465 = OpLogicalNot %bool %2464
               OpSelectionMerge %2943 None
               OpBranchConditional %2465 %2468 %2943
       %2468 = OpLabel
       %2469 = OpCompositeInsert %v2float %1898 %826 1
       %2470 = OpBitcast %v2uint %2469
       %2471 = OpBitwiseAnd %v2uint %2470 %267
       %2472 = OpINotEqual %v2bool %2471 %270
       %2473 = OpBitwiseAnd %v2uint %2470 %272
       %2474 = OpIEqual %v2bool %2473 %270
       %2475 = OpLogicalOr %v2bool %2474 %2472
       %2476 = OpBitwiseAnd %v2uint %2470 %277
       %2477 = OpBitcast %v2float %2476
       %2478 = OpSelect %v2float %2475 %2469 %2477
       %2479 = OpBitcast %uint %2440
       %2480 = OpBitwiseAnd %uint %2479 %uint_2139095040
       %2481 = OpINotEqual %bool %2480 %uint_0
       %2482 = OpBitwiseAnd %uint %2479 %uint_8388607
       %2483 = OpIEqual %bool %2482 %uint_0
       %2484 = OpLogicalOr %bool %2483 %2481
       %2485 = OpBitwiseAnd %uint %2479 %uint_2147483648
       %2486 = OpBitcast %float %2485
       %2487 = OpSelect %float %2484 %2440 %2486
       %2488 = OpFOrdEqual %v2bool %2478 %290
       %2489 = OpVectorShuffle %v2bool %2488 %292 1 4294967295
       %2490 = OpLogicalOr %v2bool %2489 %2488
       %2491 = OpCompositeExtract %bool %2490 0
       %2492 = OpLogicalNot %bool %2491
               OpSelectionMerge %2940 None
               OpBranchConditional %2492 %2495 %2940
       %2495 = OpLabel
       %2496 = OpFUnordNotEqual %bool %2487 %float_0
               OpSelectionMerge %2927 None
               OpBranchConditional %2496 %2499 %2927
       %2499 = OpLabel
       %2500 = OpBitcast %v2uint %2478
       %2501 = OpCompositeExtract %uint %2500 1
       %2502 = OpShiftRightLogical %uint %2501 %uint_23
       %2503 = OpBitwiseAnd %uint %2502 %uint_255
       %2504 = OpCompositeExtract %uint %2500 0
       %2505 = OpShiftRightLogical %uint %2504 %uint_23
       %2506 = OpBitwiseAnd %uint %2505 %uint_255
       %2507 = OpBitcast %uint %2487
       %2508 = OpShiftRightLogical %uint %2507 %uint_23
       %2509 = OpBitwiseAnd %uint %2508 %uint_255
       %2510 = OpIAdd %uint %2509 %uint_4294967169
       %2511 = OpBitwiseAnd %v2uint %2500 %272
       %2512 = OpBitwiseOr %v2uint %2511 %319
       %2513 = OpBitwiseAnd %uint %2507 %uint_2147483648
       %2514 = OpBitwiseXor %uint %2504 %2501
       %2515 = OpBitwiseAnd %uint %2514 %uint_2147483648
       %2516 = OpCompositeExtract %uint %2512 0
       %2517 = OpCompositeExtract %uint %2512 1
       %2518 = OpUMulExtended %_struct_58 %2517 %2516
       %2519 = OpCompositeExtract %uint %2518 1
       %2520 = OpIMul %uint %2516 %2517
       %2521 = OpShiftLeftLogical %uint %2519 %uint_14
       %2522 = OpShiftRightLogical %uint %2520 %uint_18
       %2523 = OpBitwiseOr %uint %2522 %2521
       %2524 = OpShiftLeftLogical %uint %2520 %uint_14
       %2525 = OpCompositeConstruct %v2uint %2524 %2523
       %2526 = OpBitwiseOr %uint %2523 %2524
       %2527 = OpINotEqual %bool %2526 %uint_0
       %2528 = OpIAdd %uint %2503 %uint_4294967042
       %2529 = OpIAdd %uint %2528 %2506
               OpSelectionMerge %2924 None
               OpBranchConditional %2527 %2532 %2924
       %2532 = OpLabel
       %2533 = OpISub %uint %2529 %2510
       %2534 = OpShiftLeftLogical %uint %2507 %uint_5
       %2535 = OpBitwiseAnd %uint %2534 %uint_268435424
       %2536 = OpBitwiseOr %uint %2535 %uint_268435456
       %2537 = OpCompositeInsert %v2uint %2536 %352 1
       %2538 = OpExtInst %uint %184 SAbs %2533
       %2539 = OpINotEqual %bool %2538 %uint_0
               OpSelectionMerge %2566 None
               OpBranchConditional %2539 %2542 %2566
       %2542 = OpLabel
       %2543 = OpUGreaterThanEqual %bool %2538 %uint_32
               OpSelectionMerge %2551 None
               OpBranchConditional %2543 %2546 %2551
       %2546 = OpLabel
       %2547 = OpBitwiseAnd %uint %2538 %uint_31
       %2548 = OpShiftLeftLogical %uint %uint_1 %2547
       %2549 = OpCompositeInsert %v2uint %2548 %352 1
               OpBranch %2551
       %2551 = OpLabel
       %2552 = OpPhi %v2uint %2549 %2546 %525 %2542
       %2553 = OpPhi %bool %false %2546 %true %2542
               OpSelectionMerge %2563 None
               OpBranchConditional %2553 %2556 %2563
       %2556 = OpLabel
       %2557 = OpISub %uint %uint_0 %2538
       %2558 = OpBitwiseAnd %uint %2557 %uint_31
       %2559 = OpShiftRightLogical %uint %uint_1 %2558
       %2560 = OpShiftLeftLogical %uint %uint_1 %2538
       %2561 = OpCompositeConstruct %v2uint %2560 %2559
               OpBranch %2563
       %2563 = OpLabel
       %2564 = OpPhi %v2uint %2561 %2556 %2552 %2551
               OpBranch %2566
       %2566 = OpLabel
       %2567 = OpPhi %v2uint %7071 %2532 %2564 %2563
       %2568 = OpCompositeExtract %uint %2567 0
       %2569 = OpShiftRightLogical %uint %2568 %uint_1
       %2570 = OpIAdd %uint %2569 %uint_2147483647
       %2571 = OpBitwiseAnd %uint %2568 %uint_1
       %2572 = OpIAdd %uint %2570 %2571
       %2573 = OpShiftRightLogical %uint %2572 %uint_31
       %2574 = OpIAdd %uint %2568 %uint_4294967295
       %2575 = OpCompositeExtract %uint %2567 1
       %2576 = OpIAdd %uint %2575 %uint_4294967295
       %2577 = OpIAdd %uint %2576 %2573
       %2578 = OpCompositeConstruct %v2uint %2574 %2577
       %2579 = OpSLessThanEqual %bool %2533 %uint_0
               OpSelectionMerge %2631 None
               OpBranchConditional %2579 %2582 %2631
       %2582 = OpLabel
       %2583 = OpSGreaterThanEqual %bool %2533 %uint_4294967233
               OpSelectionMerge %2626 None
               OpBranchConditional %2583 %2586 %2626
       %2586 = OpLabel
       %2587 = OpISub %uint %uint_0 %2533
       %2588 = OpBitwiseAnd %v2uint %2578 %2525
       %2589 = OpINotEqual %bool %2529 %2510
               OpSelectionMerge %2621 None
               OpBranchConditional %2589 %2592 %2621
       %2592 = OpLabel
       %2593 = OpUGreaterThanEqual %bool %2587 %uint_32
               OpSelectionMerge %2601 None
               OpBranchConditional %2593 %2596 %2601
       %2596 = OpLabel
       %2597 = OpBitwiseAnd %uint %2587 %uint_31
       %2598 = OpShiftRightLogical %uint %2523 %2597
       %2599 = OpCompositeInsert %v2uint %2598 %417 0
               OpBranch %2601
       %2601 = OpLabel
       %2602 = OpPhi %v2uint %2537 %2596 %525 %2592
       %2603 = OpPhi %v2uint %2588 %2596 %525 %2592
       %2604 = OpPhi %v2uint %2599 %2596 %525 %2592
       %2605 = OpPhi %bool %false %2596 %true %2592
               OpSelectionMerge %2616 None
               OpBranchConditional %2605 %2608 %2616
       %2608 = OpLabel
       %2609 = OpShiftRightLogical %uint %2524 %2587
       %2610 = OpBitwiseAnd %uint %2533 %uint_31
       %2611 = OpShiftLeftLogical %uint %2523 %2610
       %2612 = OpBitwiseOr %uint %2611 %2609
       %2613 = OpShiftRightLogical %uint %2523 %2587
       %2614 = OpCompositeConstruct %v2uint %2612 %2613
               OpBranch %2616
       %2616 = OpLabel
       %2617 = OpPhi %v2uint %2537 %2608 %2602 %2601
       %2618 = OpPhi %v2uint %2588 %2608 %2603 %2601
       %2619 = OpPhi %v2uint %2614 %2608 %2604 %2601
               OpBranch %2621
       %2621 = OpLabel
       %2622 = OpPhi %v2uint %2617 %2616 %2537 %2586
       %2623 = OpPhi %v2uint %2618 %2616 %2588 %2586
       %2624 = OpPhi %v2uint %2619 %2616 %2525 %2586
               OpBranch %2626
       %2626 = OpLabel
       %2627 = OpPhi %v2uint %2622 %2621 %2537 %2582
       %2628 = OpPhi %v2uint %2623 %2621 %2525 %2582
       %2629 = OpPhi %v2uint %2624 %2621 %270 %2582
               OpBranch %2631
       %2631 = OpLabel
       %2632 = OpPhi %v2uint %2627 %2626 %525 %2566
       %2633 = OpPhi %v2uint %2628 %2626 %525 %2566
       %2634 = OpPhi %v2uint %2629 %2626 %525 %2566
       %2635 = OpPhi %bool %false %2626 %true %2566
               OpSelectionMerge %2677 None
               OpBranchConditional %2635 %2638 %2677
       %2638 = OpLabel
       %2639 = OpULessThanEqual %bool %2533 %uint_63
               OpSelectionMerge %2672 None
               OpBranchConditional %2639 %2642 %2672
       %2642 = OpLabel
       %2643 = OpBitwiseAnd %uint %2577 %2536
       %2644 = OpCompositeInsert %v2uint %2643 %352 1
       %2645 = OpUGreaterThanEqual %bool %2533 %uint_32
               OpSelectionMerge %2653 None
               OpBranchConditional %2645 %2648 %2653
       %2648 = OpLabel
       %2649 = OpBitwiseAnd %uint %2533 %uint_31
       %2650 = OpShiftRightLogical %uint %2536 %2649
       %2651 = OpCompositeInsert %v2uint %2650 %417 0
               OpBranch %2653
       %2653 = OpLabel
       %2654 = OpPhi %v2uint %2651 %2648 %525 %2642
       %2655 = OpPhi %v2uint %2644 %2648 %525 %2642
       %2656 = OpPhi %v2uint %2525 %2648 %525 %2642
       %2657 = OpPhi %bool %false %2648 %true %2642
               OpSelectionMerge %2667 None
               OpBranchConditional %2657 %2660 %2667
       %2660 = OpLabel
       %2661 = OpISub %uint %uint_0 %2533
       %2662 = OpBitwiseAnd %uint %2661 %uint_31
       %2663 = OpShiftLeftLogical %uint %2536 %2662
       %2664 = OpShiftRightLogical %uint %2536 %2533
       %2665 = OpCompositeConstruct %v2uint %2663 %2664
               OpBranch %2667
       %2667 = OpLabel
       %2668 = OpPhi %v2uint %2665 %2660 %2654 %2653
       %2669 = OpPhi %v2uint %2644 %2660 %2655 %2653
       %2670 = OpPhi %v2uint %2525 %2660 %2656 %2653
               OpBranch %2672
       %2672 = OpLabel
       %2673 = OpPhi %v2uint %2668 %2667 %270 %2638
       %2674 = OpPhi %v2uint %2669 %2667 %2537 %2638
       %2675 = OpPhi %v2uint %2670 %2667 %2525 %2638
               OpBranch %2677
       %2677 = OpLabel
       %2678 = OpPhi %v2uint %2634 %2631 %2675 %2672
       %2679 = OpPhi %v2uint %2633 %2631 %2674 %2672
       %2680 = OpPhi %v2uint %2632 %2631 %2673 %2672
       %2681 = OpExtInst %uint %184 SMax %2529 %2510
       %2682 = OpINotEqual %bool %2513 %2515
               OpSelectionMerge %2729 None
               OpBranchConditional %2682 %2685 %2729
       %2685 = OpLabel
       %2686 = OpCompositeExtract %uint %2680 0
       %2687 = OpBitwiseXor %uint %2686 %uint_4294967295
       %2688 = OpCompositeExtract %uint %2680 1
       %2689 = OpBitwiseXor %uint %2688 %uint_4294967295
       %2690 = OpShiftRightLogical %uint %2687 %uint_1
       %2691 = OpBitwiseAnd %uint %2687 %uint_1
       %2692 = OpIAdd %uint %2690 %2691
       %2693 = OpShiftRightLogical %uint %2692 %uint_31
       %2694 = OpISub %uint %uint_0 %2686
       %2695 = OpCompositeExtract %uint %2678 0
       %2696 = OpShiftRightLogical %uint %2695 %uint_1
       %2697 = OpShiftRightLogical %uint %2694 %uint_1
       %2698 = OpIAdd %uint %2697 %2696
       %2699 = OpBitwiseAnd %uint %2695 %uint_1
       %2700 = OpBitwiseAnd %uint %2699 %2694
       %2701 = OpIAdd %uint %2698 %2700
       %2702 = OpShiftRightLogical %uint %2701 %uint_31
       %2703 = OpISub %uint %2695 %2686
       %2704 = OpCompositeExtract %uint %2678 1
       %2705 = OpVectorShuffle %v2uint %2679 %525 1 4294967295
       %2706 = OpBitwiseOr %v2uint %2705 %2679
       %2707 = OpCompositeExtract %uint %2706 0
       %2708 = OpINotEqual %bool %2707 %uint_0
       %2709 = OpSGreaterThan %bool %2529 %2510
       %2710 = OpSelect %bool %2708 %2709 %false
       %2711 = OpSelect %v2uint %2710 %533 %270
       %2712 = OpCompositeExtract %uint %2711 0
       %2713 = OpShiftRightLogical %uint %2703 %uint_1
       %2714 = OpShiftRightLogical %uint %2712 %uint_1
       %2715 = OpIAdd %uint %2714 %2713
       %2716 = OpBitwiseAnd %uint %2703 %uint_1
       %2717 = OpBitwiseAnd %uint %2716 %2712
       %2718 = OpIAdd %uint %2715 %2717
       %2719 = OpShiftRightLogical %uint %2718 %uint_31
       %2720 = OpIAdd %uint %2712 %2703
       %2721 = OpCompositeExtract %uint %2711 1
       %2722 = OpIAdd %uint %2704 %2689
       %2723 = OpIAdd %uint %2722 %2693
       %2724 = OpIAdd %uint %2723 %2702
       %2725 = OpIAdd %uint %2724 %2721
       %2726 = OpIAdd %uint %2725 %2719
       %2727 = OpCompositeConstruct %v2uint %2720 %2726
               OpBranch %2729
       %2729 = OpLabel
       %2730 = OpPhi %v2uint %2727 %2685 %525 %2677
       %2731 = OpPhi %bool %false %2685 %true %2677
               OpSelectionMerge %2750 None
               OpBranchConditional %2731 %2734 %2750
       %2734 = OpLabel
       %2735 = OpCompositeExtract %uint %2678 0
       %2736 = OpCompositeExtract %uint %2680 0
       %2737 = OpShiftRightLogical %uint %2735 %uint_1
       %2738 = OpShiftRightLogical %uint %2736 %uint_1
       %2739 = OpIAdd %uint %2738 %2737
       %2740 = OpBitwiseAnd %uint %2735 %uint_1
       %2741 = OpBitwiseAnd %uint %2740 %2736
       %2742 = OpIAdd %uint %2739 %2741
       %2743 = OpShiftRightLogical %uint %2742 %uint_31
       %2744 = OpIAdd %uint %2736 %2735
       %2745 = OpIAdd %v2uint %2680 %2678
       %2746 = OpCompositeExtract %uint %2745 1
       %2747 = OpIAdd %uint %2743 %2746
       %2748 = OpCompositeConstruct %v2uint %2744 %2747
               OpBranch %2750
       %2750 = OpLabel
       %2751 = OpPhi %v2uint %2748 %2734 %2730 %2729
       %2752 = OpCompositeExtract %uint %2751 1
       %2753 = OpSLessThan %bool %2752 %uint_0
               OpSelectionMerge %2769 None
               OpBranchConditional %2753 %2756 %2769
       %2756 = OpLabel
       %2757 = OpCompositeExtract %uint %2751 0
       %2758 = OpBitwiseXor %uint %2757 %uint_4294967295
       %2759 = OpBitwiseXor %uint %2752 %uint_4294967295
       %2760 = OpShiftRightLogical %uint %2758 %uint_1
       %2761 = OpBitwiseAnd %uint %2758 %uint_1
       %2762 = OpIAdd %uint %2760 %2761
       %2763 = OpShiftRightLogical %uint %2762 %uint_31
       %2764 = OpISub %uint %uint_0 %2757
       %2765 = OpIAdd %uint %2763 %2759
       %2766 = OpCompositeConstruct %v2uint %2764 %2765
       %2767 = OpBitwiseXor %uint %2515 %uint_2147483648
               OpBranch %2769
       %2769 = OpLabel
       %2770 = OpPhi %uint %2767 %2756 %2515 %2750
       %2771 = OpPhi %v2uint %2766 %2756 %2751 %2750
       %2772 = OpCompositeExtract %uint %2771 1
       %2773 = OpExtInst %uint %184 FindUMsb %2772
       %2774 = OpISub %uint %uint_31 %2773
       %2775 = OpIEqual %bool %2772 %uint_0
       %2776 = OpCompositeExtract %uint %2771 0
       %2777 = OpExtInst %uint %184 FindUMsb %2776
       %2778 = OpISub %uint %uint_31 %2777
       %2779 = OpIAdd %uint %2778 %uint_32
       %2780 = OpSelect %uint %2775 %2779 %2774
       %2781 = OpISub %uint %uint_3 %2780
       %2782 = OpIAdd %uint %2781 %2681
       %2783 = OpUGreaterThan %bool %2780 %uint_3
               OpSelectionMerge %2814 None
               OpBranchConditional %2783 %2786 %2814
       %2786 = OpLabel
       %2787 = OpIAdd %uint %2780 %uint_4294967293
       %2788 = OpUGreaterThanEqual %bool %2787 %uint_32
               OpSelectionMerge %2796 None
               OpBranchConditional %2788 %2791 %2796
       %2791 = OpLabel
       %2792 = OpBitwiseAnd %uint %2787 %uint_31
       %2793 = OpShiftLeftLogical %uint %2776 %2792
       %2794 = OpCompositeInsert %v2uint %2793 %352 1
               OpBranch %2796
       %2796 = OpLabel
       %2797 = OpPhi %uint %uint_0 %2791 %351 %2786
       %2798 = OpPhi %v2uint %2794 %2791 %525 %2786
       %2799 = OpPhi %bool %false %2791 %true %2786
               OpSelectionMerge %2810 None
               OpBranchConditional %2799 %2802 %2810
       %2802 = OpLabel
       %2803 = OpShiftLeftLogical %uint %2772 %2787
       %2804 = OpBitwiseAnd %uint %2781 %uint_31
       %2805 = OpShiftRightLogical %uint %2776 %2804
       %2806 = OpBitwiseOr %uint %2805 %2803
       %2807 = OpShiftLeftLogical %uint %2776 %2787
       %2808 = OpCompositeConstruct %v2uint %2807 %2806
               OpBranch %2810
       %2810 = OpLabel
       %2811 = OpPhi %uint %uint_0 %2802 %2797 %2796
       %2812 = OpPhi %v2uint %2808 %2802 %2798 %2796
               OpBranch %2814
       %2814 = OpLabel
       %2815 = OpPhi %v2uint %2771 %2769 %2812 %2810
       %2816 = OpPhi %uint %2781 %2769 %2811 %2810
       %2817 = OpIAdd %uint %2816 %uint_5
       %2818 = OpBitwiseAnd %uint %2817 %uint_31
       %2819 = OpShiftLeftLogical %uint %uint_1 %2818
       %2820 = OpCompositeInsert %v2uint %2819 %352 1
       %2821 = OpIAdd %uint %2819 %uint_4294967295
       %2822 = OpCompositeInsert %v2uint %2821 %647 1
       %2823 = OpBitwiseAnd %v2uint %2822 %2815
       %2824 = OpCompositeExtract %uint %2823 1
       %2825 = OpBitwiseAnd %v2uint %2820 %2815
       %2826 = OpIAdd %uint %2816 %uint_2
       %2827 = OpBitwiseAnd %uint %2826 %uint_31
       %2828 = OpShiftLeftLogical %uint %uint_4 %2827
       %2829 = OpUGreaterThan %bool %2824 %2828
       %2830 = OpLogicalNot %bool %2829
               OpSelectionMerge %2861 None
               OpBranchConditional %2830 %2833 %2861
       %2833 = OpLabel
       %2834 = OpCompositeExtract %uint %2823 0
       %2835 = OpVectorShuffle %v2uint %2679 %525 1 4294967295
       %2836 = OpBitwiseOr %v2uint %2835 %2679
       %2837 = OpCompositeExtract %uint %2836 0
       %2838 = OpINotEqual %bool %2837 %uint_0
       %2839 = OpSelect %uint %2838 %uint_1 %uint_0
       %2840 = OpBitwiseOr %uint %2834 %2839
       %2841 = OpIEqual %bool %2824 %2828
       %2842 = OpINotEqual %bool %2840 %uint_0
       %2843 = OpSelect %bool %2841 %2842 %false
       %2844 = OpLogicalNot %bool %2843
               OpSelectionMerge %2857 None
               OpBranchConditional %2844 %2847 %2857
       %2847 = OpLabel
       %2848 = OpINotEqual %bool %2824 %2828
       %2849 = OpLogicalOr %bool %2848 %2842
       %2850 = OpVectorShuffle %v2uint %2825 %525 1 4294967295
       %2851 = OpBitwiseOr %v2uint %2850 %2825
       %2852 = OpCompositeExtract %uint %2851 0
       %2853 = OpIEqual %bool %2852 %uint_0
       %2854 = OpSelect %bool %2849 %true %2853
       %2855 = OpLogicalNot %bool %2854
               OpBranch %2857
       %2857 = OpLabel
       %2858 = OpPhi %v2uint %2815 %2847 %525 %2833
       %2859 = OpPhi %bool %2855 %2847 %2843 %2833
               OpBranch %2861
       %2861 = OpLabel
       %2862 = OpPhi %v2uint %2858 %2857 %525 %2814
       %2863 = OpPhi %bool %2859 %2857 %2829 %2814
               OpSelectionMerge %2871 None
               OpBranchConditional %2863 %2866 %2871
       %2866 = OpLabel
       %2867 = OpCompositeExtract %uint %2815 1
       %2868 = OpIAdd %uint %2819 %2867
       %2869 = OpCompositeInsert %v2uint %2868 %2815 1
               OpBranch %2871
       %2871 = OpLabel
       %2872 = OpPhi %v2uint %2869 %2866 %2862 %2861
       %2873 = OpCompositeExtract %uint %2872 1
       %2874 = OpShiftRightLogical %uint %2873 %2818
       %2875 = OpUGreaterThan %bool %2874 %uint_16777215
       %2876 = OpSelect %uint %2875 %uint_1 %uint_0
       %2877 = OpShiftRightLogical %uint %2874 %2876
       %2878 = OpIAdd %uint %2782 %2876
       %2879 = OpINotEqual %bool %2877 %uint_0
               OpSelectionMerge %2921 None
               OpBranchConditional %2879 %2882 %2921
       %2882 = OpLabel
       %2883 = OpSLessThanEqual %bool %2878 %uint_127
               OpSelectionMerge %2909 None
               OpBranchConditional %2883 %2886 %2909
       %2886 = OpLabel
       %2887 = OpSGreaterThanEqual %bool %2878 %uint_4294967170
               OpSelectionMerge %2898 None
               OpBranchConditional %2887 %2890 %2898
       %2890 = OpLabel
       %2891 = OpShiftLeftLogical %uint %2878 %uint_23
       %2892 = OpIAdd %uint %2891 %uint_1065353216
       %2893 = OpBitwiseAnd %uint %2877 %uint_8388607
       %2894 = OpBitwiseOr %uint %2892 %2893
       %2895 = OpBitwiseOr %uint %2894 %2770
       %2896 = OpBitcast %float %2895
               OpBranch %2898
       %2898 = OpLabel
       %2899 = OpPhi %float %2896 %2890 %261 %2886
       %2900 = OpPhi %bool %false %2890 %true %2886
               OpSelectionMerge %2906 None
               OpBranchConditional %2900 %2903 %2906
       %2903 = OpLabel
       %2904 = OpBitcast %float %2770
               OpBranch %2906
       %2906 = OpLabel
       %2907 = OpPhi %float %2904 %2903 %2899 %2898
               OpBranch %2909
       %2909 = OpLabel
       %2910 = OpPhi %float %2907 %2906 %261 %2882
       %2911 = OpPhi %bool %false %2906 %true %2882
               OpSelectionMerge %2918 None
               OpBranchConditional %2911 %2914 %2918
       %2914 = OpLabel
       %2915 = OpBitwiseOr %uint %2770 %uint_2139095040
       %2916 = OpBitcast %float %2915
               OpBranch %2918
       %2918 = OpLabel
       %2919 = OpPhi %float %2916 %2914 %2910 %2909
               OpBranch %2921
       %2921 = OpLabel
       %2922 = OpPhi %float %2919 %2918 %float_0 %2871
               OpBranch %2924
       %2924 = OpLabel
       %2925 = OpPhi %float %2922 %2921 %2487 %2499
               OpBranch %2927
       %2927 = OpLabel
       %2928 = OpPhi %float %2925 %2924 %261 %2495
       %2929 = OpPhi %bool %false %2924 %true %2495
               OpSelectionMerge %2937 None
               OpBranchConditional %2929 %2932 %2937
       %2932 = OpLabel
       %2933 = OpVectorShuffle %v2float %2478 %765 1 4294967295
       %2934 = OpFMul %v2float %2478 %2933
       %2935 = OpCompositeExtract %float %2934 0
               OpBranch %2937
       %2937 = OpLabel
       %2938 = OpPhi %float %2935 %2932 %2928 %2927
               OpBranch %2940
       %2940 = OpLabel
       %2941 = OpPhi %float %2938 %2937 %2487 %2468
               OpBranch %2943
       %2943 = OpLabel
       %2944 = OpPhi %float %2941 %2940 %2440 %2463
               OpBranch %2946
       %2946 = OpLabel
       %2947 = OpPhi %float %2944 %2943 %261 %2458
       %2948 = OpPhi %bool %false %2943 %true %2458
               OpBranch %2950
       %2950 = OpLabel
       %2951 = OpPhi %float %2947 %2946 %261 %2453
       %2952 = OpPhi %bool %2948 %2946 %2454 %2453
               OpBranch %2954
       %2954 = OpLabel
       %2955 = OpPhi %float %2951 %2950 %261 %2448
       %2956 = OpPhi %bool %2952 %2950 %2449 %2448
               OpBranch %2958
       %2958 = OpLabel
       %2959 = OpPhi %float %2955 %2954 %261 %2443
       %2960 = OpPhi %bool %2956 %2954 %2444 %2443
               OpBranch %2962
       %2962 = OpLabel
       %2963 = OpPhi %float %2959 %2958 %261 %2432
       %2964 = OpPhi %bool %2960 %2958 %1901 %2432
               OpSelectionMerge %2970 None
               OpBranchConditional %2964 %2967 %2970
       %2967 = OpLabel
       %2968 = OpFSub %float %2439 %2439
               OpBranch %2970
       %2970 = OpLabel
       %2971 = OpPhi %float %2968 %2967 %2963 %2962
       %2972 = OpFSub %float %2438 %2439
       %2973 = OpFSub %float %2438 %2972
       %2974 = OpFSub %float %2973 %2439
       %2975 = OpFSub %float %2974 %2971
       %2976 = OpFAdd %float %2972 %2975
       %2978 = OpFMul %float %1898 %float_5_39030253en15
       %2979 = OpFNegate %float %2978
               OpSelectionMerge %3502 None
               OpBranchConditional %1902 %2982 %3502
       %2982 = OpLabel
       %2983 = OpIsNan %bool %float_5_39030253en15
       %2984 = OpLogicalNot %bool %2983
               OpSelectionMerge %3498 None
               OpBranchConditional %2984 %2987 %3498
       %2987 = OpLabel
       %2988 = OpIsNan %bool %2979
       %2989 = OpLogicalNot %bool %2988
               OpSelectionMerge %3494 None
               OpBranchConditional %2989 %2992 %3494
       %2992 = OpLabel
       %2993 = OpIsInf %bool %1898
       %2994 = OpLogicalNot %bool %2993
               OpSelectionMerge %3490 None
               OpBranchConditional %2994 %2997 %3490
       %2997 = OpLabel
       %2998 = OpIsInf %bool %float_5_39030253en15
       %2999 = OpLogicalNot %bool %2998
               OpSelectionMerge %3486 None
               OpBranchConditional %2999 %3002 %3486
       %3002 = OpLabel
       %3003 = OpIsInf %bool %2979
       %3004 = OpLogicalNot %bool %3003
               OpSelectionMerge %3483 None
               OpBranchConditional %3004 %3007 %3483
       %3007 = OpLabel
       %3009 = OpCompositeInsert %v2float %1898 %3008 1
       %3010 = OpBitcast %v2uint %3009
       %3011 = OpBitwiseAnd %v2uint %3010 %267
       %3012 = OpINotEqual %v2bool %3011 %270
       %3013 = OpBitwiseAnd %v2uint %3010 %272
       %3014 = OpIEqual %v2bool %3013 %270
       %3015 = OpLogicalOr %v2bool %3014 %3012
       %3016 = OpBitwiseAnd %v2uint %3010 %277
       %3017 = OpBitcast %v2float %3016
       %3018 = OpSelect %v2float %3015 %3009 %3017
       %3019 = OpBitcast %uint %2979
       %3020 = OpBitwiseAnd %uint %3019 %uint_2139095040
       %3021 = OpINotEqual %bool %3020 %uint_0
       %3022 = OpBitwiseAnd %uint %3019 %uint_8388607
       %3023 = OpIEqual %bool %3022 %uint_0
       %3024 = OpLogicalOr %bool %3023 %3021
       %3025 = OpBitwiseAnd %uint %3019 %uint_2147483648
       %3026 = OpBitcast %float %3025
       %3027 = OpSelect %float %3024 %2979 %3026
       %3028 = OpFOrdEqual %v2bool %3018 %290
       %3029 = OpVectorShuffle %v2bool %3028 %292 1 4294967295
       %3030 = OpLogicalOr %v2bool %3029 %3028
       %3031 = OpCompositeExtract %bool %3030 0
       %3032 = OpLogicalNot %bool %3031
               OpSelectionMerge %3480 None
               OpBranchConditional %3032 %3035 %3480
       %3035 = OpLabel
       %3036 = OpFUnordNotEqual %bool %3027 %float_0
               OpSelectionMerge %3467 None
               OpBranchConditional %3036 %3039 %3467
       %3039 = OpLabel
       %3040 = OpBitcast %v2uint %3018
       %3041 = OpCompositeExtract %uint %3040 1
       %3042 = OpShiftRightLogical %uint %3041 %uint_23
       %3043 = OpBitwiseAnd %uint %3042 %uint_255
       %3044 = OpCompositeExtract %uint %3040 0
       %3045 = OpShiftRightLogical %uint %3044 %uint_23
       %3046 = OpBitwiseAnd %uint %3045 %uint_255
       %3047 = OpBitcast %uint %3027
       %3048 = OpShiftRightLogical %uint %3047 %uint_23
       %3049 = OpBitwiseAnd %uint %3048 %uint_255
       %3050 = OpIAdd %uint %3049 %uint_4294967169
       %3051 = OpBitwiseAnd %v2uint %3040 %272
       %3052 = OpBitwiseOr %v2uint %3051 %319
       %3053 = OpBitwiseAnd %uint %3047 %uint_2147483648
       %3054 = OpBitwiseXor %uint %3044 %3041
       %3055 = OpBitwiseAnd %uint %3054 %uint_2147483648
       %3056 = OpCompositeExtract %uint %3052 0
       %3057 = OpCompositeExtract %uint %3052 1
       %3058 = OpUMulExtended %_struct_58 %3057 %3056
       %3059 = OpCompositeExtract %uint %3058 1
       %3060 = OpIMul %uint %3056 %3057
       %3061 = OpShiftLeftLogical %uint %3059 %uint_14
       %3062 = OpShiftRightLogical %uint %3060 %uint_18
       %3063 = OpBitwiseOr %uint %3062 %3061
       %3064 = OpShiftLeftLogical %uint %3060 %uint_14
       %3065 = OpCompositeConstruct %v2uint %3064 %3063
       %3066 = OpBitwiseOr %uint %3063 %3064
       %3067 = OpINotEqual %bool %3066 %uint_0
       %3068 = OpIAdd %uint %3043 %uint_4294967042
       %3069 = OpIAdd %uint %3068 %3046
               OpSelectionMerge %3464 None
               OpBranchConditional %3067 %3072 %3464
       %3072 = OpLabel
       %3073 = OpISub %uint %3069 %3050
       %3074 = OpShiftLeftLogical %uint %3047 %uint_5
       %3075 = OpBitwiseAnd %uint %3074 %uint_268435424
       %3076 = OpBitwiseOr %uint %3075 %uint_268435456
       %3077 = OpCompositeInsert %v2uint %3076 %352 1
       %3078 = OpExtInst %uint %184 SAbs %3073
       %3079 = OpINotEqual %bool %3078 %uint_0
               OpSelectionMerge %3106 None
               OpBranchConditional %3079 %3082 %3106
       %3082 = OpLabel
       %3083 = OpUGreaterThanEqual %bool %3078 %uint_32
               OpSelectionMerge %3091 None
               OpBranchConditional %3083 %3086 %3091
       %3086 = OpLabel
       %3087 = OpBitwiseAnd %uint %3078 %uint_31
       %3088 = OpShiftLeftLogical %uint %uint_1 %3087
       %3089 = OpCompositeInsert %v2uint %3088 %352 1
               OpBranch %3091
       %3091 = OpLabel
       %3092 = OpPhi %v2uint %3089 %3086 %525 %3082
       %3093 = OpPhi %bool %false %3086 %true %3082
               OpSelectionMerge %3103 None
               OpBranchConditional %3093 %3096 %3103
       %3096 = OpLabel
       %3097 = OpISub %uint %uint_0 %3078
       %3098 = OpBitwiseAnd %uint %3097 %uint_31
       %3099 = OpShiftRightLogical %uint %uint_1 %3098
       %3100 = OpShiftLeftLogical %uint %uint_1 %3078
       %3101 = OpCompositeConstruct %v2uint %3100 %3099
               OpBranch %3103
       %3103 = OpLabel
       %3104 = OpPhi %v2uint %3101 %3096 %3092 %3091
               OpBranch %3106
       %3106 = OpLabel
       %3107 = OpPhi %v2uint %7071 %3072 %3104 %3103
       %3108 = OpCompositeExtract %uint %3107 0
       %3109 = OpShiftRightLogical %uint %3108 %uint_1
       %3110 = OpIAdd %uint %3109 %uint_2147483647
       %3111 = OpBitwiseAnd %uint %3108 %uint_1
       %3112 = OpIAdd %uint %3110 %3111
       %3113 = OpShiftRightLogical %uint %3112 %uint_31
       %3114 = OpIAdd %uint %3108 %uint_4294967295
       %3115 = OpCompositeExtract %uint %3107 1
       %3116 = OpIAdd %uint %3115 %uint_4294967295
       %3117 = OpIAdd %uint %3116 %3113
       %3118 = OpCompositeConstruct %v2uint %3114 %3117
       %3119 = OpSLessThanEqual %bool %3073 %uint_0
               OpSelectionMerge %3171 None
               OpBranchConditional %3119 %3122 %3171
       %3122 = OpLabel
       %3123 = OpSGreaterThanEqual %bool %3073 %uint_4294967233
               OpSelectionMerge %3166 None
               OpBranchConditional %3123 %3126 %3166
       %3126 = OpLabel
       %3127 = OpISub %uint %uint_0 %3073
       %3128 = OpBitwiseAnd %v2uint %3118 %3065
       %3129 = OpINotEqual %bool %3069 %3050
               OpSelectionMerge %3161 None
               OpBranchConditional %3129 %3132 %3161
       %3132 = OpLabel
       %3133 = OpUGreaterThanEqual %bool %3127 %uint_32
               OpSelectionMerge %3141 None
               OpBranchConditional %3133 %3136 %3141
       %3136 = OpLabel
       %3137 = OpBitwiseAnd %uint %3127 %uint_31
       %3138 = OpShiftRightLogical %uint %3063 %3137
       %3139 = OpCompositeInsert %v2uint %3138 %417 0
               OpBranch %3141
       %3141 = OpLabel
       %3142 = OpPhi %v2uint %3077 %3136 %525 %3132
       %3143 = OpPhi %v2uint %3128 %3136 %525 %3132
       %3144 = OpPhi %v2uint %3139 %3136 %525 %3132
       %3145 = OpPhi %bool %false %3136 %true %3132
               OpSelectionMerge %3156 None
               OpBranchConditional %3145 %3148 %3156
       %3148 = OpLabel
       %3149 = OpShiftRightLogical %uint %3064 %3127
       %3150 = OpBitwiseAnd %uint %3073 %uint_31
       %3151 = OpShiftLeftLogical %uint %3063 %3150
       %3152 = OpBitwiseOr %uint %3151 %3149
       %3153 = OpShiftRightLogical %uint %3063 %3127
       %3154 = OpCompositeConstruct %v2uint %3152 %3153
               OpBranch %3156
       %3156 = OpLabel
       %3157 = OpPhi %v2uint %3077 %3148 %3142 %3141
       %3158 = OpPhi %v2uint %3128 %3148 %3143 %3141
       %3159 = OpPhi %v2uint %3154 %3148 %3144 %3141
               OpBranch %3161
       %3161 = OpLabel
       %3162 = OpPhi %v2uint %3157 %3156 %3077 %3126
       %3163 = OpPhi %v2uint %3158 %3156 %3128 %3126
       %3164 = OpPhi %v2uint %3159 %3156 %3065 %3126
               OpBranch %3166
       %3166 = OpLabel
       %3167 = OpPhi %v2uint %3162 %3161 %3077 %3122
       %3168 = OpPhi %v2uint %3163 %3161 %3065 %3122
       %3169 = OpPhi %v2uint %3164 %3161 %270 %3122
               OpBranch %3171
       %3171 = OpLabel
       %3172 = OpPhi %v2uint %3167 %3166 %525 %3106
       %3173 = OpPhi %v2uint %3168 %3166 %525 %3106
       %3174 = OpPhi %v2uint %3169 %3166 %525 %3106
       %3175 = OpPhi %bool %false %3166 %true %3106
               OpSelectionMerge %3217 None
               OpBranchConditional %3175 %3178 %3217
       %3178 = OpLabel
       %3179 = OpULessThanEqual %bool %3073 %uint_63
               OpSelectionMerge %3212 None
               OpBranchConditional %3179 %3182 %3212
       %3182 = OpLabel
       %3183 = OpBitwiseAnd %uint %3117 %3076
       %3184 = OpCompositeInsert %v2uint %3183 %352 1
       %3185 = OpUGreaterThanEqual %bool %3073 %uint_32
               OpSelectionMerge %3193 None
               OpBranchConditional %3185 %3188 %3193
       %3188 = OpLabel
       %3189 = OpBitwiseAnd %uint %3073 %uint_31
       %3190 = OpShiftRightLogical %uint %3076 %3189
       %3191 = OpCompositeInsert %v2uint %3190 %417 0
               OpBranch %3193
       %3193 = OpLabel
       %3194 = OpPhi %v2uint %3191 %3188 %525 %3182
       %3195 = OpPhi %v2uint %3184 %3188 %525 %3182
       %3196 = OpPhi %v2uint %3065 %3188 %525 %3182
       %3197 = OpPhi %bool %false %3188 %true %3182
               OpSelectionMerge %3207 None
               OpBranchConditional %3197 %3200 %3207
       %3200 = OpLabel
       %3201 = OpISub %uint %uint_0 %3073
       %3202 = OpBitwiseAnd %uint %3201 %uint_31
       %3203 = OpShiftLeftLogical %uint %3076 %3202
       %3204 = OpShiftRightLogical %uint %3076 %3073
       %3205 = OpCompositeConstruct %v2uint %3203 %3204
               OpBranch %3207
       %3207 = OpLabel
       %3208 = OpPhi %v2uint %3205 %3200 %3194 %3193
       %3209 = OpPhi %v2uint %3184 %3200 %3195 %3193
       %3210 = OpPhi %v2uint %3065 %3200 %3196 %3193
               OpBranch %3212
       %3212 = OpLabel
       %3213 = OpPhi %v2uint %3208 %3207 %270 %3178
       %3214 = OpPhi %v2uint %3209 %3207 %3077 %3178
       %3215 = OpPhi %v2uint %3210 %3207 %3065 %3178
               OpBranch %3217
       %3217 = OpLabel
       %3218 = OpPhi %v2uint %3174 %3171 %3215 %3212
       %3219 = OpPhi %v2uint %3173 %3171 %3214 %3212
       %3220 = OpPhi %v2uint %3172 %3171 %3213 %3212
       %3221 = OpExtInst %uint %184 SMax %3069 %3050
       %3222 = OpINotEqual %bool %3053 %3055
               OpSelectionMerge %3269 None
               OpBranchConditional %3222 %3225 %3269
       %3225 = OpLabel
       %3226 = OpCompositeExtract %uint %3220 0
       %3227 = OpBitwiseXor %uint %3226 %uint_4294967295
       %3228 = OpCompositeExtract %uint %3220 1
       %3229 = OpBitwiseXor %uint %3228 %uint_4294967295
       %3230 = OpShiftRightLogical %uint %3227 %uint_1
       %3231 = OpBitwiseAnd %uint %3227 %uint_1
       %3232 = OpIAdd %uint %3230 %3231
       %3233 = OpShiftRightLogical %uint %3232 %uint_31
       %3234 = OpISub %uint %uint_0 %3226
       %3235 = OpCompositeExtract %uint %3218 0
       %3236 = OpShiftRightLogical %uint %3235 %uint_1
       %3237 = OpShiftRightLogical %uint %3234 %uint_1
       %3238 = OpIAdd %uint %3237 %3236
       %3239 = OpBitwiseAnd %uint %3235 %uint_1
       %3240 = OpBitwiseAnd %uint %3239 %3234
       %3241 = OpIAdd %uint %3238 %3240
       %3242 = OpShiftRightLogical %uint %3241 %uint_31
       %3243 = OpISub %uint %3235 %3226
       %3244 = OpCompositeExtract %uint %3218 1
       %3245 = OpVectorShuffle %v2uint %3219 %525 1 4294967295
       %3246 = OpBitwiseOr %v2uint %3245 %3219
       %3247 = OpCompositeExtract %uint %3246 0
       %3248 = OpINotEqual %bool %3247 %uint_0
       %3249 = OpSGreaterThan %bool %3069 %3050
       %3250 = OpSelect %bool %3248 %3249 %false
       %3251 = OpSelect %v2uint %3250 %533 %270
       %3252 = OpCompositeExtract %uint %3251 0
       %3253 = OpShiftRightLogical %uint %3243 %uint_1
       %3254 = OpShiftRightLogical %uint %3252 %uint_1
       %3255 = OpIAdd %uint %3254 %3253
       %3256 = OpBitwiseAnd %uint %3243 %uint_1
       %3257 = OpBitwiseAnd %uint %3256 %3252
       %3258 = OpIAdd %uint %3255 %3257
       %3259 = OpShiftRightLogical %uint %3258 %uint_31
       %3260 = OpIAdd %uint %3252 %3243
       %3261 = OpCompositeExtract %uint %3251 1
       %3262 = OpIAdd %uint %3244 %3229
       %3263 = OpIAdd %uint %3262 %3233
       %3264 = OpIAdd %uint %3263 %3242
       %3265 = OpIAdd %uint %3264 %3261
       %3266 = OpIAdd %uint %3265 %3259
       %3267 = OpCompositeConstruct %v2uint %3260 %3266
               OpBranch %3269
       %3269 = OpLabel
       %3270 = OpPhi %v2uint %3267 %3225 %525 %3217
       %3271 = OpPhi %bool %false %3225 %true %3217
               OpSelectionMerge %3290 None
               OpBranchConditional %3271 %3274 %3290
       %3274 = OpLabel
       %3275 = OpCompositeExtract %uint %3218 0
       %3276 = OpCompositeExtract %uint %3220 0
       %3277 = OpShiftRightLogical %uint %3275 %uint_1
       %3278 = OpShiftRightLogical %uint %3276 %uint_1
       %3279 = OpIAdd %uint %3278 %3277
       %3280 = OpBitwiseAnd %uint %3275 %uint_1
       %3281 = OpBitwiseAnd %uint %3280 %3276
       %3282 = OpIAdd %uint %3279 %3281
       %3283 = OpShiftRightLogical %uint %3282 %uint_31
       %3284 = OpIAdd %uint %3276 %3275
       %3285 = OpIAdd %v2uint %3220 %3218
       %3286 = OpCompositeExtract %uint %3285 1
       %3287 = OpIAdd %uint %3283 %3286
       %3288 = OpCompositeConstruct %v2uint %3284 %3287
               OpBranch %3290
       %3290 = OpLabel
       %3291 = OpPhi %v2uint %3288 %3274 %3270 %3269
       %3292 = OpCompositeExtract %uint %3291 1
       %3293 = OpSLessThan %bool %3292 %uint_0
               OpSelectionMerge %3309 None
               OpBranchConditional %3293 %3296 %3309
       %3296 = OpLabel
       %3297 = OpCompositeExtract %uint %3291 0
       %3298 = OpBitwiseXor %uint %3297 %uint_4294967295
       %3299 = OpBitwiseXor %uint %3292 %uint_4294967295
       %3300 = OpShiftRightLogical %uint %3298 %uint_1
       %3301 = OpBitwiseAnd %uint %3298 %uint_1
       %3302 = OpIAdd %uint %3300 %3301
       %3303 = OpShiftRightLogical %uint %3302 %uint_31
       %3304 = OpISub %uint %uint_0 %3297
       %3305 = OpIAdd %uint %3303 %3299
       %3306 = OpCompositeConstruct %v2uint %3304 %3305
       %3307 = OpBitwiseXor %uint %3055 %uint_2147483648
               OpBranch %3309
       %3309 = OpLabel
       %3310 = OpPhi %uint %3307 %3296 %3055 %3290
       %3311 = OpPhi %v2uint %3306 %3296 %3291 %3290
       %3312 = OpCompositeExtract %uint %3311 1
       %3313 = OpExtInst %uint %184 FindUMsb %3312
       %3314 = OpISub %uint %uint_31 %3313
       %3315 = OpIEqual %bool %3312 %uint_0
       %3316 = OpCompositeExtract %uint %3311 0
       %3317 = OpExtInst %uint %184 FindUMsb %3316
       %3318 = OpISub %uint %uint_31 %3317
       %3319 = OpIAdd %uint %3318 %uint_32
       %3320 = OpSelect %uint %3315 %3319 %3314
       %3321 = OpISub %uint %uint_3 %3320
       %3322 = OpIAdd %uint %3321 %3221
       %3323 = OpUGreaterThan %bool %3320 %uint_3
               OpSelectionMerge %3354 None
               OpBranchConditional %3323 %3326 %3354
       %3326 = OpLabel
       %3327 = OpIAdd %uint %3320 %uint_4294967293
       %3328 = OpUGreaterThanEqual %bool %3327 %uint_32
               OpSelectionMerge %3336 None
               OpBranchConditional %3328 %3331 %3336
       %3331 = OpLabel
       %3332 = OpBitwiseAnd %uint %3327 %uint_31
       %3333 = OpShiftLeftLogical %uint %3316 %3332
       %3334 = OpCompositeInsert %v2uint %3333 %352 1
               OpBranch %3336
       %3336 = OpLabel
       %3337 = OpPhi %uint %uint_0 %3331 %351 %3326
       %3338 = OpPhi %v2uint %3334 %3331 %525 %3326
       %3339 = OpPhi %bool %false %3331 %true %3326
               OpSelectionMerge %3350 None
               OpBranchConditional %3339 %3342 %3350
       %3342 = OpLabel
       %3343 = OpShiftLeftLogical %uint %3312 %3327
       %3344 = OpBitwiseAnd %uint %3321 %uint_31
       %3345 = OpShiftRightLogical %uint %3316 %3344
       %3346 = OpBitwiseOr %uint %3345 %3343
       %3347 = OpShiftLeftLogical %uint %3316 %3327
       %3348 = OpCompositeConstruct %v2uint %3347 %3346
               OpBranch %3350
       %3350 = OpLabel
       %3351 = OpPhi %uint %uint_0 %3342 %3337 %3336
       %3352 = OpPhi %v2uint %3348 %3342 %3338 %3336
               OpBranch %3354
       %3354 = OpLabel
       %3355 = OpPhi %v2uint %3311 %3309 %3352 %3350
       %3356 = OpPhi %uint %3321 %3309 %3351 %3350
       %3357 = OpIAdd %uint %3356 %uint_5
       %3358 = OpBitwiseAnd %uint %3357 %uint_31
       %3359 = OpShiftLeftLogical %uint %uint_1 %3358
       %3360 = OpCompositeInsert %v2uint %3359 %352 1
       %3361 = OpIAdd %uint %3359 %uint_4294967295
       %3362 = OpCompositeInsert %v2uint %3361 %647 1
       %3363 = OpBitwiseAnd %v2uint %3362 %3355
       %3364 = OpCompositeExtract %uint %3363 1
       %3365 = OpBitwiseAnd %v2uint %3360 %3355
       %3366 = OpIAdd %uint %3356 %uint_2
       %3367 = OpBitwiseAnd %uint %3366 %uint_31
       %3368 = OpShiftLeftLogical %uint %uint_4 %3367
       %3369 = OpUGreaterThan %bool %3364 %3368
       %3370 = OpLogicalNot %bool %3369
               OpSelectionMerge %3401 None
               OpBranchConditional %3370 %3373 %3401
       %3373 = OpLabel
       %3374 = OpCompositeExtract %uint %3363 0
       %3375 = OpVectorShuffle %v2uint %3219 %525 1 4294967295
       %3376 = OpBitwiseOr %v2uint %3375 %3219
       %3377 = OpCompositeExtract %uint %3376 0
       %3378 = OpINotEqual %bool %3377 %uint_0
       %3379 = OpSelect %uint %3378 %uint_1 %uint_0
       %3380 = OpBitwiseOr %uint %3374 %3379
       %3381 = OpIEqual %bool %3364 %3368
       %3382 = OpINotEqual %bool %3380 %uint_0
       %3383 = OpSelect %bool %3381 %3382 %false
       %3384 = OpLogicalNot %bool %3383
               OpSelectionMerge %3397 None
               OpBranchConditional %3384 %3387 %3397
       %3387 = OpLabel
       %3388 = OpINotEqual %bool %3364 %3368
       %3389 = OpLogicalOr %bool %3388 %3382
       %3390 = OpVectorShuffle %v2uint %3365 %525 1 4294967295
       %3391 = OpBitwiseOr %v2uint %3390 %3365
       %3392 = OpCompositeExtract %uint %3391 0
       %3393 = OpIEqual %bool %3392 %uint_0
       %3394 = OpSelect %bool %3389 %true %3393
       %3395 = OpLogicalNot %bool %3394
               OpBranch %3397
       %3397 = OpLabel
       %3398 = OpPhi %v2uint %3355 %3387 %525 %3373
       %3399 = OpPhi %bool %3395 %3387 %3383 %3373
               OpBranch %3401
       %3401 = OpLabel
       %3402 = OpPhi %v2uint %3398 %3397 %525 %3354
       %3403 = OpPhi %bool %3399 %3397 %3369 %3354
               OpSelectionMerge %3411 None
               OpBranchConditional %3403 %3406 %3411
       %3406 = OpLabel
       %3407 = OpCompositeExtract %uint %3355 1
       %3408 = OpIAdd %uint %3359 %3407
       %3409 = OpCompositeInsert %v2uint %3408 %3355 1
               OpBranch %3411
       %3411 = OpLabel
       %3412 = OpPhi %v2uint %3409 %3406 %3402 %3401
       %3413 = OpCompositeExtract %uint %3412 1
       %3414 = OpShiftRightLogical %uint %3413 %3358
       %3415 = OpUGreaterThan %bool %3414 %uint_16777215
       %3416 = OpSelect %uint %3415 %uint_1 %uint_0
       %3417 = OpShiftRightLogical %uint %3414 %3416
       %3418 = OpIAdd %uint %3322 %3416
       %3419 = OpINotEqual %bool %3417 %uint_0
               OpSelectionMerge %3461 None
               OpBranchConditional %3419 %3422 %3461
       %3422 = OpLabel
       %3423 = OpSLessThanEqual %bool %3418 %uint_127
               OpSelectionMerge %3449 None
               OpBranchConditional %3423 %3426 %3449
       %3426 = OpLabel
       %3427 = OpSGreaterThanEqual %bool %3418 %uint_4294967170
               OpSelectionMerge %3438 None
               OpBranchConditional %3427 %3430 %3438
       %3430 = OpLabel
       %3431 = OpShiftLeftLogical %uint %3418 %uint_23
       %3432 = OpIAdd %uint %3431 %uint_1065353216
       %3433 = OpBitwiseAnd %uint %3417 %uint_8388607
       %3434 = OpBitwiseOr %uint %3432 %3433
       %3435 = OpBitwiseOr %uint %3434 %3310
       %3436 = OpBitcast %float %3435
               OpBranch %3438
       %3438 = OpLabel
       %3439 = OpPhi %float %3436 %3430 %261 %3426
       %3440 = OpPhi %bool %false %3430 %true %3426
               OpSelectionMerge %3446 None
               OpBranchConditional %3440 %3443 %3446
       %3443 = OpLabel
       %3444 = OpBitcast %float %3310
               OpBranch %3446
       %3446 = OpLabel
       %3447 = OpPhi %float %3444 %3443 %3439 %3438
               OpBranch %3449
       %3449 = OpLabel
       %3450 = OpPhi %float %3447 %3446 %261 %3422
       %3451 = OpPhi %bool %false %3446 %true %3422
               OpSelectionMerge %3458 None
               OpBranchConditional %3451 %3454 %3458
       %3454 = OpLabel
       %3455 = OpBitwiseOr %uint %3310 %uint_2139095040
       %3456 = OpBitcast %float %3455
               OpBranch %3458
       %3458 = OpLabel
       %3459 = OpPhi %float %3456 %3454 %3450 %3449
               OpBranch %3461
       %3461 = OpLabel
       %3462 = OpPhi %float %3459 %3458 %float_0 %3411
               OpBranch %3464
       %3464 = OpLabel
       %3465 = OpPhi %float %3462 %3461 %3027 %3039
               OpBranch %3467
       %3467 = OpLabel
       %3468 = OpPhi %float %3465 %3464 %261 %3035
       %3469 = OpPhi %bool %false %3464 %true %3035
               OpSelectionMerge %3477 None
               OpBranchConditional %3469 %3472 %3477
       %3472 = OpLabel
       %3473 = OpVectorShuffle %v2float %3018 %765 1 4294967295
       %3474 = OpFMul %v2float %3018 %3473
       %3475 = OpCompositeExtract %float %3474 0
               OpBranch %3477
       %3477 = OpLabel
       %3478 = OpPhi %float %3475 %3472 %3468 %3467
               OpBranch %3480
       %3480 = OpLabel
       %3481 = OpPhi %float %3478 %3477 %3027 %3007
               OpBranch %3483
       %3483 = OpLabel
       %3484 = OpPhi %float %3481 %3480 %2979 %3002
               OpBranch %3486
       %3486 = OpLabel
       %3487 = OpPhi %float %3484 %3483 %261 %2997
       %3488 = OpPhi %bool %false %3483 %true %2997
               OpBranch %3490
       %3490 = OpLabel
       %3491 = OpPhi %float %3487 %3486 %261 %2992
       %3492 = OpPhi %bool %3488 %3486 %2993 %2992
               OpBranch %3494
       %3494 = OpLabel
       %3495 = OpPhi %float %3491 %3490 %261 %2987
       %3496 = OpPhi %bool %3492 %3490 %2988 %2987
               OpBranch %3498
       %3498 = OpLabel
       %3499 = OpPhi %float %3495 %3494 %261 %2982
       %3500 = OpPhi %bool %3496 %3494 %2983 %2982
               OpBranch %3502
       %3502 = OpLabel
       %3503 = OpPhi %float %3499 %3498 %261 %2970
       %3504 = OpPhi %bool %3500 %3498 %1901 %2970
               OpSelectionMerge %3510 None
               OpBranchConditional %3504 %3507 %3510
       %3507 = OpLabel
       %3508 = OpFSub %float %2978 %2978
               OpBranch %3510
       %3510 = OpLabel
       %3511 = OpPhi %float %3508 %3507 %3503 %3502
       %3512 = OpFSub %float %2976 %2978
       %3513 = OpFSub %float %2976 %3512
       %3514 = OpFSub %float %3513 %2978
       %3515 = OpFAdd %float %3512 %3514
       %3516 = OpFNegate %float %3511
       %3517 = OpConvertFToS %uint %1898
               OpBranch %3519
       %3519 = OpLabel
       %3520 = OpPhi %uint %3517 %3510 %1887 %1886
       %3521 = OpPhi %float %3515 %3510 %1888 %1886
       %3522 = OpPhi %float %3516 %3510 %1889 %1886
               OpBranch %3524
       %3524 = OpLabel
       %3525 = OpFMul %float %3521 %3521
       %3526 = OpFMul %float %3521 %3525
       %3528 = OpFMul %float %3525 %float_1_58969102en10
       %3530 = OpFAdd %float %3528 %float_n2_50507597en08
       %3531 = OpFMul %float %3525 %3530
       %3533 = OpFAdd %float %3531 %float_2_72500006en06
       %3534 = OpFMul %float %3525 %3533
       %3536 = OpFAdd %float %3534 %float_n0_00019840087
       %3537 = OpFMul %float %3525 %3536
       %3539 = OpFAdd %float %3537 %float_0_00833333191
       %3540 = OpFMul %float %3522 %float_0_5
       %3541 = OpFMul %float %3526 %3539
       %3542 = OpFSub %float %3540 %3541
       %3543 = OpFMul %float %3525 %3542
       %3544 = OpFSub %float %3543 %3522
       %3546 = OpFMul %float %3526 %float_0_166666672
       %3547 = OpFAdd %float %3546 %3544
       %3548 = OpFSub %float %3521 %3547
       %3549 = OpFNegate %float %3548
       %3551 = OpFMul %float %3525 %float_1_13596476en11
       %3553 = OpFSub %float %float_2_08757234en09 %3551
       %3554 = OpFMul %float %3525 %3553
       %3556 = OpFAdd %float %3554 %float_n2_7301013en07
       %3557 = OpFMul %float %3525 %3556
       %3559 = OpFAdd %float %3557 %float_2_48005999en05
       %3560 = OpFMul %float %3525 %3559
       %3562 = OpFAdd %float %3560 %float_n0_00138888881
       %3563 = OpFMul %float %3525 %3562
       %3565 = OpFAdd %float %3563 %float_0_0416666679
       %3566 = OpFMul %float %3525 %3565
       %3567 = OpBitcast %uint %3521
       %3568 = OpBitwiseAnd %uint %3567 %uint_2147483647
       %3569 = OpBitcast %float %3568
       %3570 = OpBitcast %uint %3569
       %3572 = OpIAdd %uint %3570 %uint_4278190080
       %3573 = OpBitcast %float %3572
       %3575 = OpIAdd %uint %3570 %uint_3244713574
       %3577 = OpULessThan %bool %3575 %uint_11429479
       %3578 = OpSelect %float %3577 %3573 %float_0
       %3580 = OpSGreaterThan %bool %3570 %uint_1061683200
       %3582 = OpSelect %float %3580 %float_0_28125 %3578
       %3583 = OpFMul %float %3525 %float_0_5
       %3584 = OpFSub %float %3583 %3582
       %3586 = OpFSub %float %float_1 %3582
       %3587 = OpFMul %float %3525 %3566
       %3588 = OpFMul %float %3522 %3521
       %3589 = OpFSub %float %3587 %3588
       %3590 = OpFSub %float %3589 %3584
       %3591 = OpFAdd %float %3586 %3590
       %3592 = OpBitwiseAnd %uint %3520 %uint_1
       %3593 = OpIEqual %bool %3592 %uint_0
       %3594 = OpSelect %float %3593 %3591 %3549
       %3595 = OpBitcast %uint %3594
       %3596 = OpShiftLeftLogical %uint %3520 %uint_30
       %3597 = OpBitwiseAnd %uint %3596 %uint_2147483648
       %3598 = OpBitwiseXor %uint %3597 %3595
       %3599 = OpBitcast %float %3598
       %3601 = OpSGreaterThan %bool %43 %uint_2139095039
       %3603 = OpSelect %float %3601 %float_0x1_8p_128 %3599
               OpStore %38 %3603
               OpSelectionMerge %5374 None
               OpBranchConditional %46 %3606 %5374
       %3606 = OpLabel
       %3607 = OpShiftRightLogical %uint %43 %uint_23
       %3608 = OpBitwiseAnd %uint %43 %uint_8388607
       %3609 = OpBitwiseOr %uint %3608 %uint_8388608
       %3610 = OpIMul %uint %3609 %uint_4266746795
       %3611 = OpUMulExtended %_struct_58 %3609 %uint_4266746795
       %3612 = OpCompositeExtract %uint %3611 1
       %3613 = OpIMul %uint %3609 %uint_1011060801
       %3614 = OpIAdd %uint %3612 %3613
       %3615 = OpUMulExtended %_struct_58 %3609 %uint_1011060801
       %3616 = OpCompositeExtract %uint %3615 1
       %3617 = OpULessThan %bool %3614 %3612
       %3618 = OpSelect %uint %3617 %uint_1 %uint_0
       %3619 = OpIAdd %uint %3616 %3618
       %3620 = OpIMul %uint %3609 %uint_3680671129
       %3621 = OpIAdd %uint %3619 %3620
       %3622 = OpUMulExtended %_struct_58 %3609 %uint_3680671129
       %3623 = OpCompositeExtract %uint %3622 1
       %3624 = OpULessThan %bool %3621 %3619
       %3625 = OpSelect %uint %3624 %uint_1 %uint_0
       %3626 = OpIAdd %uint %3623 %3625
       %3627 = OpIMul %uint %3609 %uint_4113882560
       %3628 = OpIAdd %uint %3626 %3627
       %3629 = OpUMulExtended %_struct_58 %3609 %uint_4113882560
       %3630 = OpCompositeExtract %uint %3629 1
       %3631 = OpULessThan %bool %3628 %3626
       %3632 = OpSelect %uint %3631 %uint_1 %uint_0
       %3633 = OpIAdd %uint %3630 %3632
       %3634 = OpIMul %uint %3609 %uint_4230436817
       %3635 = OpIAdd %uint %3633 %3634
       %3636 = OpUMulExtended %_struct_58 %3609 %uint_4230436817
       %3637 = OpCompositeExtract %uint %3636 1
       %3638 = OpULessThan %bool %3635 %3633
       %3639 = OpSelect %uint %3638 %uint_1 %uint_0
       %3640 = OpIAdd %uint %3637 %3639
       %3641 = OpIMul %uint %3609 %uint_1313084713
       %3642 = OpIAdd %uint %3640 %3641
       %3643 = OpUMulExtended %_struct_58 %3609 %uint_1313084713
       %3644 = OpCompositeExtract %uint %3643 1
       %3645 = OpULessThan %bool %3642 %3640
       %3646 = OpSelect %uint %3645 %uint_1 %uint_0
       %3647 = OpIAdd %uint %3644 %3646
       %3648 = OpIMul %uint %3609 %uint_2734261102
       %3649 = OpIAdd %uint %3647 %3648
       %3650 = OpUMulExtended %_struct_58 %3609 %uint_2734261102
       %3651 = OpCompositeExtract %uint %3650 1
       %3652 = OpULessThan %bool %3649 %3647
       %3653 = OpSelect %uint %3652 %uint_1 %uint_0
       %3654 = OpIAdd %uint %3651 %3653
       %3655 = OpIAdd %uint %3607 %uint_4294967176
       %3656 = OpUGreaterThan %bool %3655 %uint_31
       %3657 = OpSelect %uint %3656 %3649 %3654
       %3658 = OpSelect %uint %3656 %3642 %3649
       %3659 = OpSelect %uint %3656 %3635 %3642
       %3660 = OpSelect %uint %3656 %3628 %3635
       %3661 = OpSelect %uint %3656 %3621 %3628
       %3662 = OpSelect %uint %3656 %3614 %3621
       %3663 = OpSelect %uint %3656 %3610 %3614
       %3664 = OpSelect %uint %3656 %uint_4294967264 %uint_0
       %3665 = OpIAdd %uint %3664 %3655
       %3666 = OpUGreaterThan %bool %3665 %uint_31
       %3667 = OpSelect %uint %3666 %3658 %3657
       %3668 = OpSelect %uint %3666 %3659 %3658
       %3669 = OpSelect %uint %3666 %3660 %3659
       %3670 = OpSelect %uint %3666 %3661 %3660
       %3671 = OpSelect %uint %3666 %3662 %3661
       %3672 = OpSelect %uint %3666 %3663 %3662
       %3673 = OpSelect %uint %3666 %uint_4294967264 %uint_0
       %3674 = OpIAdd %uint %3673 %3665
       %3675 = OpUGreaterThan %bool %3674 %uint_31
       %3676 = OpSelect %uint %3675 %3668 %3667
       %3677 = OpSelect %uint %3675 %3669 %3668
       %3678 = OpSelect %uint %3675 %3670 %3669
       %3679 = OpSelect %uint %3675 %3671 %3670
       %3680 = OpSelect %uint %3675 %3672 %3671
       %3681 = OpSelect %uint %3675 %uint_4294967264 %uint_0
       %3682 = OpIAdd %uint %3681 %3674
       %3683 = OpUGreaterThan %bool %3682 %uint_31
       %3684 = OpSelect %uint %3683 %3677 %3676
       %3685 = OpSelect %uint %3683 %3678 %3677
       %3686 = OpSelect %uint %3683 %3679 %3678
       %3687 = OpSelect %uint %3683 %3680 %3679
       %3688 = OpSelect %uint %3683 %uint_4294967264 %uint_0
       %3689 = OpISub %uint %uint_0 %3682
       %3690 = OpIEqual %bool %3688 %3689
       %3691 = OpISub %uint %uint_24 %3607
       %3692 = OpBitwiseAnd %uint %3655 %uint_31
       %3693 = OpShiftLeftLogical %uint %3684 %3692
       %3694 = OpBitwiseAnd %uint %3691 %uint_31
       %3695 = OpShiftRightLogical %uint %3685 %3694
       %3696 = OpBitwiseOr %uint %3693 %3695
       %3697 = OpShiftLeftLogical %uint %3685 %3692
       %3698 = OpShiftRightLogical %uint %3686 %3694
       %3699 = OpBitwiseOr %uint %3697 %3698
       %3700 = OpShiftLeftLogical %uint %3686 %3692
       %3701 = OpShiftRightLogical %uint %3687 %3694
       %3702 = OpBitwiseOr %uint %3700 %3701
       %3703 = OpSelect %uint %3690 %3684 %3696
       %3704 = OpSelect %uint %3690 %3685 %3699
       %3705 = OpSelect %uint %3690 %3686 %3702
       %3706 = OpShiftRightLogical %uint %3703 %uint_29
       %3707 = OpShiftLeftLogical %uint %3703 %uint_2
       %3708 = OpShiftRightLogical %uint %3704 %uint_30
       %3709 = OpBitwiseOr %uint %3708 %3707
       %3710 = OpShiftLeftLogical %uint %3704 %uint_2
       %3711 = OpShiftRightLogical %uint %3705 %uint_30
       %3712 = OpBitwiseOr %uint %3711 %3710
       %3713 = OpShiftLeftLogical %uint %3705 %uint_2
       %3714 = OpShiftRightLogical %uint %3687 %uint_30
       %3715 = OpBitwiseOr %uint %3714 %3713
       %3716 = OpBitwiseAnd %uint %3706 %uint_1
       %3717 = OpISub %uint %uint_0 %3716
       %3718 = OpShiftLeftLogical %uint %3706 %uint_31
       %3719 = OpBitwiseXor %uint %3709 %3717
       %3720 = OpBitwiseXor %uint %3712 %3717
       %3721 = OpBitwiseXor %uint %3715 %3717
       %3722 = OpExtInst %uint %184 FindUMsb %3719
       %3723 = OpISub %uint %uint_31 %3722
       %3724 = OpIAdd %uint %3723 %uint_1
       %3725 = OpISub %uint %uint_31 %3723
       %3726 = OpBitwiseAnd %uint %3724 %uint_31
       %3727 = OpShiftLeftLogical %uint %3719 %3726
       %3728 = OpBitwiseAnd %uint %3725 %uint_31
       %3729 = OpShiftRightLogical %uint %3720 %3728
       %3730 = OpBitwiseOr %uint %3727 %3729
       %3731 = OpShiftLeftLogical %uint %3720 %3726
       %3732 = OpShiftRightLogical %uint %3721 %3728
       %3733 = OpBitwiseOr %uint %3731 %3732
       %3734 = OpShiftRightLogical %uint %3730 %uint_9
       %3735 = OpShiftLeftLogical %uint %3723 %uint_23
       %3736 = OpISub %uint %3734 %3735
       %3737 = OpIAdd %uint %3736 %uint_1056964608
       %3738 = OpBitwiseOr %uint %3737 %3718
       %3739 = OpBitcast %float %3738
       %3740 = OpShiftLeftLogical %uint %3730 %uint_23
       %3741 = OpShiftRightLogical %uint %3733 %uint_9
       %3742 = OpBitwiseOr %uint %3741 %3740
       %3743 = OpExtInst %uint %184 FindUMsb %3742
       %3744 = OpISub %uint %uint_31 %3743
       %3745 = OpBitwiseXor %uint %3744 %uint_4294967295
       %3746 = OpIAdd %uint %3744 %uint_1
       %3747 = OpISub %uint %uint_31 %3744
       %3748 = OpBitwiseAnd %uint %3746 %uint_31
       %3749 = OpShiftLeftLogical %uint %3742 %3748
       %3750 = OpBitwiseAnd %uint %3747 %uint_31
       %3751 = OpShiftRightLogical %uint %3733 %3750
       %3752 = OpBitwiseOr %uint %3749 %3751
       %3753 = OpISub %uint %3745 %3723
       %3754 = OpShiftLeftLogical %uint %3753 %uint_23
       %3755 = OpShiftRightLogical %uint %3752 %uint_9
       %3756 = OpIAdd %uint %3754 %uint_864026624
       %3757 = OpBitwiseOr %uint %3755 %3756
       %3758 = OpBitwiseOr %uint %3757 %3718
       %3759 = OpBitcast %float %3758
       %3760 = OpFMul %float %3739 %float_1_57079625
       %3761 = OpFNegate %float %3760
       %3762 = OpIsNan %bool %3739
       %3763 = OpLogicalNot %bool %3762
               OpSelectionMerge %4812 None
               OpBranchConditional %3763 %3766 %4812
       %3766 = OpLabel
       %3767 = OpIsNan %bool %float_1_57079625
       %3768 = OpLogicalNot %bool %3767
               OpSelectionMerge %4280 None
               OpBranchConditional %3768 %3771 %4280
       %3771 = OpLabel
       %3772 = OpIsNan %bool %3761
       %3773 = OpLogicalNot %bool %3772
               OpSelectionMerge %4276 None
               OpBranchConditional %3773 %3776 %4276
       %3776 = OpLabel
       %3777 = OpIsInf %bool %3739
       %3778 = OpLogicalNot %bool %3777
               OpSelectionMerge %4272 None
               OpBranchConditional %3778 %3781 %4272
       %3781 = OpLabel
       %3782 = OpIsInf %bool %float_1_57079625
       %3783 = OpLogicalNot %bool %3782
               OpSelectionMerge %4269 None
               OpBranchConditional %3783 %3786 %4269
       %3786 = OpLabel
       %3787 = OpIsInf %bool %3761
       %3788 = OpLogicalNot %bool %3787
               OpSelectionMerge %4266 None
               OpBranchConditional %3788 %3791 %4266
       %3791 = OpLabel
       %3792 = OpCompositeInsert %v2float %3739 %262 1
       %3793 = OpBitcast %v2uint %3792
       %3794 = OpBitwiseAnd %v2uint %3793 %267
       %3795 = OpINotEqual %v2bool %3794 %270
       %3796 = OpBitwiseAnd %v2uint %3793 %272
       %3797 = OpIEqual %v2bool %3796 %270
       %3798 = OpLogicalOr %v2bool %3797 %3795
       %3799 = OpBitwiseAnd %v2uint %3793 %277
       %3800 = OpBitcast %v2float %3799
       %3801 = OpSelect %v2float %3798 %3792 %3800
       %3802 = OpBitcast %uint %3761
       %3803 = OpBitwiseAnd %uint %3802 %uint_2139095040
       %3804 = OpINotEqual %bool %3803 %uint_0
       %3805 = OpBitwiseAnd %uint %3802 %uint_8388607
       %3806 = OpIEqual %bool %3805 %uint_0
       %3807 = OpLogicalOr %bool %3806 %3804
       %3808 = OpBitwiseAnd %uint %3802 %uint_2147483648
       %3809 = OpBitcast %float %3808
       %3810 = OpSelect %float %3807 %3761 %3809
       %3811 = OpFOrdEqual %v2bool %3801 %290
       %3812 = OpVectorShuffle %v2bool %3811 %292 1 4294967295
       %3813 = OpLogicalOr %v2bool %3812 %3811
       %3814 = OpCompositeExtract %bool %3813 0
       %3815 = OpLogicalNot %bool %3814
               OpSelectionMerge %4263 None
               OpBranchConditional %3815 %3818 %4263
       %3818 = OpLabel
       %3819 = OpFUnordNotEqual %bool %3810 %float_0
               OpSelectionMerge %4250 None
               OpBranchConditional %3819 %3822 %4250
       %3822 = OpLabel
       %3823 = OpBitcast %v2uint %3801
       %3824 = OpCompositeExtract %uint %3823 1
       %3825 = OpShiftRightLogical %uint %3824 %uint_23
       %3826 = OpBitwiseAnd %uint %3825 %uint_255
       %3827 = OpCompositeExtract %uint %3823 0
       %3828 = OpShiftRightLogical %uint %3827 %uint_23
       %3829 = OpBitwiseAnd %uint %3828 %uint_255
       %3830 = OpBitcast %uint %3810
       %3831 = OpShiftRightLogical %uint %3830 %uint_23
       %3832 = OpBitwiseAnd %uint %3831 %uint_255
       %3833 = OpIAdd %uint %3832 %uint_4294967169
       %3834 = OpBitwiseAnd %v2uint %3823 %272
       %3835 = OpBitwiseOr %v2uint %3834 %319
       %3836 = OpBitwiseAnd %uint %3830 %uint_2147483648
       %3837 = OpBitwiseXor %uint %3827 %3824
       %3838 = OpBitwiseAnd %uint %3837 %uint_2147483648
       %3839 = OpCompositeExtract %uint %3835 0
       %3840 = OpCompositeExtract %uint %3835 1
       %3841 = OpUMulExtended %_struct_58 %3840 %3839
       %3842 = OpCompositeExtract %uint %3841 1
       %3843 = OpIMul %uint %3839 %3840
       %3844 = OpShiftLeftLogical %uint %3842 %uint_14
       %3845 = OpShiftRightLogical %uint %3843 %uint_18
       %3846 = OpBitwiseOr %uint %3845 %3844
       %3847 = OpShiftLeftLogical %uint %3843 %uint_14
       %3848 = OpCompositeConstruct %v2uint %3847 %3846
       %3849 = OpBitwiseOr %uint %3846 %3847
       %3850 = OpINotEqual %bool %3849 %uint_0
       %3851 = OpIAdd %uint %3826 %uint_4294967042
       %3852 = OpIAdd %uint %3851 %3829
               OpSelectionMerge %4247 None
               OpBranchConditional %3850 %3855 %4247
       %3855 = OpLabel
       %3856 = OpISub %uint %3852 %3833
       %3857 = OpShiftLeftLogical %uint %3830 %uint_5
       %3858 = OpBitwiseAnd %uint %3857 %uint_268435424
       %3859 = OpBitwiseOr %uint %3858 %uint_268435456
       %3860 = OpCompositeInsert %v2uint %3859 %352 1
       %3861 = OpExtInst %uint %184 SAbs %3856
       %3862 = OpINotEqual %bool %3861 %uint_0
               OpSelectionMerge %3889 None
               OpBranchConditional %3862 %3865 %3889
       %3865 = OpLabel
       %3866 = OpUGreaterThanEqual %bool %3861 %uint_32
               OpSelectionMerge %3874 None
               OpBranchConditional %3866 %3869 %3874
       %3869 = OpLabel
       %3870 = OpBitwiseAnd %uint %3861 %uint_31
       %3871 = OpShiftLeftLogical %uint %uint_1 %3870
       %3872 = OpCompositeInsert %v2uint %3871 %352 1
               OpBranch %3874
       %3874 = OpLabel
       %3875 = OpPhi %v2uint %3872 %3869 %525 %3865
       %3876 = OpPhi %bool %false %3869 %true %3865
               OpSelectionMerge %3886 None
               OpBranchConditional %3876 %3879 %3886
       %3879 = OpLabel
       %3880 = OpISub %uint %uint_0 %3861
       %3881 = OpBitwiseAnd %uint %3880 %uint_31
       %3882 = OpShiftRightLogical %uint %uint_1 %3881
       %3883 = OpShiftLeftLogical %uint %uint_1 %3861
       %3884 = OpCompositeConstruct %v2uint %3883 %3882
               OpBranch %3886
       %3886 = OpLabel
       %3887 = OpPhi %v2uint %3884 %3879 %3875 %3874
               OpBranch %3889
       %3889 = OpLabel
       %3890 = OpPhi %v2uint %7071 %3855 %3887 %3886
       %3891 = OpCompositeExtract %uint %3890 0
       %3892 = OpShiftRightLogical %uint %3891 %uint_1
       %3893 = OpIAdd %uint %3892 %uint_2147483647
       %3894 = OpBitwiseAnd %uint %3891 %uint_1
       %3895 = OpIAdd %uint %3893 %3894
       %3896 = OpShiftRightLogical %uint %3895 %uint_31
       %3897 = OpIAdd %uint %3891 %uint_4294967295
       %3898 = OpCompositeExtract %uint %3890 1
       %3899 = OpIAdd %uint %3898 %uint_4294967295
       %3900 = OpIAdd %uint %3899 %3896
       %3901 = OpCompositeConstruct %v2uint %3897 %3900
       %3902 = OpSLessThanEqual %bool %3856 %uint_0
               OpSelectionMerge %3954 None
               OpBranchConditional %3902 %3905 %3954
       %3905 = OpLabel
       %3906 = OpSGreaterThanEqual %bool %3856 %uint_4294967233
               OpSelectionMerge %3949 None
               OpBranchConditional %3906 %3909 %3949
       %3909 = OpLabel
       %3910 = OpISub %uint %uint_0 %3856
       %3911 = OpBitwiseAnd %v2uint %3901 %3848
       %3912 = OpINotEqual %bool %3852 %3833
               OpSelectionMerge %3944 None
               OpBranchConditional %3912 %3915 %3944
       %3915 = OpLabel
       %3916 = OpUGreaterThanEqual %bool %3910 %uint_32
               OpSelectionMerge %3924 None
               OpBranchConditional %3916 %3919 %3924
       %3919 = OpLabel
       %3920 = OpBitwiseAnd %uint %3910 %uint_31
       %3921 = OpShiftRightLogical %uint %3846 %3920
       %3922 = OpCompositeInsert %v2uint %3921 %417 0
               OpBranch %3924
       %3924 = OpLabel
       %3925 = OpPhi %v2uint %3860 %3919 %525 %3915
       %3926 = OpPhi %v2uint %3911 %3919 %525 %3915
       %3927 = OpPhi %v2uint %3922 %3919 %525 %3915
       %3928 = OpPhi %bool %false %3919 %true %3915
               OpSelectionMerge %3939 None
               OpBranchConditional %3928 %3931 %3939
       %3931 = OpLabel
       %3932 = OpShiftRightLogical %uint %3847 %3910
       %3933 = OpBitwiseAnd %uint %3856 %uint_31
       %3934 = OpShiftLeftLogical %uint %3846 %3933
       %3935 = OpBitwiseOr %uint %3934 %3932
       %3936 = OpShiftRightLogical %uint %3846 %3910
       %3937 = OpCompositeConstruct %v2uint %3935 %3936
               OpBranch %3939
       %3939 = OpLabel
       %3940 = OpPhi %v2uint %3860 %3931 %3925 %3924
       %3941 = OpPhi %v2uint %3911 %3931 %3926 %3924
       %3942 = OpPhi %v2uint %3937 %3931 %3927 %3924
               OpBranch %3944
       %3944 = OpLabel
       %3945 = OpPhi %v2uint %3940 %3939 %3860 %3909
       %3946 = OpPhi %v2uint %3941 %3939 %3911 %3909
       %3947 = OpPhi %v2uint %3942 %3939 %3848 %3909
               OpBranch %3949
       %3949 = OpLabel
       %3950 = OpPhi %v2uint %3945 %3944 %3860 %3905
       %3951 = OpPhi %v2uint %3946 %3944 %3848 %3905
       %3952 = OpPhi %v2uint %3947 %3944 %270 %3905
               OpBranch %3954
       %3954 = OpLabel
       %3955 = OpPhi %v2uint %3950 %3949 %525 %3889
       %3956 = OpPhi %v2uint %3951 %3949 %525 %3889
       %3957 = OpPhi %v2uint %3952 %3949 %525 %3889
       %3958 = OpPhi %bool %false %3949 %true %3889
               OpSelectionMerge %4000 None
               OpBranchConditional %3958 %3961 %4000
       %3961 = OpLabel
       %3962 = OpULessThanEqual %bool %3856 %uint_63
               OpSelectionMerge %3995 None
               OpBranchConditional %3962 %3965 %3995
       %3965 = OpLabel
       %3966 = OpBitwiseAnd %uint %3900 %3859
       %3967 = OpCompositeInsert %v2uint %3966 %352 1
       %3968 = OpUGreaterThanEqual %bool %3856 %uint_32
               OpSelectionMerge %3976 None
               OpBranchConditional %3968 %3971 %3976
       %3971 = OpLabel
       %3972 = OpBitwiseAnd %uint %3856 %uint_31
       %3973 = OpShiftRightLogical %uint %3859 %3972
       %3974 = OpCompositeInsert %v2uint %3973 %417 0
               OpBranch %3976
       %3976 = OpLabel
       %3977 = OpPhi %v2uint %3974 %3971 %525 %3965
       %3978 = OpPhi %v2uint %3967 %3971 %525 %3965
       %3979 = OpPhi %v2uint %3848 %3971 %525 %3965
       %3980 = OpPhi %bool %false %3971 %true %3965
               OpSelectionMerge %3990 None
               OpBranchConditional %3980 %3983 %3990
       %3983 = OpLabel
       %3984 = OpISub %uint %uint_0 %3856
       %3985 = OpBitwiseAnd %uint %3984 %uint_31
       %3986 = OpShiftLeftLogical %uint %3859 %3985
       %3987 = OpShiftRightLogical %uint %3859 %3856
       %3988 = OpCompositeConstruct %v2uint %3986 %3987
               OpBranch %3990
       %3990 = OpLabel
       %3991 = OpPhi %v2uint %3988 %3983 %3977 %3976
       %3992 = OpPhi %v2uint %3967 %3983 %3978 %3976
       %3993 = OpPhi %v2uint %3848 %3983 %3979 %3976
               OpBranch %3995
       %3995 = OpLabel
       %3996 = OpPhi %v2uint %3991 %3990 %270 %3961
       %3997 = OpPhi %v2uint %3992 %3990 %3860 %3961
       %3998 = OpPhi %v2uint %3993 %3990 %3848 %3961
               OpBranch %4000
       %4000 = OpLabel
       %4001 = OpPhi %v2uint %3957 %3954 %3998 %3995
       %4002 = OpPhi %v2uint %3956 %3954 %3997 %3995
       %4003 = OpPhi %v2uint %3955 %3954 %3996 %3995
       %4004 = OpExtInst %uint %184 SMax %3852 %3833
       %4005 = OpINotEqual %bool %3836 %3838
               OpSelectionMerge %4052 None
               OpBranchConditional %4005 %4008 %4052
       %4008 = OpLabel
       %4009 = OpCompositeExtract %uint %4003 0
       %4010 = OpBitwiseXor %uint %4009 %uint_4294967295
       %4011 = OpCompositeExtract %uint %4003 1
       %4012 = OpBitwiseXor %uint %4011 %uint_4294967295
       %4013 = OpShiftRightLogical %uint %4010 %uint_1
       %4014 = OpBitwiseAnd %uint %4010 %uint_1
       %4015 = OpIAdd %uint %4013 %4014
       %4016 = OpShiftRightLogical %uint %4015 %uint_31
       %4017 = OpISub %uint %uint_0 %4009
       %4018 = OpCompositeExtract %uint %4001 0
       %4019 = OpShiftRightLogical %uint %4018 %uint_1
       %4020 = OpShiftRightLogical %uint %4017 %uint_1
       %4021 = OpIAdd %uint %4020 %4019
       %4022 = OpBitwiseAnd %uint %4018 %uint_1
       %4023 = OpBitwiseAnd %uint %4022 %4017
       %4024 = OpIAdd %uint %4021 %4023
       %4025 = OpShiftRightLogical %uint %4024 %uint_31
       %4026 = OpISub %uint %4018 %4009
       %4027 = OpCompositeExtract %uint %4001 1
       %4028 = OpVectorShuffle %v2uint %4002 %525 1 4294967295
       %4029 = OpBitwiseOr %v2uint %4028 %4002
       %4030 = OpCompositeExtract %uint %4029 0
       %4031 = OpINotEqual %bool %4030 %uint_0
       %4032 = OpSGreaterThan %bool %3852 %3833
       %4033 = OpSelect %bool %4031 %4032 %false
       %4034 = OpSelect %v2uint %4033 %533 %270
       %4035 = OpCompositeExtract %uint %4034 0
       %4036 = OpShiftRightLogical %uint %4026 %uint_1
       %4037 = OpShiftRightLogical %uint %4035 %uint_1
       %4038 = OpIAdd %uint %4037 %4036
       %4039 = OpBitwiseAnd %uint %4026 %uint_1
       %4040 = OpBitwiseAnd %uint %4039 %4035
       %4041 = OpIAdd %uint %4038 %4040
       %4042 = OpShiftRightLogical %uint %4041 %uint_31
       %4043 = OpIAdd %uint %4035 %4026
       %4044 = OpCompositeExtract %uint %4034 1
       %4045 = OpIAdd %uint %4027 %4012
       %4046 = OpIAdd %uint %4045 %4016
       %4047 = OpIAdd %uint %4046 %4025
       %4048 = OpIAdd %uint %4047 %4044
       %4049 = OpIAdd %uint %4048 %4042
       %4050 = OpCompositeConstruct %v2uint %4043 %4049
               OpBranch %4052
       %4052 = OpLabel
       %4053 = OpPhi %v2uint %4050 %4008 %525 %4000
       %4054 = OpPhi %bool %false %4008 %true %4000
               OpSelectionMerge %4073 None
               OpBranchConditional %4054 %4057 %4073
       %4057 = OpLabel
       %4058 = OpCompositeExtract %uint %4001 0
       %4059 = OpCompositeExtract %uint %4003 0
       %4060 = OpShiftRightLogical %uint %4058 %uint_1
       %4061 = OpShiftRightLogical %uint %4059 %uint_1
       %4062 = OpIAdd %uint %4061 %4060
       %4063 = OpBitwiseAnd %uint %4058 %uint_1
       %4064 = OpBitwiseAnd %uint %4063 %4059
       %4065 = OpIAdd %uint %4062 %4064
       %4066 = OpShiftRightLogical %uint %4065 %uint_31
       %4067 = OpIAdd %uint %4059 %4058
       %4068 = OpIAdd %v2uint %4003 %4001
       %4069 = OpCompositeExtract %uint %4068 1
       %4070 = OpIAdd %uint %4066 %4069
       %4071 = OpCompositeConstruct %v2uint %4067 %4070
               OpBranch %4073
       %4073 = OpLabel
       %4074 = OpPhi %v2uint %4071 %4057 %4053 %4052
       %4075 = OpCompositeExtract %uint %4074 1
       %4076 = OpSLessThan %bool %4075 %uint_0
               OpSelectionMerge %4092 None
               OpBranchConditional %4076 %4079 %4092
       %4079 = OpLabel
       %4080 = OpCompositeExtract %uint %4074 0
       %4081 = OpBitwiseXor %uint %4080 %uint_4294967295
       %4082 = OpBitwiseXor %uint %4075 %uint_4294967295
       %4083 = OpShiftRightLogical %uint %4081 %uint_1
       %4084 = OpBitwiseAnd %uint %4081 %uint_1
       %4085 = OpIAdd %uint %4083 %4084
       %4086 = OpShiftRightLogical %uint %4085 %uint_31
       %4087 = OpISub %uint %uint_0 %4080
       %4088 = OpIAdd %uint %4086 %4082
       %4089 = OpCompositeConstruct %v2uint %4087 %4088
       %4090 = OpBitwiseXor %uint %3838 %uint_2147483648
               OpBranch %4092
       %4092 = OpLabel
       %4093 = OpPhi %uint %4090 %4079 %3838 %4073
       %4094 = OpPhi %v2uint %4089 %4079 %4074 %4073
       %4095 = OpCompositeExtract %uint %4094 1
       %4096 = OpExtInst %uint %184 FindUMsb %4095
       %4097 = OpISub %uint %uint_31 %4096
       %4098 = OpIEqual %bool %4095 %uint_0
       %4099 = OpCompositeExtract %uint %4094 0
       %4100 = OpExtInst %uint %184 FindUMsb %4099
       %4101 = OpISub %uint %uint_31 %4100
       %4102 = OpIAdd %uint %4101 %uint_32
       %4103 = OpSelect %uint %4098 %4102 %4097
       %4104 = OpISub %uint %uint_3 %4103
       %4105 = OpIAdd %uint %4104 %4004
       %4106 = OpUGreaterThan %bool %4103 %uint_3
               OpSelectionMerge %4137 None
               OpBranchConditional %4106 %4109 %4137
       %4109 = OpLabel
       %4110 = OpIAdd %uint %4103 %uint_4294967293
       %4111 = OpUGreaterThanEqual %bool %4110 %uint_32
               OpSelectionMerge %4119 None
               OpBranchConditional %4111 %4114 %4119
       %4114 = OpLabel
       %4115 = OpBitwiseAnd %uint %4110 %uint_31
       %4116 = OpShiftLeftLogical %uint %4099 %4115
       %4117 = OpCompositeInsert %v2uint %4116 %352 1
               OpBranch %4119
       %4119 = OpLabel
       %4120 = OpPhi %uint %uint_0 %4114 %351 %4109
       %4121 = OpPhi %v2uint %4117 %4114 %525 %4109
       %4122 = OpPhi %bool %false %4114 %true %4109
               OpSelectionMerge %4133 None
               OpBranchConditional %4122 %4125 %4133
       %4125 = OpLabel
       %4126 = OpShiftLeftLogical %uint %4095 %4110
       %4127 = OpBitwiseAnd %uint %4104 %uint_31
       %4128 = OpShiftRightLogical %uint %4099 %4127
       %4129 = OpBitwiseOr %uint %4128 %4126
       %4130 = OpShiftLeftLogical %uint %4099 %4110
       %4131 = OpCompositeConstruct %v2uint %4130 %4129
               OpBranch %4133
       %4133 = OpLabel
       %4134 = OpPhi %uint %uint_0 %4125 %4120 %4119
       %4135 = OpPhi %v2uint %4131 %4125 %4121 %4119
               OpBranch %4137
       %4137 = OpLabel
       %4138 = OpPhi %v2uint %4094 %4092 %4135 %4133
       %4139 = OpPhi %uint %4104 %4092 %4134 %4133
       %4140 = OpIAdd %uint %4139 %uint_5
       %4141 = OpBitwiseAnd %uint %4140 %uint_31
       %4142 = OpShiftLeftLogical %uint %uint_1 %4141
       %4143 = OpCompositeInsert %v2uint %4142 %352 1
       %4144 = OpIAdd %uint %4142 %uint_4294967295
       %4145 = OpCompositeInsert %v2uint %4144 %647 1
       %4146 = OpBitwiseAnd %v2uint %4145 %4138
       %4147 = OpCompositeExtract %uint %4146 1
       %4148 = OpBitwiseAnd %v2uint %4143 %4138
       %4149 = OpIAdd %uint %4139 %uint_2
       %4150 = OpBitwiseAnd %uint %4149 %uint_31
       %4151 = OpShiftLeftLogical %uint %uint_4 %4150
       %4152 = OpUGreaterThan %bool %4147 %4151
       %4153 = OpLogicalNot %bool %4152
               OpSelectionMerge %4184 None
               OpBranchConditional %4153 %4156 %4184
       %4156 = OpLabel
       %4157 = OpCompositeExtract %uint %4146 0
       %4158 = OpVectorShuffle %v2uint %4002 %525 1 4294967295
       %4159 = OpBitwiseOr %v2uint %4158 %4002
       %4160 = OpCompositeExtract %uint %4159 0
       %4161 = OpINotEqual %bool %4160 %uint_0
       %4162 = OpSelect %uint %4161 %uint_1 %uint_0
       %4163 = OpBitwiseOr %uint %4157 %4162
       %4164 = OpIEqual %bool %4147 %4151
       %4165 = OpINotEqual %bool %4163 %uint_0
       %4166 = OpSelect %bool %4164 %4165 %false
       %4167 = OpLogicalNot %bool %4166
               OpSelectionMerge %4180 None
               OpBranchConditional %4167 %4170 %4180
       %4170 = OpLabel
       %4171 = OpINotEqual %bool %4147 %4151
       %4172 = OpLogicalOr %bool %4171 %4165
       %4173 = OpVectorShuffle %v2uint %4148 %525 1 4294967295
       %4174 = OpBitwiseOr %v2uint %4173 %4148
       %4175 = OpCompositeExtract %uint %4174 0
       %4176 = OpIEqual %bool %4175 %uint_0
       %4177 = OpSelect %bool %4172 %true %4176
       %4178 = OpLogicalNot %bool %4177
               OpBranch %4180
       %4180 = OpLabel
       %4181 = OpPhi %v2uint %4138 %4170 %525 %4156
       %4182 = OpPhi %bool %4178 %4170 %4166 %4156
               OpBranch %4184
       %4184 = OpLabel
       %4185 = OpPhi %v2uint %4181 %4180 %525 %4137
       %4186 = OpPhi %bool %4182 %4180 %4152 %4137
               OpSelectionMerge %4194 None
               OpBranchConditional %4186 %4189 %4194
       %4189 = OpLabel
       %4190 = OpCompositeExtract %uint %4138 1
       %4191 = OpIAdd %uint %4142 %4190
       %4192 = OpCompositeInsert %v2uint %4191 %4138 1
               OpBranch %4194
       %4194 = OpLabel
       %4195 = OpPhi %v2uint %4192 %4189 %4185 %4184
       %4196 = OpCompositeExtract %uint %4195 1
       %4197 = OpShiftRightLogical %uint %4196 %4141
       %4198 = OpUGreaterThan %bool %4197 %uint_16777215
       %4199 = OpSelect %uint %4198 %uint_1 %uint_0
       %4200 = OpShiftRightLogical %uint %4197 %4199
       %4201 = OpIAdd %uint %4105 %4199
       %4202 = OpINotEqual %bool %4200 %uint_0
               OpSelectionMerge %4244 None
               OpBranchConditional %4202 %4205 %4244
       %4205 = OpLabel
       %4206 = OpSLessThanEqual %bool %4201 %uint_127
               OpSelectionMerge %4232 None
               OpBranchConditional %4206 %4209 %4232
       %4209 = OpLabel
       %4210 = OpSGreaterThanEqual %bool %4201 %uint_4294967170
               OpSelectionMerge %4221 None
               OpBranchConditional %4210 %4213 %4221
       %4213 = OpLabel
       %4214 = OpShiftLeftLogical %uint %4201 %uint_23
       %4215 = OpIAdd %uint %4214 %uint_1065353216
       %4216 = OpBitwiseAnd %uint %4200 %uint_8388607
       %4217 = OpBitwiseOr %uint %4215 %4216
       %4218 = OpBitwiseOr %uint %4217 %4093
       %4219 = OpBitcast %float %4218
               OpBranch %4221
       %4221 = OpLabel
       %4222 = OpPhi %float %4219 %4213 %261 %4209
       %4223 = OpPhi %bool %false %4213 %true %4209
               OpSelectionMerge %4229 None
               OpBranchConditional %4223 %4226 %4229
       %4226 = OpLabel
       %4227 = OpBitcast %float %4093
               OpBranch %4229
       %4229 = OpLabel
       %4230 = OpPhi %float %4227 %4226 %4222 %4221
               OpBranch %4232
       %4232 = OpLabel
       %4233 = OpPhi %float %4230 %4229 %261 %4205
       %4234 = OpPhi %bool %false %4229 %true %4205
               OpSelectionMerge %4241 None
               OpBranchConditional %4234 %4237 %4241
       %4237 = OpLabel
       %4238 = OpBitwiseOr %uint %4093 %uint_2139095040
       %4239 = OpBitcast %float %4238
               OpBranch %4241
       %4241 = OpLabel
       %4242 = OpPhi %float %4239 %4237 %4233 %4232
               OpBranch %4244
       %4244 = OpLabel
       %4245 = OpPhi %float %4242 %4241 %float_0 %4194
               OpBranch %4247
       %4247 = OpLabel
       %4248 = OpPhi %float %4245 %4244 %3810 %3822
               OpBranch %4250
       %4250 = OpLabel
       %4251 = OpPhi %float %4248 %4247 %261 %3818
       %4252 = OpPhi %bool %false %4247 %true %3818
               OpSelectionMerge %4260 None
               OpBranchConditional %4252 %4255 %4260
       %4255 = OpLabel
       %4256 = OpVectorShuffle %v2float %3801 %765 1 4294967295
       %4257 = OpFMul %v2float %3801 %4256
       %4258 = OpCompositeExtract %float %4257 0
               OpBranch %4260
       %4260 = OpLabel
       %4261 = OpPhi %float %4258 %4255 %4251 %4250
               OpBranch %4263
       %4263 = OpLabel
       %4264 = OpPhi %float %4261 %4260 %3810 %3791
               OpBranch %4266
       %4266 = OpLabel
       %4267 = OpPhi %float %4264 %4263 %3761 %3786
               OpBranch %4269
       %4269 = OpLabel
       %4270 = OpPhi %float %4267 %4266 %261 %3781
               OpBranch %4272
       %4272 = OpLabel
       %4273 = OpPhi %float %4270 %4269 %261 %3776
       %4274 = OpPhi %bool %3782 %4269 %true %3776
               OpBranch %4276
       %4276 = OpLabel
       %4277 = OpPhi %float %4273 %4272 %261 %3771
       %4278 = OpPhi %bool %4274 %4272 %3772 %3771
               OpBranch %4280
       %4280 = OpLabel
       %4281 = OpPhi %float %4277 %4276 %261 %3766
       %4282 = OpPhi %bool %4278 %4276 %true %3766
               OpSelectionMerge %4288 None
               OpBranchConditional %4282 %4285 %4288
       %4285 = OpLabel
       %4286 = OpFSub %float %3760 %3760
               OpBranch %4288
       %4288 = OpLabel
       %4289 = OpPhi %float %4286 %4285 %4281 %4280
       %4290 = OpIsNan %bool %float_7_54978942en08
       %4291 = OpLogicalNot %bool %4290
               OpSelectionMerge %4807 None
               OpBranchConditional %4291 %4294 %4807
       %4294 = OpLabel
       %4295 = OpIsNan %bool %4289
       %4296 = OpLogicalNot %bool %4295
               OpSelectionMerge %4802 None
               OpBranchConditional %4296 %4299 %4802
       %4299 = OpLabel
       %4300 = OpIsInf %bool %3739
       %4301 = OpLogicalNot %bool %4300
               OpSelectionMerge %4797 None
               OpBranchConditional %4301 %4304 %4797
       %4304 = OpLabel
       %4305 = OpIsInf %bool %float_7_54978942en08
       %4306 = OpLogicalNot %bool %4305
               OpSelectionMerge %4792 None
               OpBranchConditional %4306 %4309 %4792
       %4309 = OpLabel
       %4310 = OpIsInf %bool %4289
       %4311 = OpLogicalNot %bool %4310
               OpSelectionMerge %4789 None
               OpBranchConditional %4311 %4314 %4789
       %4314 = OpLabel
       %4315 = OpCompositeInsert %v2float %3739 %826 1
       %4316 = OpBitcast %v2uint %4315
       %4317 = OpBitwiseAnd %v2uint %4316 %267
       %4318 = OpINotEqual %v2bool %4317 %270
       %4319 = OpBitwiseAnd %v2uint %4316 %272
       %4320 = OpIEqual %v2bool %4319 %270
       %4321 = OpLogicalOr %v2bool %4320 %4318
       %4322 = OpBitwiseAnd %v2uint %4316 %277
       %4323 = OpBitcast %v2float %4322
       %4324 = OpSelect %v2float %4321 %4315 %4323
       %4325 = OpBitcast %uint %4289
       %4326 = OpBitwiseAnd %uint %4325 %uint_2139095040
       %4327 = OpINotEqual %bool %4326 %uint_0
       %4328 = OpBitwiseAnd %uint %4325 %uint_8388607
       %4329 = OpIEqual %bool %4328 %uint_0
       %4330 = OpLogicalOr %bool %4329 %4327
       %4331 = OpBitwiseAnd %uint %4325 %uint_2147483648
       %4332 = OpBitcast %float %4331
       %4333 = OpSelect %float %4330 %4289 %4332
       %4334 = OpFOrdEqual %v2bool %4324 %290
       %4335 = OpVectorShuffle %v2bool %4334 %292 1 4294967295
       %4336 = OpLogicalOr %v2bool %4335 %4334
       %4337 = OpCompositeExtract %bool %4336 0
       %4338 = OpLogicalNot %bool %4337
               OpSelectionMerge %4786 None
               OpBranchConditional %4338 %4341 %4786
       %4341 = OpLabel
       %4342 = OpFUnordNotEqual %bool %4333 %float_0
               OpSelectionMerge %4773 None
               OpBranchConditional %4342 %4345 %4773
       %4345 = OpLabel
       %4346 = OpBitcast %v2uint %4324
       %4347 = OpCompositeExtract %uint %4346 1
       %4348 = OpShiftRightLogical %uint %4347 %uint_23
       %4349 = OpBitwiseAnd %uint %4348 %uint_255
       %4350 = OpCompositeExtract %uint %4346 0
       %4351 = OpShiftRightLogical %uint %4350 %uint_23
       %4352 = OpBitwiseAnd %uint %4351 %uint_255
       %4353 = OpBitcast %uint %4333
       %4354 = OpShiftRightLogical %uint %4353 %uint_23
       %4355 = OpBitwiseAnd %uint %4354 %uint_255
       %4356 = OpIAdd %uint %4355 %uint_4294967169
       %4357 = OpBitwiseAnd %v2uint %4346 %272
       %4358 = OpBitwiseOr %v2uint %4357 %319
       %4359 = OpBitwiseAnd %uint %4353 %uint_2147483648
       %4360 = OpBitwiseXor %uint %4350 %4347
       %4361 = OpBitwiseAnd %uint %4360 %uint_2147483648
       %4362 = OpCompositeExtract %uint %4358 0
       %4363 = OpCompositeExtract %uint %4358 1
       %4364 = OpUMulExtended %_struct_58 %4363 %4362
       %4365 = OpCompositeExtract %uint %4364 1
       %4366 = OpIMul %uint %4362 %4363
       %4367 = OpShiftLeftLogical %uint %4365 %uint_14
       %4368 = OpShiftRightLogical %uint %4366 %uint_18
       %4369 = OpBitwiseOr %uint %4368 %4367
       %4370 = OpShiftLeftLogical %uint %4366 %uint_14
       %4371 = OpCompositeConstruct %v2uint %4370 %4369
       %4372 = OpBitwiseOr %uint %4369 %4370
       %4373 = OpINotEqual %bool %4372 %uint_0
       %4374 = OpIAdd %uint %4349 %uint_4294967042
       %4375 = OpIAdd %uint %4374 %4352
               OpSelectionMerge %4770 None
               OpBranchConditional %4373 %4378 %4770
       %4378 = OpLabel
       %4379 = OpISub %uint %4375 %4356
       %4380 = OpShiftLeftLogical %uint %4353 %uint_5
       %4381 = OpBitwiseAnd %uint %4380 %uint_268435424
       %4382 = OpBitwiseOr %uint %4381 %uint_268435456
       %4383 = OpCompositeInsert %v2uint %4382 %352 1
       %4384 = OpExtInst %uint %184 SAbs %4379
       %4385 = OpINotEqual %bool %4384 %uint_0
               OpSelectionMerge %4412 None
               OpBranchConditional %4385 %4388 %4412
       %4388 = OpLabel
       %4389 = OpUGreaterThanEqual %bool %4384 %uint_32
               OpSelectionMerge %4397 None
               OpBranchConditional %4389 %4392 %4397
       %4392 = OpLabel
       %4393 = OpBitwiseAnd %uint %4384 %uint_31
       %4394 = OpShiftLeftLogical %uint %uint_1 %4393
       %4395 = OpCompositeInsert %v2uint %4394 %352 1
               OpBranch %4397
       %4397 = OpLabel
       %4398 = OpPhi %v2uint %4395 %4392 %525 %4388
       %4399 = OpPhi %bool %false %4392 %true %4388
               OpSelectionMerge %4409 None
               OpBranchConditional %4399 %4402 %4409
       %4402 = OpLabel
       %4403 = OpISub %uint %uint_0 %4384
       %4404 = OpBitwiseAnd %uint %4403 %uint_31
       %4405 = OpShiftRightLogical %uint %uint_1 %4404
       %4406 = OpShiftLeftLogical %uint %uint_1 %4384
       %4407 = OpCompositeConstruct %v2uint %4406 %4405
               OpBranch %4409
       %4409 = OpLabel
       %4410 = OpPhi %v2uint %4407 %4402 %4398 %4397
               OpBranch %4412
       %4412 = OpLabel
       %4413 = OpPhi %v2uint %7071 %4378 %4410 %4409
       %4414 = OpCompositeExtract %uint %4413 0
       %4415 = OpShiftRightLogical %uint %4414 %uint_1
       %4416 = OpIAdd %uint %4415 %uint_2147483647
       %4417 = OpBitwiseAnd %uint %4414 %uint_1
       %4418 = OpIAdd %uint %4416 %4417
       %4419 = OpShiftRightLogical %uint %4418 %uint_31
       %4420 = OpIAdd %uint %4414 %uint_4294967295
       %4421 = OpCompositeExtract %uint %4413 1
       %4422 = OpIAdd %uint %4421 %uint_4294967295
       %4423 = OpIAdd %uint %4422 %4419
       %4424 = OpCompositeConstruct %v2uint %4420 %4423
       %4425 = OpSLessThanEqual %bool %4379 %uint_0
               OpSelectionMerge %4477 None
               OpBranchConditional %4425 %4428 %4477
       %4428 = OpLabel
       %4429 = OpSGreaterThanEqual %bool %4379 %uint_4294967233
               OpSelectionMerge %4472 None
               OpBranchConditional %4429 %4432 %4472
       %4432 = OpLabel
       %4433 = OpISub %uint %uint_0 %4379
       %4434 = OpBitwiseAnd %v2uint %4424 %4371
       %4435 = OpINotEqual %bool %4375 %4356
               OpSelectionMerge %4467 None
               OpBranchConditional %4435 %4438 %4467
       %4438 = OpLabel
       %4439 = OpUGreaterThanEqual %bool %4433 %uint_32
               OpSelectionMerge %4447 None
               OpBranchConditional %4439 %4442 %4447
       %4442 = OpLabel
       %4443 = OpBitwiseAnd %uint %4433 %uint_31
       %4444 = OpShiftRightLogical %uint %4369 %4443
       %4445 = OpCompositeInsert %v2uint %4444 %417 0
               OpBranch %4447
       %4447 = OpLabel
       %4448 = OpPhi %v2uint %4383 %4442 %525 %4438
       %4449 = OpPhi %v2uint %4434 %4442 %525 %4438
       %4450 = OpPhi %v2uint %4445 %4442 %525 %4438
       %4451 = OpPhi %bool %false %4442 %true %4438
               OpSelectionMerge %4462 None
               OpBranchConditional %4451 %4454 %4462
       %4454 = OpLabel
       %4455 = OpShiftRightLogical %uint %4370 %4433
       %4456 = OpBitwiseAnd %uint %4379 %uint_31
       %4457 = OpShiftLeftLogical %uint %4369 %4456
       %4458 = OpBitwiseOr %uint %4457 %4455
       %4459 = OpShiftRightLogical %uint %4369 %4433
       %4460 = OpCompositeConstruct %v2uint %4458 %4459
               OpBranch %4462
       %4462 = OpLabel
       %4463 = OpPhi %v2uint %4383 %4454 %4448 %4447
       %4464 = OpPhi %v2uint %4434 %4454 %4449 %4447
       %4465 = OpPhi %v2uint %4460 %4454 %4450 %4447
               OpBranch %4467
       %4467 = OpLabel
       %4468 = OpPhi %v2uint %4463 %4462 %4383 %4432
       %4469 = OpPhi %v2uint %4464 %4462 %4434 %4432
       %4470 = OpPhi %v2uint %4465 %4462 %4371 %4432
               OpBranch %4472
       %4472 = OpLabel
       %4473 = OpPhi %v2uint %4468 %4467 %4383 %4428
       %4474 = OpPhi %v2uint %4469 %4467 %4371 %4428
       %4475 = OpPhi %v2uint %4470 %4467 %270 %4428
               OpBranch %4477
       %4477 = OpLabel
       %4478 = OpPhi %v2uint %4473 %4472 %525 %4412
       %4479 = OpPhi %v2uint %4474 %4472 %525 %4412
       %4480 = OpPhi %v2uint %4475 %4472 %525 %4412
       %4481 = OpPhi %bool %false %4472 %true %4412
               OpSelectionMerge %4523 None
               OpBranchConditional %4481 %4484 %4523
       %4484 = OpLabel
       %4485 = OpULessThanEqual %bool %4379 %uint_63
               OpSelectionMerge %4518 None
               OpBranchConditional %4485 %4488 %4518
       %4488 = OpLabel
       %4489 = OpBitwiseAnd %uint %4423 %4382
       %4490 = OpCompositeInsert %v2uint %4489 %352 1
       %4491 = OpUGreaterThanEqual %bool %4379 %uint_32
               OpSelectionMerge %4499 None
               OpBranchConditional %4491 %4494 %4499
       %4494 = OpLabel
       %4495 = OpBitwiseAnd %uint %4379 %uint_31
       %4496 = OpShiftRightLogical %uint %4382 %4495
       %4497 = OpCompositeInsert %v2uint %4496 %417 0
               OpBranch %4499
       %4499 = OpLabel
       %4500 = OpPhi %v2uint %4497 %4494 %525 %4488
       %4501 = OpPhi %v2uint %4490 %4494 %525 %4488
       %4502 = OpPhi %v2uint %4371 %4494 %525 %4488
       %4503 = OpPhi %bool %false %4494 %true %4488
               OpSelectionMerge %4513 None
               OpBranchConditional %4503 %4506 %4513
       %4506 = OpLabel
       %4507 = OpISub %uint %uint_0 %4379
       %4508 = OpBitwiseAnd %uint %4507 %uint_31
       %4509 = OpShiftLeftLogical %uint %4382 %4508
       %4510 = OpShiftRightLogical %uint %4382 %4379
       %4511 = OpCompositeConstruct %v2uint %4509 %4510
               OpBranch %4513
       %4513 = OpLabel
       %4514 = OpPhi %v2uint %4511 %4506 %4500 %4499
       %4515 = OpPhi %v2uint %4490 %4506 %4501 %4499
       %4516 = OpPhi %v2uint %4371 %4506 %4502 %4499
               OpBranch %4518
       %4518 = OpLabel
       %4519 = OpPhi %v2uint %4514 %4513 %270 %4484
       %4520 = OpPhi %v2uint %4515 %4513 %4383 %4484
       %4521 = OpPhi %v2uint %4516 %4513 %4371 %4484
               OpBranch %4523
       %4523 = OpLabel
       %4524 = OpPhi %v2uint %4480 %4477 %4521 %4518
       %4525 = OpPhi %v2uint %4479 %4477 %4520 %4518
       %4526 = OpPhi %v2uint %4478 %4477 %4519 %4518
       %4527 = OpExtInst %uint %184 SMax %4375 %4356
       %4528 = OpINotEqual %bool %4359 %4361
               OpSelectionMerge %4575 None
               OpBranchConditional %4528 %4531 %4575
       %4531 = OpLabel
       %4532 = OpCompositeExtract %uint %4526 0
       %4533 = OpBitwiseXor %uint %4532 %uint_4294967295
       %4534 = OpCompositeExtract %uint %4526 1
       %4535 = OpBitwiseXor %uint %4534 %uint_4294967295
       %4536 = OpShiftRightLogical %uint %4533 %uint_1
       %4537 = OpBitwiseAnd %uint %4533 %uint_1
       %4538 = OpIAdd %uint %4536 %4537
       %4539 = OpShiftRightLogical %uint %4538 %uint_31
       %4540 = OpISub %uint %uint_0 %4532
       %4541 = OpCompositeExtract %uint %4524 0
       %4542 = OpShiftRightLogical %uint %4541 %uint_1
       %4543 = OpShiftRightLogical %uint %4540 %uint_1
       %4544 = OpIAdd %uint %4543 %4542
       %4545 = OpBitwiseAnd %uint %4541 %uint_1
       %4546 = OpBitwiseAnd %uint %4545 %4540
       %4547 = OpIAdd %uint %4544 %4546
       %4548 = OpShiftRightLogical %uint %4547 %uint_31
       %4549 = OpISub %uint %4541 %4532
       %4550 = OpCompositeExtract %uint %4524 1
       %4551 = OpVectorShuffle %v2uint %4525 %525 1 4294967295
       %4552 = OpBitwiseOr %v2uint %4551 %4525
       %4553 = OpCompositeExtract %uint %4552 0
       %4554 = OpINotEqual %bool %4553 %uint_0
       %4555 = OpSGreaterThan %bool %4375 %4356
       %4556 = OpSelect %bool %4554 %4555 %false
       %4557 = OpSelect %v2uint %4556 %533 %270
       %4558 = OpCompositeExtract %uint %4557 0
       %4559 = OpShiftRightLogical %uint %4549 %uint_1
       %4560 = OpShiftRightLogical %uint %4558 %uint_1
       %4561 = OpIAdd %uint %4560 %4559
       %4562 = OpBitwiseAnd %uint %4549 %uint_1
       %4563 = OpBitwiseAnd %uint %4562 %4558
       %4564 = OpIAdd %uint %4561 %4563
       %4565 = OpShiftRightLogical %uint %4564 %uint_31
       %4566 = OpIAdd %uint %4558 %4549
       %4567 = OpCompositeExtract %uint %4557 1
       %4568 = OpIAdd %uint %4550 %4535
       %4569 = OpIAdd %uint %4568 %4539
       %4570 = OpIAdd %uint %4569 %4548
       %4571 = OpIAdd %uint %4570 %4567
       %4572 = OpIAdd %uint %4571 %4565
       %4573 = OpCompositeConstruct %v2uint %4566 %4572
               OpBranch %4575
       %4575 = OpLabel
       %4576 = OpPhi %v2uint %4573 %4531 %525 %4523
       %4577 = OpPhi %bool %false %4531 %true %4523
               OpSelectionMerge %4596 None
               OpBranchConditional %4577 %4580 %4596
       %4580 = OpLabel
       %4581 = OpCompositeExtract %uint %4524 0
       %4582 = OpCompositeExtract %uint %4526 0
       %4583 = OpShiftRightLogical %uint %4581 %uint_1
       %4584 = OpShiftRightLogical %uint %4582 %uint_1
       %4585 = OpIAdd %uint %4584 %4583
       %4586 = OpBitwiseAnd %uint %4581 %uint_1
       %4587 = OpBitwiseAnd %uint %4586 %4582
       %4588 = OpIAdd %uint %4585 %4587
       %4589 = OpShiftRightLogical %uint %4588 %uint_31
       %4590 = OpIAdd %uint %4582 %4581
       %4591 = OpIAdd %v2uint %4526 %4524
       %4592 = OpCompositeExtract %uint %4591 1
       %4593 = OpIAdd %uint %4589 %4592
       %4594 = OpCompositeConstruct %v2uint %4590 %4593
               OpBranch %4596
       %4596 = OpLabel
       %4597 = OpPhi %v2uint %4594 %4580 %4576 %4575
       %4598 = OpCompositeExtract %uint %4597 1
       %4599 = OpSLessThan %bool %4598 %uint_0
               OpSelectionMerge %4615 None
               OpBranchConditional %4599 %4602 %4615
       %4602 = OpLabel
       %4603 = OpCompositeExtract %uint %4597 0
       %4604 = OpBitwiseXor %uint %4603 %uint_4294967295
       %4605 = OpBitwiseXor %uint %4598 %uint_4294967295
       %4606 = OpShiftRightLogical %uint %4604 %uint_1
       %4607 = OpBitwiseAnd %uint %4604 %uint_1
       %4608 = OpIAdd %uint %4606 %4607
       %4609 = OpShiftRightLogical %uint %4608 %uint_31
       %4610 = OpISub %uint %uint_0 %4603
       %4611 = OpIAdd %uint %4609 %4605
       %4612 = OpCompositeConstruct %v2uint %4610 %4611
       %4613 = OpBitwiseXor %uint %4361 %uint_2147483648
               OpBranch %4615
       %4615 = OpLabel
       %4616 = OpPhi %uint %4613 %4602 %4361 %4596
       %4617 = OpPhi %v2uint %4612 %4602 %4597 %4596
       %4618 = OpCompositeExtract %uint %4617 1
       %4619 = OpExtInst %uint %184 FindUMsb %4618
       %4620 = OpISub %uint %uint_31 %4619
       %4621 = OpIEqual %bool %4618 %uint_0
       %4622 = OpCompositeExtract %uint %4617 0
       %4623 = OpExtInst %uint %184 FindUMsb %4622
       %4624 = OpISub %uint %uint_31 %4623
       %4625 = OpIAdd %uint %4624 %uint_32
       %4626 = OpSelect %uint %4621 %4625 %4620
       %4627 = OpISub %uint %uint_3 %4626
       %4628 = OpIAdd %uint %4627 %4527
       %4629 = OpUGreaterThan %bool %4626 %uint_3
               OpSelectionMerge %4660 None
               OpBranchConditional %4629 %4632 %4660
       %4632 = OpLabel
       %4633 = OpIAdd %uint %4626 %uint_4294967293
       %4634 = OpUGreaterThanEqual %bool %4633 %uint_32
               OpSelectionMerge %4642 None
               OpBranchConditional %4634 %4637 %4642
       %4637 = OpLabel
       %4638 = OpBitwiseAnd %uint %4633 %uint_31
       %4639 = OpShiftLeftLogical %uint %4622 %4638
       %4640 = OpCompositeInsert %v2uint %4639 %352 1
               OpBranch %4642
       %4642 = OpLabel
       %4643 = OpPhi %uint %uint_0 %4637 %351 %4632
       %4644 = OpPhi %v2uint %4640 %4637 %525 %4632
       %4645 = OpPhi %bool %false %4637 %true %4632
               OpSelectionMerge %4656 None
               OpBranchConditional %4645 %4648 %4656
       %4648 = OpLabel
       %4649 = OpShiftLeftLogical %uint %4618 %4633
       %4650 = OpBitwiseAnd %uint %4627 %uint_31
       %4651 = OpShiftRightLogical %uint %4622 %4650
       %4652 = OpBitwiseOr %uint %4651 %4649
       %4653 = OpShiftLeftLogical %uint %4622 %4633
       %4654 = OpCompositeConstruct %v2uint %4653 %4652
               OpBranch %4656
       %4656 = OpLabel
       %4657 = OpPhi %uint %uint_0 %4648 %4643 %4642
       %4658 = OpPhi %v2uint %4654 %4648 %4644 %4642
               OpBranch %4660
       %4660 = OpLabel
       %4661 = OpPhi %v2uint %4617 %4615 %4658 %4656
       %4662 = OpPhi %uint %4627 %4615 %4657 %4656
       %4663 = OpIAdd %uint %4662 %uint_5
       %4664 = OpBitwiseAnd %uint %4663 %uint_31
       %4665 = OpShiftLeftLogical %uint %uint_1 %4664
       %4666 = OpCompositeInsert %v2uint %4665 %352 1
       %4667 = OpIAdd %uint %4665 %uint_4294967295
       %4668 = OpCompositeInsert %v2uint %4667 %647 1
       %4669 = OpBitwiseAnd %v2uint %4668 %4661
       %4670 = OpCompositeExtract %uint %4669 1
       %4671 = OpBitwiseAnd %v2uint %4666 %4661
       %4672 = OpIAdd %uint %4662 %uint_2
       %4673 = OpBitwiseAnd %uint %4672 %uint_31
       %4674 = OpShiftLeftLogical %uint %uint_4 %4673
       %4675 = OpUGreaterThan %bool %4670 %4674
       %4676 = OpLogicalNot %bool %4675
               OpSelectionMerge %4707 None
               OpBranchConditional %4676 %4679 %4707
       %4679 = OpLabel
       %4680 = OpCompositeExtract %uint %4669 0
       %4681 = OpVectorShuffle %v2uint %4525 %525 1 4294967295
       %4682 = OpBitwiseOr %v2uint %4681 %4525
       %4683 = OpCompositeExtract %uint %4682 0
       %4684 = OpINotEqual %bool %4683 %uint_0
       %4685 = OpSelect %uint %4684 %uint_1 %uint_0
       %4686 = OpBitwiseOr %uint %4680 %4685
       %4687 = OpIEqual %bool %4670 %4674
       %4688 = OpINotEqual %bool %4686 %uint_0
       %4689 = OpSelect %bool %4687 %4688 %false
       %4690 = OpLogicalNot %bool %4689
               OpSelectionMerge %4703 None
               OpBranchConditional %4690 %4693 %4703
       %4693 = OpLabel
       %4694 = OpINotEqual %bool %4670 %4674
       %4695 = OpLogicalOr %bool %4694 %4688
       %4696 = OpVectorShuffle %v2uint %4671 %525 1 4294967295
       %4697 = OpBitwiseOr %v2uint %4696 %4671
       %4698 = OpCompositeExtract %uint %4697 0
       %4699 = OpIEqual %bool %4698 %uint_0
       %4700 = OpSelect %bool %4695 %true %4699
       %4701 = OpLogicalNot %bool %4700
               OpBranch %4703
       %4703 = OpLabel
       %4704 = OpPhi %v2uint %4661 %4693 %525 %4679
       %4705 = OpPhi %bool %4701 %4693 %4689 %4679
               OpBranch %4707
       %4707 = OpLabel
       %4708 = OpPhi %v2uint %4704 %4703 %525 %4660
       %4709 = OpPhi %bool %4705 %4703 %4675 %4660
               OpSelectionMerge %4717 None
               OpBranchConditional %4709 %4712 %4717
       %4712 = OpLabel
       %4713 = OpCompositeExtract %uint %4661 1
       %4714 = OpIAdd %uint %4665 %4713
       %4715 = OpCompositeInsert %v2uint %4714 %4661 1
               OpBranch %4717
       %4717 = OpLabel
       %4718 = OpPhi %v2uint %4715 %4712 %4708 %4707
       %4719 = OpCompositeExtract %uint %4718 1
       %4720 = OpShiftRightLogical %uint %4719 %4664
       %4721 = OpUGreaterThan %bool %4720 %uint_16777215
       %4722 = OpSelect %uint %4721 %uint_1 %uint_0
       %4723 = OpShiftRightLogical %uint %4720 %4722
       %4724 = OpIAdd %uint %4628 %4722
       %4725 = OpINotEqual %bool %4723 %uint_0
               OpSelectionMerge %4767 None
               OpBranchConditional %4725 %4728 %4767
       %4728 = OpLabel
       %4729 = OpSLessThanEqual %bool %4724 %uint_127
               OpSelectionMerge %4755 None
               OpBranchConditional %4729 %4732 %4755
       %4732 = OpLabel
       %4733 = OpSGreaterThanEqual %bool %4724 %uint_4294967170
               OpSelectionMerge %4744 None
               OpBranchConditional %4733 %4736 %4744
       %4736 = OpLabel
       %4737 = OpShiftLeftLogical %uint %4724 %uint_23
       %4738 = OpIAdd %uint %4737 %uint_1065353216
       %4739 = OpBitwiseAnd %uint %4723 %uint_8388607
       %4740 = OpBitwiseOr %uint %4738 %4739
       %4741 = OpBitwiseOr %uint %4740 %4616
       %4742 = OpBitcast %float %4741
               OpBranch %4744
       %4744 = OpLabel
       %4745 = OpPhi %float %4742 %4736 %261 %4732
       %4746 = OpPhi %bool %false %4736 %true %4732
               OpSelectionMerge %4752 None
               OpBranchConditional %4746 %4749 %4752
       %4749 = OpLabel
       %4750 = OpBitcast %float %4616
               OpBranch %4752
       %4752 = OpLabel
       %4753 = OpPhi %float %4750 %4749 %4745 %4744
               OpBranch %4755
       %4755 = OpLabel
       %4756 = OpPhi %float %4753 %4752 %261 %4728
       %4757 = OpPhi %bool %false %4752 %true %4728
               OpSelectionMerge %4764 None
               OpBranchConditional %4757 %4760 %4764
       %4760 = OpLabel
       %4761 = OpBitwiseOr %uint %4616 %uint_2139095040
       %4762 = OpBitcast %float %4761
               OpBranch %4764
       %4764 = OpLabel
       %4765 = OpPhi %float %4762 %4760 %4756 %4755
               OpBranch %4767
       %4767 = OpLabel
       %4768 = OpPhi %float %4765 %4764 %float_0 %4717
               OpBranch %4770
       %4770 = OpLabel
       %4771 = OpPhi %float %4768 %4767 %4333 %4345
               OpBranch %4773
       %4773 = OpLabel
       %4774 = OpPhi %float %4771 %4770 %261 %4341
       %4775 = OpPhi %bool %false %4770 %true %4341
               OpSelectionMerge %4783 None
               OpBranchConditional %4775 %4778 %4783
       %4778 = OpLabel
       %4779 = OpVectorShuffle %v2float %4324 %765 1 4294967295
       %4780 = OpFMul %v2float %4324 %4779
       %4781 = OpCompositeExtract %float %4780 0
               OpBranch %4783
       %4783 = OpLabel
       %4784 = OpPhi %float %4781 %4778 %4774 %4773
               OpBranch %4786
       %4786 = OpLabel
       %4787 = OpPhi %float %4784 %4783 %4333 %4314
               OpBranch %4789
       %4789 = OpLabel
       %4790 = OpPhi %float %4787 %4786 %4289 %4309
               OpBranch %4792
       %4792 = OpLabel
       %4793 = OpPhi %float %261 %4789 %4289 %4304
       %4794 = OpPhi %float %4790 %4789 %261 %4304
       %4795 = OpPhi %bool %false %4789 %true %4304
               OpBranch %4797
       %4797 = OpLabel
       %4798 = OpPhi %float %4793 %4792 %4289 %4299
       %4799 = OpPhi %float %4794 %4792 %261 %4299
       %4800 = OpPhi %bool %4795 %4792 %4300 %4299
               OpBranch %4802
       %4802 = OpLabel
       %4803 = OpPhi %float %4798 %4797 %4289 %4294
       %4804 = OpPhi %float %4799 %4797 %261 %4294
       %4805 = OpPhi %bool %4800 %4797 %4295 %4294
               OpBranch %4807
       %4807 = OpLabel
       %4808 = OpPhi %float %4803 %4802 %4289 %4288
       %4809 = OpPhi %float %4804 %4802 %261 %4288
       %4810 = OpPhi %bool %4805 %4802 %4290 %4288
               OpBranch %4812
       %4812 = OpLabel
       %4813 = OpPhi %float %4808 %4807 %261 %3606
       %4814 = OpPhi %float %4809 %4807 %261 %3606
       %4815 = OpPhi %bool %4810 %4807 %false %3606
       %4816 = OpPhi %bool %false %4807 %true %3606
               OpSelectionMerge %4822 None
               OpBranchConditional %4816 %4819 %4822
       %4819 = OpLabel
       %4820 = OpFSub %float %3760 %3760
               OpBranch %4822
       %4822 = OpLabel
       %4823 = OpPhi %float %4820 %4819 %4813 %4812
       %4824 = OpPhi %float %261 %4819 %4814 %4812
       %4825 = OpPhi %bool %true %4819 %4815 %4812
               OpSelectionMerge %4832 None
               OpBranchConditional %4825 %4828 %4832
       %4828 = OpLabel
       %4829 = OpFMul %float %3739 %float_7_54978942en08
       %4830 = OpFAdd %float %4829 %4823
               OpBranch %4832
       %4832 = OpLabel
       %4833 = OpPhi %float %4830 %4828 %4824 %4822
       %4834 = OpIsNan %bool %3759
       %4835 = OpLogicalNot %bool %4834
               OpSelectionMerge %5357 None
               OpBranchConditional %4835 %4838 %5357
       %4838 = OpLabel
       %4839 = OpIsNan %bool %float_1_57079625
       %4840 = OpLogicalNot %bool %4839
               OpSelectionMerge %5353 None
               OpBranchConditional %4840 %4843 %5353
       %4843 = OpLabel
       %4844 = OpIsNan %bool %4833
       %4845 = OpLogicalNot %bool %4844
               OpSelectionMerge %5349 None
               OpBranchConditional %4845 %4848 %5349
       %4848 = OpLabel
       %4849 = OpIsInf %bool %3759
       %4850 = OpLogicalNot %bool %4849
               OpSelectionMerge %5345 None
               OpBranchConditional %4850 %4853 %5345
       %4853 = OpLabel
       %4854 = OpIsInf %bool %float_1_57079625
       %4855 = OpLogicalNot %bool %4854
               OpSelectionMerge %5341 None
               OpBranchConditional %4855 %4858 %5341
       %4858 = OpLabel
       %4859 = OpIsInf %bool %4833
       %4860 = OpLogicalNot %bool %4859
               OpSelectionMerge %5338 None
               OpBranchConditional %4860 %4863 %5338
       %4863 = OpLabel
       %4864 = OpCompositeInsert %v2float %3759 %262 1
       %4865 = OpBitcast %v2uint %4864
       %4866 = OpBitwiseAnd %v2uint %4865 %267
       %4867 = OpINotEqual %v2bool %4866 %270
       %4868 = OpBitwiseAnd %v2uint %4865 %272
       %4869 = OpIEqual %v2bool %4868 %270
       %4870 = OpLogicalOr %v2bool %4869 %4867
       %4871 = OpBitwiseAnd %v2uint %4865 %277
       %4872 = OpBitcast %v2float %4871
       %4873 = OpSelect %v2float %4870 %4864 %4872
       %4874 = OpBitcast %uint %4833
       %4875 = OpBitwiseAnd %uint %4874 %uint_2139095040
       %4876 = OpINotEqual %bool %4875 %uint_0
       %4877 = OpBitwiseAnd %uint %4874 %uint_8388607
       %4878 = OpIEqual %bool %4877 %uint_0
       %4879 = OpLogicalOr %bool %4878 %4876
       %4880 = OpBitwiseAnd %uint %4874 %uint_2147483648
       %4881 = OpBitcast %float %4880
       %4882 = OpSelect %float %4879 %4833 %4881
       %4883 = OpFOrdEqual %v2bool %4873 %290
       %4884 = OpVectorShuffle %v2bool %4883 %292 1 4294967295
       %4885 = OpLogicalOr %v2bool %4884 %4883
       %4886 = OpCompositeExtract %bool %4885 0
       %4887 = OpLogicalNot %bool %4886
               OpSelectionMerge %5335 None
               OpBranchConditional %4887 %4890 %5335
       %4890 = OpLabel
       %4891 = OpFUnordNotEqual %bool %4882 %float_0
               OpSelectionMerge %5322 None
               OpBranchConditional %4891 %4894 %5322
       %4894 = OpLabel
       %4895 = OpBitcast %v2uint %4873
       %4896 = OpCompositeExtract %uint %4895 1
       %4897 = OpShiftRightLogical %uint %4896 %uint_23
       %4898 = OpBitwiseAnd %uint %4897 %uint_255
       %4899 = OpCompositeExtract %uint %4895 0
       %4900 = OpShiftRightLogical %uint %4899 %uint_23
       %4901 = OpBitwiseAnd %uint %4900 %uint_255
       %4902 = OpBitcast %uint %4882
       %4903 = OpShiftRightLogical %uint %4902 %uint_23
       %4904 = OpBitwiseAnd %uint %4903 %uint_255
       %4905 = OpIAdd %uint %4904 %uint_4294967169
       %4906 = OpBitwiseAnd %v2uint %4895 %272
       %4907 = OpBitwiseOr %v2uint %4906 %319
       %4908 = OpBitwiseAnd %uint %4902 %uint_2147483648
       %4909 = OpBitwiseXor %uint %4899 %4896
       %4910 = OpBitwiseAnd %uint %4909 %uint_2147483648
       %4911 = OpCompositeExtract %uint %4907 0
       %4912 = OpCompositeExtract %uint %4907 1
       %4913 = OpUMulExtended %_struct_58 %4912 %4911
       %4914 = OpCompositeExtract %uint %4913 1
       %4915 = OpIMul %uint %4911 %4912
       %4916 = OpShiftLeftLogical %uint %4914 %uint_14
       %4917 = OpShiftRightLogical %uint %4915 %uint_18
       %4918 = OpBitwiseOr %uint %4917 %4916
       %4919 = OpShiftLeftLogical %uint %4915 %uint_14
       %4920 = OpCompositeConstruct %v2uint %4919 %4918
       %4921 = OpBitwiseOr %uint %4918 %4919
       %4922 = OpINotEqual %bool %4921 %uint_0
       %4923 = OpIAdd %uint %4898 %uint_4294967042
       %4924 = OpIAdd %uint %4923 %4901
               OpSelectionMerge %5319 None
               OpBranchConditional %4922 %4927 %5319
       %4927 = OpLabel
       %4928 = OpISub %uint %4924 %4905
       %4929 = OpShiftLeftLogical %uint %4902 %uint_5
       %4930 = OpBitwiseAnd %uint %4929 %uint_268435424
       %4931 = OpBitwiseOr %uint %4930 %uint_268435456
       %4932 = OpCompositeInsert %v2uint %4931 %352 1
       %4933 = OpExtInst %uint %184 SAbs %4928
       %4934 = OpINotEqual %bool %4933 %uint_0
               OpSelectionMerge %4961 None
               OpBranchConditional %4934 %4937 %4961
       %4937 = OpLabel
       %4938 = OpUGreaterThanEqual %bool %4933 %uint_32
               OpSelectionMerge %4946 None
               OpBranchConditional %4938 %4941 %4946
       %4941 = OpLabel
       %4942 = OpBitwiseAnd %uint %4933 %uint_31
       %4943 = OpShiftLeftLogical %uint %uint_1 %4942
       %4944 = OpCompositeInsert %v2uint %4943 %352 1
               OpBranch %4946
       %4946 = OpLabel
       %4947 = OpPhi %v2uint %4944 %4941 %525 %4937
       %4948 = OpPhi %bool %false %4941 %true %4937
               OpSelectionMerge %4958 None
               OpBranchConditional %4948 %4951 %4958
       %4951 = OpLabel
       %4952 = OpISub %uint %uint_0 %4933
       %4953 = OpBitwiseAnd %uint %4952 %uint_31
       %4954 = OpShiftRightLogical %uint %uint_1 %4953
       %4955 = OpShiftLeftLogical %uint %uint_1 %4933
       %4956 = OpCompositeConstruct %v2uint %4955 %4954
               OpBranch %4958
       %4958 = OpLabel
       %4959 = OpPhi %v2uint %4956 %4951 %4947 %4946
               OpBranch %4961
       %4961 = OpLabel
       %4962 = OpPhi %v2uint %7071 %4927 %4959 %4958
       %4963 = OpCompositeExtract %uint %4962 0
       %4964 = OpShiftRightLogical %uint %4963 %uint_1
       %4965 = OpIAdd %uint %4964 %uint_2147483647
       %4966 = OpBitwiseAnd %uint %4963 %uint_1
       %4967 = OpIAdd %uint %4965 %4966
       %4968 = OpShiftRightLogical %uint %4967 %uint_31
       %4969 = OpIAdd %uint %4963 %uint_4294967295
       %4970 = OpCompositeExtract %uint %4962 1
       %4971 = OpIAdd %uint %4970 %uint_4294967295
       %4972 = OpIAdd %uint %4971 %4968
       %4973 = OpCompositeConstruct %v2uint %4969 %4972
       %4974 = OpSLessThanEqual %bool %4928 %uint_0
               OpSelectionMerge %5026 None
               OpBranchConditional %4974 %4977 %5026
       %4977 = OpLabel
       %4978 = OpSGreaterThanEqual %bool %4928 %uint_4294967233
               OpSelectionMerge %5021 None
               OpBranchConditional %4978 %4981 %5021
       %4981 = OpLabel
       %4982 = OpISub %uint %uint_0 %4928
       %4983 = OpBitwiseAnd %v2uint %4973 %4920
       %4984 = OpINotEqual %bool %4924 %4905
               OpSelectionMerge %5016 None
               OpBranchConditional %4984 %4987 %5016
       %4987 = OpLabel
       %4988 = OpUGreaterThanEqual %bool %4982 %uint_32
               OpSelectionMerge %4996 None
               OpBranchConditional %4988 %4991 %4996
       %4991 = OpLabel
       %4992 = OpBitwiseAnd %uint %4982 %uint_31
       %4993 = OpShiftRightLogical %uint %4918 %4992
       %4994 = OpCompositeInsert %v2uint %4993 %417 0
               OpBranch %4996
       %4996 = OpLabel
       %4997 = OpPhi %v2uint %4932 %4991 %525 %4987
       %4998 = OpPhi %v2uint %4983 %4991 %525 %4987
       %4999 = OpPhi %v2uint %4994 %4991 %525 %4987
       %5000 = OpPhi %bool %false %4991 %true %4987
               OpSelectionMerge %5011 None
               OpBranchConditional %5000 %5003 %5011
       %5003 = OpLabel
       %5004 = OpShiftRightLogical %uint %4919 %4982
       %5005 = OpBitwiseAnd %uint %4928 %uint_31
       %5006 = OpShiftLeftLogical %uint %4918 %5005
       %5007 = OpBitwiseOr %uint %5006 %5004
       %5008 = OpShiftRightLogical %uint %4918 %4982
       %5009 = OpCompositeConstruct %v2uint %5007 %5008
               OpBranch %5011
       %5011 = OpLabel
       %5012 = OpPhi %v2uint %4932 %5003 %4997 %4996
       %5013 = OpPhi %v2uint %4983 %5003 %4998 %4996
       %5014 = OpPhi %v2uint %5009 %5003 %4999 %4996
               OpBranch %5016
       %5016 = OpLabel
       %5017 = OpPhi %v2uint %5012 %5011 %4932 %4981
       %5018 = OpPhi %v2uint %5013 %5011 %4983 %4981
       %5019 = OpPhi %v2uint %5014 %5011 %4920 %4981
               OpBranch %5021
       %5021 = OpLabel
       %5022 = OpPhi %v2uint %5017 %5016 %4932 %4977
       %5023 = OpPhi %v2uint %5018 %5016 %4920 %4977
       %5024 = OpPhi %v2uint %5019 %5016 %270 %4977
               OpBranch %5026
       %5026 = OpLabel
       %5027 = OpPhi %v2uint %5022 %5021 %525 %4961
       %5028 = OpPhi %v2uint %5023 %5021 %525 %4961
       %5029 = OpPhi %v2uint %5024 %5021 %525 %4961
       %5030 = OpPhi %bool %false %5021 %true %4961
               OpSelectionMerge %5072 None
               OpBranchConditional %5030 %5033 %5072
       %5033 = OpLabel
       %5034 = OpULessThanEqual %bool %4928 %uint_63
               OpSelectionMerge %5067 None
               OpBranchConditional %5034 %5037 %5067
       %5037 = OpLabel
       %5038 = OpBitwiseAnd %uint %4972 %4931
       %5039 = OpCompositeInsert %v2uint %5038 %352 1
       %5040 = OpUGreaterThanEqual %bool %4928 %uint_32
               OpSelectionMerge %5048 None
               OpBranchConditional %5040 %5043 %5048
       %5043 = OpLabel
       %5044 = OpBitwiseAnd %uint %4928 %uint_31
       %5045 = OpShiftRightLogical %uint %4931 %5044
       %5046 = OpCompositeInsert %v2uint %5045 %417 0
               OpBranch %5048
       %5048 = OpLabel
       %5049 = OpPhi %v2uint %5046 %5043 %525 %5037
       %5050 = OpPhi %v2uint %5039 %5043 %525 %5037
       %5051 = OpPhi %v2uint %4920 %5043 %525 %5037
       %5052 = OpPhi %bool %false %5043 %true %5037
               OpSelectionMerge %5062 None
               OpBranchConditional %5052 %5055 %5062
       %5055 = OpLabel
       %5056 = OpISub %uint %uint_0 %4928
       %5057 = OpBitwiseAnd %uint %5056 %uint_31
       %5058 = OpShiftLeftLogical %uint %4931 %5057
       %5059 = OpShiftRightLogical %uint %4931 %4928
       %5060 = OpCompositeConstruct %v2uint %5058 %5059
               OpBranch %5062
       %5062 = OpLabel
       %5063 = OpPhi %v2uint %5060 %5055 %5049 %5048
       %5064 = OpPhi %v2uint %5039 %5055 %5050 %5048
       %5065 = OpPhi %v2uint %4920 %5055 %5051 %5048
               OpBranch %5067
       %5067 = OpLabel
       %5068 = OpPhi %v2uint %5063 %5062 %270 %5033
       %5069 = OpPhi %v2uint %5064 %5062 %4932 %5033
       %5070 = OpPhi %v2uint %5065 %5062 %4920 %5033
               OpBranch %5072
       %5072 = OpLabel
       %5073 = OpPhi %v2uint %5029 %5026 %5070 %5067
       %5074 = OpPhi %v2uint %5028 %5026 %5069 %5067
       %5075 = OpPhi %v2uint %5027 %5026 %5068 %5067
       %5076 = OpExtInst %uint %184 SMax %4924 %4905
       %5077 = OpINotEqual %bool %4908 %4910
               OpSelectionMerge %5124 None
               OpBranchConditional %5077 %5080 %5124
       %5080 = OpLabel
       %5081 = OpCompositeExtract %uint %5075 0
       %5082 = OpBitwiseXor %uint %5081 %uint_4294967295
       %5083 = OpCompositeExtract %uint %5075 1
       %5084 = OpBitwiseXor %uint %5083 %uint_4294967295
       %5085 = OpShiftRightLogical %uint %5082 %uint_1
       %5086 = OpBitwiseAnd %uint %5082 %uint_1
       %5087 = OpIAdd %uint %5085 %5086
       %5088 = OpShiftRightLogical %uint %5087 %uint_31
       %5089 = OpISub %uint %uint_0 %5081
       %5090 = OpCompositeExtract %uint %5073 0
       %5091 = OpShiftRightLogical %uint %5090 %uint_1
       %5092 = OpShiftRightLogical %uint %5089 %uint_1
       %5093 = OpIAdd %uint %5092 %5091
       %5094 = OpBitwiseAnd %uint %5090 %uint_1
       %5095 = OpBitwiseAnd %uint %5094 %5089
       %5096 = OpIAdd %uint %5093 %5095
       %5097 = OpShiftRightLogical %uint %5096 %uint_31
       %5098 = OpISub %uint %5090 %5081
       %5099 = OpCompositeExtract %uint %5073 1
       %5100 = OpVectorShuffle %v2uint %5074 %525 1 4294967295
       %5101 = OpBitwiseOr %v2uint %5100 %5074
       %5102 = OpCompositeExtract %uint %5101 0
       %5103 = OpINotEqual %bool %5102 %uint_0
       %5104 = OpSGreaterThan %bool %4924 %4905
       %5105 = OpSelect %bool %5103 %5104 %false
       %5106 = OpSelect %v2uint %5105 %533 %270
       %5107 = OpCompositeExtract %uint %5106 0
       %5108 = OpShiftRightLogical %uint %5098 %uint_1
       %5109 = OpShiftRightLogical %uint %5107 %uint_1
       %5110 = OpIAdd %uint %5109 %5108
       %5111 = OpBitwiseAnd %uint %5098 %uint_1
       %5112 = OpBitwiseAnd %uint %5111 %5107
       %5113 = OpIAdd %uint %5110 %5112
       %5114 = OpShiftRightLogical %uint %5113 %uint_31
       %5115 = OpIAdd %uint %5107 %5098
       %5116 = OpCompositeExtract %uint %5106 1
       %5117 = OpIAdd %uint %5099 %5084
       %5118 = OpIAdd %uint %5117 %5088
       %5119 = OpIAdd %uint %5118 %5097
       %5120 = OpIAdd %uint %5119 %5116
       %5121 = OpIAdd %uint %5120 %5114
       %5122 = OpCompositeConstruct %v2uint %5115 %5121
               OpBranch %5124
       %5124 = OpLabel
       %5125 = OpPhi %v2uint %5122 %5080 %525 %5072
       %5126 = OpPhi %bool %false %5080 %true %5072
               OpSelectionMerge %5145 None
               OpBranchConditional %5126 %5129 %5145
       %5129 = OpLabel
       %5130 = OpCompositeExtract %uint %5073 0
       %5131 = OpCompositeExtract %uint %5075 0
       %5132 = OpShiftRightLogical %uint %5130 %uint_1
       %5133 = OpShiftRightLogical %uint %5131 %uint_1
       %5134 = OpIAdd %uint %5133 %5132
       %5135 = OpBitwiseAnd %uint %5130 %uint_1
       %5136 = OpBitwiseAnd %uint %5135 %5131
       %5137 = OpIAdd %uint %5134 %5136
       %5138 = OpShiftRightLogical %uint %5137 %uint_31
       %5139 = OpIAdd %uint %5131 %5130
       %5140 = OpIAdd %v2uint %5075 %5073
       %5141 = OpCompositeExtract %uint %5140 1
       %5142 = OpIAdd %uint %5138 %5141
       %5143 = OpCompositeConstruct %v2uint %5139 %5142
               OpBranch %5145
       %5145 = OpLabel
       %5146 = OpPhi %v2uint %5143 %5129 %5125 %5124
       %5147 = OpCompositeExtract %uint %5146 1
       %5148 = OpSLessThan %bool %5147 %uint_0
               OpSelectionMerge %5164 None
               OpBranchConditional %5148 %5151 %5164
       %5151 = OpLabel
       %5152 = OpCompositeExtract %uint %5146 0
       %5153 = OpBitwiseXor %uint %5152 %uint_4294967295
       %5154 = OpBitwiseXor %uint %5147 %uint_4294967295
       %5155 = OpShiftRightLogical %uint %5153 %uint_1
       %5156 = OpBitwiseAnd %uint %5153 %uint_1
       %5157 = OpIAdd %uint %5155 %5156
       %5158 = OpShiftRightLogical %uint %5157 %uint_31
       %5159 = OpISub %uint %uint_0 %5152
       %5160 = OpIAdd %uint %5158 %5154
       %5161 = OpCompositeConstruct %v2uint %5159 %5160
       %5162 = OpBitwiseXor %uint %4910 %uint_2147483648
               OpBranch %5164
       %5164 = OpLabel
       %5165 = OpPhi %uint %5162 %5151 %4910 %5145
       %5166 = OpPhi %v2uint %5161 %5151 %5146 %5145
       %5167 = OpCompositeExtract %uint %5166 1
       %5168 = OpExtInst %uint %184 FindUMsb %5167
       %5169 = OpISub %uint %uint_31 %5168
       %5170 = OpIEqual %bool %5167 %uint_0
       %5171 = OpCompositeExtract %uint %5166 0
       %5172 = OpExtInst %uint %184 FindUMsb %5171
       %5173 = OpISub %uint %uint_31 %5172
       %5174 = OpIAdd %uint %5173 %uint_32
       %5175 = OpSelect %uint %5170 %5174 %5169
       %5176 = OpISub %uint %uint_3 %5175
       %5177 = OpIAdd %uint %5176 %5076
       %5178 = OpUGreaterThan %bool %5175 %uint_3
               OpSelectionMerge %5209 None
               OpBranchConditional %5178 %5181 %5209
       %5181 = OpLabel
       %5182 = OpIAdd %uint %5175 %uint_4294967293
       %5183 = OpUGreaterThanEqual %bool %5182 %uint_32
               OpSelectionMerge %5191 None
               OpBranchConditional %5183 %5186 %5191
       %5186 = OpLabel
       %5187 = OpBitwiseAnd %uint %5182 %uint_31
       %5188 = OpShiftLeftLogical %uint %5171 %5187
       %5189 = OpCompositeInsert %v2uint %5188 %352 1
               OpBranch %5191
       %5191 = OpLabel
       %5192 = OpPhi %uint %uint_0 %5186 %351 %5181
       %5193 = OpPhi %v2uint %5189 %5186 %525 %5181
       %5194 = OpPhi %bool %false %5186 %true %5181
               OpSelectionMerge %5205 None
               OpBranchConditional %5194 %5197 %5205
       %5197 = OpLabel
       %5198 = OpShiftLeftLogical %uint %5167 %5182
       %5199 = OpBitwiseAnd %uint %5176 %uint_31
       %5200 = OpShiftRightLogical %uint %5171 %5199
       %5201 = OpBitwiseOr %uint %5200 %5198
       %5202 = OpShiftLeftLogical %uint %5171 %5182
       %5203 = OpCompositeConstruct %v2uint %5202 %5201
               OpBranch %5205
       %5205 = OpLabel
       %5206 = OpPhi %uint %uint_0 %5197 %5192 %5191
       %5207 = OpPhi %v2uint %5203 %5197 %5193 %5191
               OpBranch %5209
       %5209 = OpLabel
       %5210 = OpPhi %v2uint %5166 %5164 %5207 %5205
       %5211 = OpPhi %uint %5176 %5164 %5206 %5205
       %5212 = OpIAdd %uint %5211 %uint_5
       %5213 = OpBitwiseAnd %uint %5212 %uint_31
       %5214 = OpShiftLeftLogical %uint %uint_1 %5213
       %5215 = OpCompositeInsert %v2uint %5214 %352 1
       %5216 = OpIAdd %uint %5214 %uint_4294967295
       %5217 = OpCompositeInsert %v2uint %5216 %647 1
       %5218 = OpBitwiseAnd %v2uint %5217 %5210
       %5219 = OpCompositeExtract %uint %5218 1
       %5220 = OpBitwiseAnd %v2uint %5215 %5210
       %5221 = OpIAdd %uint %5211 %uint_2
       %5222 = OpBitwiseAnd %uint %5221 %uint_31
       %5223 = OpShiftLeftLogical %uint %uint_4 %5222
       %5224 = OpUGreaterThan %bool %5219 %5223
       %5225 = OpLogicalNot %bool %5224
               OpSelectionMerge %5256 None
               OpBranchConditional %5225 %5228 %5256
       %5228 = OpLabel
       %5229 = OpCompositeExtract %uint %5218 0
       %5230 = OpVectorShuffle %v2uint %5074 %525 1 4294967295
       %5231 = OpBitwiseOr %v2uint %5230 %5074
       %5232 = OpCompositeExtract %uint %5231 0
       %5233 = OpINotEqual %bool %5232 %uint_0
       %5234 = OpSelect %uint %5233 %uint_1 %uint_0
       %5235 = OpBitwiseOr %uint %5229 %5234
       %5236 = OpIEqual %bool %5219 %5223
       %5237 = OpINotEqual %bool %5235 %uint_0
       %5238 = OpSelect %bool %5236 %5237 %false
       %5239 = OpLogicalNot %bool %5238
               OpSelectionMerge %5252 None
               OpBranchConditional %5239 %5242 %5252
       %5242 = OpLabel
       %5243 = OpINotEqual %bool %5219 %5223
       %5244 = OpLogicalOr %bool %5243 %5237
       %5245 = OpVectorShuffle %v2uint %5220 %525 1 4294967295
       %5246 = OpBitwiseOr %v2uint %5245 %5220
       %5247 = OpCompositeExtract %uint %5246 0
       %5248 = OpIEqual %bool %5247 %uint_0
       %5249 = OpSelect %bool %5244 %true %5248
       %5250 = OpLogicalNot %bool %5249
               OpBranch %5252
       %5252 = OpLabel
       %5253 = OpPhi %v2uint %5210 %5242 %525 %5228
       %5254 = OpPhi %bool %5250 %5242 %5238 %5228
               OpBranch %5256
       %5256 = OpLabel
       %5257 = OpPhi %v2uint %5253 %5252 %525 %5209
       %5258 = OpPhi %bool %5254 %5252 %5224 %5209
               OpSelectionMerge %5266 None
               OpBranchConditional %5258 %5261 %5266
       %5261 = OpLabel
       %5262 = OpCompositeExtract %uint %5210 1
       %5263 = OpIAdd %uint %5214 %5262
       %5264 = OpCompositeInsert %v2uint %5263 %5210 1
               OpBranch %5266
       %5266 = OpLabel
       %5267 = OpPhi %v2uint %5264 %5261 %5257 %5256
       %5268 = OpCompositeExtract %uint %5267 1
       %5269 = OpShiftRightLogical %uint %5268 %5213
       %5270 = OpUGreaterThan %bool %5269 %uint_16777215
       %5271 = OpSelect %uint %5270 %uint_1 %uint_0
       %5272 = OpShiftRightLogical %uint %5269 %5271
       %5273 = OpIAdd %uint %5177 %5271
       %5274 = OpINotEqual %bool %5272 %uint_0
               OpSelectionMerge %5316 None
               OpBranchConditional %5274 %5277 %5316
       %5277 = OpLabel
       %5278 = OpSLessThanEqual %bool %5273 %uint_127
               OpSelectionMerge %5304 None
               OpBranchConditional %5278 %5281 %5304
       %5281 = OpLabel
       %5282 = OpSGreaterThanEqual %bool %5273 %uint_4294967170
               OpSelectionMerge %5293 None
               OpBranchConditional %5282 %5285 %5293
       %5285 = OpLabel
       %5286 = OpShiftLeftLogical %uint %5273 %uint_23
       %5287 = OpIAdd %uint %5286 %uint_1065353216
       %5288 = OpBitwiseAnd %uint %5272 %uint_8388607
       %5289 = OpBitwiseOr %uint %5287 %5288
       %5290 = OpBitwiseOr %uint %5289 %5165
       %5291 = OpBitcast %float %5290
               OpBranch %5293
       %5293 = OpLabel
       %5294 = OpPhi %float %5291 %5285 %261 %5281
       %5295 = OpPhi %bool %false %5285 %true %5281
               OpSelectionMerge %5301 None
               OpBranchConditional %5295 %5298 %5301
       %5298 = OpLabel
       %5299 = OpBitcast %float %5165
               OpBranch %5301
       %5301 = OpLabel
       %5302 = OpPhi %float %5299 %5298 %5294 %5293
               OpBranch %5304
       %5304 = OpLabel
       %5305 = OpPhi %float %5302 %5301 %261 %5277
       %5306 = OpPhi %bool %false %5301 %true %5277
               OpSelectionMerge %5313 None
               OpBranchConditional %5306 %5309 %5313
       %5309 = OpLabel
       %5310 = OpBitwiseOr %uint %5165 %uint_2139095040
       %5311 = OpBitcast %float %5310
               OpBranch %5313
       %5313 = OpLabel
       %5314 = OpPhi %float %5311 %5309 %5305 %5304
               OpBranch %5316
       %5316 = OpLabel
       %5317 = OpPhi %float %5314 %5313 %float_0 %5266
               OpBranch %5319
       %5319 = OpLabel
       %5320 = OpPhi %float %5317 %5316 %4882 %4894
               OpBranch %5322
       %5322 = OpLabel
       %5323 = OpPhi %float %5320 %5319 %261 %4890
       %5324 = OpPhi %bool %false %5319 %true %4890
               OpSelectionMerge %5332 None
               OpBranchConditional %5324 %5327 %5332
       %5327 = OpLabel
       %5328 = OpVectorShuffle %v2float %4873 %765 1 4294967295
       %5329 = OpFMul %v2float %4873 %5328
       %5330 = OpCompositeExtract %float %5329 0
               OpBranch %5332
       %5332 = OpLabel
       %5333 = OpPhi %float %5330 %5327 %5323 %5322
               OpBranch %5335
       %5335 = OpLabel
       %5336 = OpPhi %float %5333 %5332 %4882 %4863
               OpBranch %5338
       %5338 = OpLabel
       %5339 = OpPhi %float %5336 %5335 %4833 %4858
               OpBranch %5341
       %5341 = OpLabel
       %5342 = OpPhi %float %5339 %5338 %261 %4853
       %5343 = OpPhi %bool %false %5338 %true %4853
               OpBranch %5345
       %5345 = OpLabel
       %5346 = OpPhi %float %5342 %5341 %261 %4848
       %5347 = OpPhi %bool %5343 %5341 %4849 %4848
               OpBranch %5349
       %5349 = OpLabel
       %5350 = OpPhi %float %5346 %5345 %261 %4843
       %5351 = OpPhi %bool %5347 %5345 %4844 %4843
               OpBranch %5353
       %5353 = OpLabel
       %5354 = OpPhi %float %5350 %5349 %261 %4838
       %5355 = OpPhi %bool %5351 %5349 %4839 %4838
               OpBranch %5357
       %5357 = OpLabel
       %5358 = OpPhi %float %5354 %5353 %261 %4832
       %5359 = OpPhi %bool %5355 %5353 %4834 %4832
               OpSelectionMerge %5366 None
               OpBranchConditional %5359 %5362 %5366
       %5362 = OpLabel
       %5363 = OpFMul %float %3759 %float_1_57079625
       %5364 = OpFAdd %float %5363 %4833
               OpBranch %5366
       %5366 = OpLabel
       %5367 = OpPhi %float %5364 %5362 %5358 %5357
       %5368 = OpFAdd %float %3760 %5367
       %5369 = OpFSub %float %5368 %3760
       %5370 = OpFSub %float %5367 %5369
       %5371 = OpShiftRightLogical %uint %3703 %uint_30
       %5372 = OpIAdd %uint %3716 %5371
               OpBranch %5374
       %5374 = OpLabel
       %5375 = OpPhi %uint %5372 %5366 %351 %3524
       %5376 = OpPhi %float %5368 %5366 %261 %3524
       %5377 = OpPhi %float %5370 %5366 %261 %3524
       %5378 = OpPhi %bool %false %5366 %true %3524
               OpSelectionMerge %7003 None
               OpBranchConditional %5378 %5381 %7003
       %5381 = OpLabel
       %5382 = OpFMul %float %42 %float_0_636619747
       %5383 = OpFAdd %float %5382 %float_0_5
       %5384 = OpExtInst %float %184 Trunc %5383
       %5385 = OpFMul %float %5384 %float_1_57079625
       %5386 = OpFNegate %float %5385
       %5387 = OpIsNan %bool %5384
       %5388 = OpLogicalNot %bool %5387
               OpSelectionMerge %5910 None
               OpBranchConditional %5388 %5391 %5910
       %5391 = OpLabel
       %5392 = OpIsNan %bool %float_1_57079625
       %5393 = OpLogicalNot %bool %5392
               OpSelectionMerge %5906 None
               OpBranchConditional %5393 %5396 %5906
       %5396 = OpLabel
       %5397 = OpIsNan %bool %5386
       %5398 = OpLogicalNot %bool %5397
               OpSelectionMerge %5902 None
               OpBranchConditional %5398 %5401 %5902
       %5401 = OpLabel
       %5402 = OpIsInf %bool %5384
       %5403 = OpLogicalNot %bool %5402
               OpSelectionMerge %5898 None
               OpBranchConditional %5403 %5406 %5898
       %5406 = OpLabel
       %5407 = OpIsInf %bool %float_1_57079625
       %5408 = OpLogicalNot %bool %5407
               OpSelectionMerge %5894 None
               OpBranchConditional %5408 %5411 %5894
       %5411 = OpLabel
       %5412 = OpIsInf %bool %5386
       %5413 = OpLogicalNot %bool %5412
               OpSelectionMerge %5891 None
               OpBranchConditional %5413 %5416 %5891
       %5416 = OpLabel
       %5417 = OpCompositeInsert %v2float %5384 %262 1
       %5418 = OpBitcast %v2uint %5417
       %5419 = OpBitwiseAnd %v2uint %5418 %267
       %5420 = OpINotEqual %v2bool %5419 %270
       %5421 = OpBitwiseAnd %v2uint %5418 %272
       %5422 = OpIEqual %v2bool %5421 %270
       %5423 = OpLogicalOr %v2bool %5422 %5420
       %5424 = OpBitwiseAnd %v2uint %5418 %277
       %5425 = OpBitcast %v2float %5424
       %5426 = OpSelect %v2float %5423 %5417 %5425
       %5427 = OpBitcast %uint %5386
       %5428 = OpBitwiseAnd %uint %5427 %uint_2139095040
       %5429 = OpINotEqual %bool %5428 %uint_0
       %5430 = OpBitwiseAnd %uint %5427 %uint_8388607
       %5431 = OpIEqual %bool %5430 %uint_0
       %5432 = OpLogicalOr %bool %5431 %5429
       %5433 = OpBitwiseAnd %uint %5427 %uint_2147483648
       %5434 = OpBitcast %float %5433
       %5435 = OpSelect %float %5432 %5386 %5434
       %5436 = OpFOrdEqual %v2bool %5426 %290
       %5437 = OpVectorShuffle %v2bool %5436 %292 1 4294967295
       %5438 = OpLogicalOr %v2bool %5437 %5436
       %5439 = OpCompositeExtract %bool %5438 0
       %5440 = OpLogicalNot %bool %5439
               OpSelectionMerge %5888 None
               OpBranchConditional %5440 %5443 %5888
       %5443 = OpLabel
       %5444 = OpFUnordNotEqual %bool %5435 %float_0
               OpSelectionMerge %5875 None
               OpBranchConditional %5444 %5447 %5875
       %5447 = OpLabel
       %5448 = OpBitcast %v2uint %5426
       %5449 = OpCompositeExtract %uint %5448 1
       %5450 = OpShiftRightLogical %uint %5449 %uint_23
       %5451 = OpBitwiseAnd %uint %5450 %uint_255
       %5452 = OpCompositeExtract %uint %5448 0
       %5453 = OpShiftRightLogical %uint %5452 %uint_23
       %5454 = OpBitwiseAnd %uint %5453 %uint_255
       %5455 = OpBitcast %uint %5435
       %5456 = OpShiftRightLogical %uint %5455 %uint_23
       %5457 = OpBitwiseAnd %uint %5456 %uint_255
       %5458 = OpIAdd %uint %5457 %uint_4294967169
       %5459 = OpBitwiseAnd %v2uint %5448 %272
       %5460 = OpBitwiseOr %v2uint %5459 %319
       %5461 = OpBitwiseAnd %uint %5455 %uint_2147483648
       %5462 = OpBitwiseXor %uint %5452 %5449
       %5463 = OpBitwiseAnd %uint %5462 %uint_2147483648
       %5464 = OpCompositeExtract %uint %5460 0
       %5465 = OpCompositeExtract %uint %5460 1
       %5466 = OpUMulExtended %_struct_58 %5465 %5464
       %5467 = OpCompositeExtract %uint %5466 1
       %5468 = OpIMul %uint %5464 %5465
       %5469 = OpShiftLeftLogical %uint %5467 %uint_14
       %5470 = OpShiftRightLogical %uint %5468 %uint_18
       %5471 = OpBitwiseOr %uint %5470 %5469
       %5472 = OpShiftLeftLogical %uint %5468 %uint_14
       %5473 = OpCompositeConstruct %v2uint %5472 %5471
       %5474 = OpBitwiseOr %uint %5471 %5472
       %5475 = OpINotEqual %bool %5474 %uint_0
       %5476 = OpIAdd %uint %5451 %uint_4294967042
       %5477 = OpIAdd %uint %5476 %5454
               OpSelectionMerge %5872 None
               OpBranchConditional %5475 %5480 %5872
       %5480 = OpLabel
       %5481 = OpISub %uint %5477 %5458
       %5482 = OpShiftLeftLogical %uint %5455 %uint_5
       %5483 = OpBitwiseAnd %uint %5482 %uint_268435424
       %5484 = OpBitwiseOr %uint %5483 %uint_268435456
       %5485 = OpCompositeInsert %v2uint %5484 %352 1
       %5486 = OpExtInst %uint %184 SAbs %5481
       %5487 = OpINotEqual %bool %5486 %uint_0
               OpSelectionMerge %5514 None
               OpBranchConditional %5487 %5490 %5514
       %5490 = OpLabel
       %5491 = OpUGreaterThanEqual %bool %5486 %uint_32
               OpSelectionMerge %5499 None
               OpBranchConditional %5491 %5494 %5499
       %5494 = OpLabel
       %5495 = OpBitwiseAnd %uint %5486 %uint_31
       %5496 = OpShiftLeftLogical %uint %uint_1 %5495
       %5497 = OpCompositeInsert %v2uint %5496 %352 1
               OpBranch %5499
       %5499 = OpLabel
       %5500 = OpPhi %v2uint %5497 %5494 %525 %5490
       %5501 = OpPhi %bool %false %5494 %true %5490
               OpSelectionMerge %5511 None
               OpBranchConditional %5501 %5504 %5511
       %5504 = OpLabel
       %5505 = OpISub %uint %uint_0 %5486
       %5506 = OpBitwiseAnd %uint %5505 %uint_31
       %5507 = OpShiftRightLogical %uint %uint_1 %5506
       %5508 = OpShiftLeftLogical %uint %uint_1 %5486
       %5509 = OpCompositeConstruct %v2uint %5508 %5507
               OpBranch %5511
       %5511 = OpLabel
       %5512 = OpPhi %v2uint %5509 %5504 %5500 %5499
               OpBranch %5514
       %5514 = OpLabel
       %5515 = OpPhi %v2uint %7071 %5480 %5512 %5511
       %5516 = OpCompositeExtract %uint %5515 0
       %5517 = OpShiftRightLogical %uint %5516 %uint_1
       %5518 = OpIAdd %uint %5517 %uint_2147483647
       %5519 = OpBitwiseAnd %uint %5516 %uint_1
       %5520 = OpIAdd %uint %5518 %5519
       %5521 = OpShiftRightLogical %uint %5520 %uint_31
       %5522 = OpIAdd %uint %5516 %uint_4294967295
       %5523 = OpCompositeExtract %uint %5515 1
       %5524 = OpIAdd %uint %5523 %uint_4294967295
       %5525 = OpIAdd %uint %5524 %5521
       %5526 = OpCompositeConstruct %v2uint %5522 %5525
       %5527 = OpSLessThanEqual %bool %5481 %uint_0
               OpSelectionMerge %5579 None
               OpBranchConditional %5527 %5530 %5579
       %5530 = OpLabel
       %5531 = OpSGreaterThanEqual %bool %5481 %uint_4294967233
               OpSelectionMerge %5574 None
               OpBranchConditional %5531 %5534 %5574
       %5534 = OpLabel
       %5535 = OpISub %uint %uint_0 %5481
       %5536 = OpBitwiseAnd %v2uint %5526 %5473
       %5537 = OpINotEqual %bool %5477 %5458
               OpSelectionMerge %5569 None
               OpBranchConditional %5537 %5540 %5569
       %5540 = OpLabel
       %5541 = OpUGreaterThanEqual %bool %5535 %uint_32
               OpSelectionMerge %5549 None
               OpBranchConditional %5541 %5544 %5549
       %5544 = OpLabel
       %5545 = OpBitwiseAnd %uint %5535 %uint_31
       %5546 = OpShiftRightLogical %uint %5471 %5545
       %5547 = OpCompositeInsert %v2uint %5546 %417 0
               OpBranch %5549
       %5549 = OpLabel
       %5550 = OpPhi %v2uint %5485 %5544 %525 %5540
       %5551 = OpPhi %v2uint %5536 %5544 %525 %5540
       %5552 = OpPhi %v2uint %5547 %5544 %525 %5540
       %5553 = OpPhi %bool %false %5544 %true %5540
               OpSelectionMerge %5564 None
               OpBranchConditional %5553 %5556 %5564
       %5556 = OpLabel
       %5557 = OpShiftRightLogical %uint %5472 %5535
       %5558 = OpBitwiseAnd %uint %5481 %uint_31
       %5559 = OpShiftLeftLogical %uint %5471 %5558
       %5560 = OpBitwiseOr %uint %5559 %5557
       %5561 = OpShiftRightLogical %uint %5471 %5535
       %5562 = OpCompositeConstruct %v2uint %5560 %5561
               OpBranch %5564
       %5564 = OpLabel
       %5565 = OpPhi %v2uint %5485 %5556 %5550 %5549
       %5566 = OpPhi %v2uint %5536 %5556 %5551 %5549
       %5567 = OpPhi %v2uint %5562 %5556 %5552 %5549
               OpBranch %5569
       %5569 = OpLabel
       %5570 = OpPhi %v2uint %5565 %5564 %5485 %5534
       %5571 = OpPhi %v2uint %5566 %5564 %5536 %5534
       %5572 = OpPhi %v2uint %5567 %5564 %5473 %5534
               OpBranch %5574
       %5574 = OpLabel
       %5575 = OpPhi %v2uint %5570 %5569 %5485 %5530
       %5576 = OpPhi %v2uint %5571 %5569 %5473 %5530
       %5577 = OpPhi %v2uint %5572 %5569 %270 %5530
               OpBranch %5579
       %5579 = OpLabel
       %5580 = OpPhi %v2uint %5575 %5574 %525 %5514
       %5581 = OpPhi %v2uint %5576 %5574 %525 %5514
       %5582 = OpPhi %v2uint %5577 %5574 %525 %5514
       %5583 = OpPhi %bool %false %5574 %true %5514
               OpSelectionMerge %5625 None
               OpBranchConditional %5583 %5586 %5625
       %5586 = OpLabel
       %5587 = OpULessThanEqual %bool %5481 %uint_63
               OpSelectionMerge %5620 None
               OpBranchConditional %5587 %5590 %5620
       %5590 = OpLabel
       %5591 = OpBitwiseAnd %uint %5525 %5484
       %5592 = OpCompositeInsert %v2uint %5591 %352 1
       %5593 = OpUGreaterThanEqual %bool %5481 %uint_32
               OpSelectionMerge %5601 None
               OpBranchConditional %5593 %5596 %5601
       %5596 = OpLabel
       %5597 = OpBitwiseAnd %uint %5481 %uint_31
       %5598 = OpShiftRightLogical %uint %5484 %5597
       %5599 = OpCompositeInsert %v2uint %5598 %417 0
               OpBranch %5601
       %5601 = OpLabel
       %5602 = OpPhi %v2uint %5599 %5596 %525 %5590
       %5603 = OpPhi %v2uint %5592 %5596 %525 %5590
       %5604 = OpPhi %v2uint %5473 %5596 %525 %5590
       %5605 = OpPhi %bool %false %5596 %true %5590
               OpSelectionMerge %5615 None
               OpBranchConditional %5605 %5608 %5615
       %5608 = OpLabel
       %5609 = OpISub %uint %uint_0 %5481
       %5610 = OpBitwiseAnd %uint %5609 %uint_31
       %5611 = OpShiftLeftLogical %uint %5484 %5610
       %5612 = OpShiftRightLogical %uint %5484 %5481
       %5613 = OpCompositeConstruct %v2uint %5611 %5612
               OpBranch %5615
       %5615 = OpLabel
       %5616 = OpPhi %v2uint %5613 %5608 %5602 %5601
       %5617 = OpPhi %v2uint %5592 %5608 %5603 %5601
       %5618 = OpPhi %v2uint %5473 %5608 %5604 %5601
               OpBranch %5620
       %5620 = OpLabel
       %5621 = OpPhi %v2uint %5616 %5615 %270 %5586
       %5622 = OpPhi %v2uint %5617 %5615 %5485 %5586
       %5623 = OpPhi %v2uint %5618 %5615 %5473 %5586
               OpBranch %5625
       %5625 = OpLabel
       %5626 = OpPhi %v2uint %5582 %5579 %5623 %5620
       %5627 = OpPhi %v2uint %5581 %5579 %5622 %5620
       %5628 = OpPhi %v2uint %5580 %5579 %5621 %5620
       %5629 = OpExtInst %uint %184 SMax %5477 %5458
       %5630 = OpINotEqual %bool %5461 %5463
               OpSelectionMerge %5677 None
               OpBranchConditional %5630 %5633 %5677
       %5633 = OpLabel
       %5634 = OpCompositeExtract %uint %5628 0
       %5635 = OpBitwiseXor %uint %5634 %uint_4294967295
       %5636 = OpCompositeExtract %uint %5628 1
       %5637 = OpBitwiseXor %uint %5636 %uint_4294967295
       %5638 = OpShiftRightLogical %uint %5635 %uint_1
       %5639 = OpBitwiseAnd %uint %5635 %uint_1
       %5640 = OpIAdd %uint %5638 %5639
       %5641 = OpShiftRightLogical %uint %5640 %uint_31
       %5642 = OpISub %uint %uint_0 %5634
       %5643 = OpCompositeExtract %uint %5626 0
       %5644 = OpShiftRightLogical %uint %5643 %uint_1
       %5645 = OpShiftRightLogical %uint %5642 %uint_1
       %5646 = OpIAdd %uint %5645 %5644
       %5647 = OpBitwiseAnd %uint %5643 %uint_1
       %5648 = OpBitwiseAnd %uint %5647 %5642
       %5649 = OpIAdd %uint %5646 %5648
       %5650 = OpShiftRightLogical %uint %5649 %uint_31
       %5651 = OpISub %uint %5643 %5634
       %5652 = OpCompositeExtract %uint %5626 1
       %5653 = OpVectorShuffle %v2uint %5627 %525 1 4294967295
       %5654 = OpBitwiseOr %v2uint %5653 %5627
       %5655 = OpCompositeExtract %uint %5654 0
       %5656 = OpINotEqual %bool %5655 %uint_0
       %5657 = OpSGreaterThan %bool %5477 %5458
       %5658 = OpSelect %bool %5656 %5657 %false
       %5659 = OpSelect %v2uint %5658 %533 %270
       %5660 = OpCompositeExtract %uint %5659 0
       %5661 = OpShiftRightLogical %uint %5651 %uint_1
       %5662 = OpShiftRightLogical %uint %5660 %uint_1
       %5663 = OpIAdd %uint %5662 %5661
       %5664 = OpBitwiseAnd %uint %5651 %uint_1
       %5665 = OpBitwiseAnd %uint %5664 %5660
       %5666 = OpIAdd %uint %5663 %5665
       %5667 = OpShiftRightLogical %uint %5666 %uint_31
       %5668 = OpIAdd %uint %5660 %5651
       %5669 = OpCompositeExtract %uint %5659 1
       %5670 = OpIAdd %uint %5652 %5637
       %5671 = OpIAdd %uint %5670 %5641
       %5672 = OpIAdd %uint %5671 %5650
       %5673 = OpIAdd %uint %5672 %5669
       %5674 = OpIAdd %uint %5673 %5667
       %5675 = OpCompositeConstruct %v2uint %5668 %5674
               OpBranch %5677
       %5677 = OpLabel
       %5678 = OpPhi %v2uint %5675 %5633 %525 %5625
       %5679 = OpPhi %bool %false %5633 %true %5625
               OpSelectionMerge %5698 None
               OpBranchConditional %5679 %5682 %5698
       %5682 = OpLabel
       %5683 = OpCompositeExtract %uint %5626 0
       %5684 = OpCompositeExtract %uint %5628 0
       %5685 = OpShiftRightLogical %uint %5683 %uint_1
       %5686 = OpShiftRightLogical %uint %5684 %uint_1
       %5687 = OpIAdd %uint %5686 %5685
       %5688 = OpBitwiseAnd %uint %5683 %uint_1
       %5689 = OpBitwiseAnd %uint %5688 %5684
       %5690 = OpIAdd %uint %5687 %5689
       %5691 = OpShiftRightLogical %uint %5690 %uint_31
       %5692 = OpIAdd %uint %5684 %5683
       %5693 = OpIAdd %v2uint %5628 %5626
       %5694 = OpCompositeExtract %uint %5693 1
       %5695 = OpIAdd %uint %5691 %5694
       %5696 = OpCompositeConstruct %v2uint %5692 %5695
               OpBranch %5698
       %5698 = OpLabel
       %5699 = OpPhi %v2uint %5696 %5682 %5678 %5677
       %5700 = OpCompositeExtract %uint %5699 1
       %5701 = OpSLessThan %bool %5700 %uint_0
               OpSelectionMerge %5717 None
               OpBranchConditional %5701 %5704 %5717
       %5704 = OpLabel
       %5705 = OpCompositeExtract %uint %5699 0
       %5706 = OpBitwiseXor %uint %5705 %uint_4294967295
       %5707 = OpBitwiseXor %uint %5700 %uint_4294967295
       %5708 = OpShiftRightLogical %uint %5706 %uint_1
       %5709 = OpBitwiseAnd %uint %5706 %uint_1
       %5710 = OpIAdd %uint %5708 %5709
       %5711 = OpShiftRightLogical %uint %5710 %uint_31
       %5712 = OpISub %uint %uint_0 %5705
       %5713 = OpIAdd %uint %5711 %5707
       %5714 = OpCompositeConstruct %v2uint %5712 %5713
       %5715 = OpBitwiseXor %uint %5463 %uint_2147483648
               OpBranch %5717
       %5717 = OpLabel
       %5718 = OpPhi %uint %5715 %5704 %5463 %5698
       %5719 = OpPhi %v2uint %5714 %5704 %5699 %5698
       %5720 = OpCompositeExtract %uint %5719 1
       %5721 = OpExtInst %uint %184 FindUMsb %5720
       %5722 = OpISub %uint %uint_31 %5721
       %5723 = OpIEqual %bool %5720 %uint_0
       %5724 = OpCompositeExtract %uint %5719 0
       %5725 = OpExtInst %uint %184 FindUMsb %5724
       %5726 = OpISub %uint %uint_31 %5725
       %5727 = OpIAdd %uint %5726 %uint_32
       %5728 = OpSelect %uint %5723 %5727 %5722
       %5729 = OpISub %uint %uint_3 %5728
       %5730 = OpIAdd %uint %5729 %5629
       %5731 = OpUGreaterThan %bool %5728 %uint_3
               OpSelectionMerge %5762 None
               OpBranchConditional %5731 %5734 %5762
       %5734 = OpLabel
       %5735 = OpIAdd %uint %5728 %uint_4294967293
       %5736 = OpUGreaterThanEqual %bool %5735 %uint_32
               OpSelectionMerge %5744 None
               OpBranchConditional %5736 %5739 %5744
       %5739 = OpLabel
       %5740 = OpBitwiseAnd %uint %5735 %uint_31
       %5741 = OpShiftLeftLogical %uint %5724 %5740
       %5742 = OpCompositeInsert %v2uint %5741 %352 1
               OpBranch %5744
       %5744 = OpLabel
       %5745 = OpPhi %uint %uint_0 %5739 %351 %5734
       %5746 = OpPhi %v2uint %5742 %5739 %525 %5734
       %5747 = OpPhi %bool %false %5739 %true %5734
               OpSelectionMerge %5758 None
               OpBranchConditional %5747 %5750 %5758
       %5750 = OpLabel
       %5751 = OpShiftLeftLogical %uint %5720 %5735
       %5752 = OpBitwiseAnd %uint %5729 %uint_31
       %5753 = OpShiftRightLogical %uint %5724 %5752
       %5754 = OpBitwiseOr %uint %5753 %5751
       %5755 = OpShiftLeftLogical %uint %5724 %5735
       %5756 = OpCompositeConstruct %v2uint %5755 %5754
               OpBranch %5758
       %5758 = OpLabel
       %5759 = OpPhi %uint %uint_0 %5750 %5745 %5744
       %5760 = OpPhi %v2uint %5756 %5750 %5746 %5744
               OpBranch %5762
       %5762 = OpLabel
       %5763 = OpPhi %v2uint %5719 %5717 %5760 %5758
       %5764 = OpPhi %uint %5729 %5717 %5759 %5758
       %5765 = OpIAdd %uint %5764 %uint_5
       %5766 = OpBitwiseAnd %uint %5765 %uint_31
       %5767 = OpShiftLeftLogical %uint %uint_1 %5766
       %5768 = OpCompositeInsert %v2uint %5767 %352 1
       %5769 = OpIAdd %uint %5767 %uint_4294967295
       %5770 = OpCompositeInsert %v2uint %5769 %647 1
       %5771 = OpBitwiseAnd %v2uint %5770 %5763
       %5772 = OpCompositeExtract %uint %5771 1
       %5773 = OpBitwiseAnd %v2uint %5768 %5763
       %5774 = OpIAdd %uint %5764 %uint_2
       %5775 = OpBitwiseAnd %uint %5774 %uint_31
       %5776 = OpShiftLeftLogical %uint %uint_4 %5775
       %5777 = OpUGreaterThan %bool %5772 %5776
       %5778 = OpLogicalNot %bool %5777
               OpSelectionMerge %5809 None
               OpBranchConditional %5778 %5781 %5809
       %5781 = OpLabel
       %5782 = OpCompositeExtract %uint %5771 0
       %5783 = OpVectorShuffle %v2uint %5627 %525 1 4294967295
       %5784 = OpBitwiseOr %v2uint %5783 %5627
       %5785 = OpCompositeExtract %uint %5784 0
       %5786 = OpINotEqual %bool %5785 %uint_0
       %5787 = OpSelect %uint %5786 %uint_1 %uint_0
       %5788 = OpBitwiseOr %uint %5782 %5787
       %5789 = OpIEqual %bool %5772 %5776
       %5790 = OpINotEqual %bool %5788 %uint_0
       %5791 = OpSelect %bool %5789 %5790 %false
       %5792 = OpLogicalNot %bool %5791
               OpSelectionMerge %5805 None
               OpBranchConditional %5792 %5795 %5805
       %5795 = OpLabel
       %5796 = OpINotEqual %bool %5772 %5776
       %5797 = OpLogicalOr %bool %5796 %5790
       %5798 = OpVectorShuffle %v2uint %5773 %525 1 4294967295
       %5799 = OpBitwiseOr %v2uint %5798 %5773
       %5800 = OpCompositeExtract %uint %5799 0
       %5801 = OpIEqual %bool %5800 %uint_0
       %5802 = OpSelect %bool %5797 %true %5801
       %5803 = OpLogicalNot %bool %5802
               OpBranch %5805
       %5805 = OpLabel
       %5806 = OpPhi %v2uint %5763 %5795 %525 %5781
       %5807 = OpPhi %bool %5803 %5795 %5791 %5781
               OpBranch %5809
       %5809 = OpLabel
       %5810 = OpPhi %v2uint %5806 %5805 %525 %5762
       %5811 = OpPhi %bool %5807 %5805 %5777 %5762
               OpSelectionMerge %5819 None
               OpBranchConditional %5811 %5814 %5819
       %5814 = OpLabel
       %5815 = OpCompositeExtract %uint %5763 1
       %5816 = OpIAdd %uint %5767 %5815
       %5817 = OpCompositeInsert %v2uint %5816 %5763 1
               OpBranch %5819
       %5819 = OpLabel
       %5820 = OpPhi %v2uint %5817 %5814 %5810 %5809
       %5821 = OpCompositeExtract %uint %5820 1
       %5822 = OpShiftRightLogical %uint %5821 %5766
       %5823 = OpUGreaterThan %bool %5822 %uint_16777215
       %5824 = OpSelect %uint %5823 %uint_1 %uint_0
       %5825 = OpShiftRightLogical %uint %5822 %5824
       %5826 = OpIAdd %uint %5730 %5824
       %5827 = OpINotEqual %bool %5825 %uint_0
               OpSelectionMerge %5869 None
               OpBranchConditional %5827 %5830 %5869
       %5830 = OpLabel
       %5831 = OpSLessThanEqual %bool %5826 %uint_127
               OpSelectionMerge %5857 None
               OpBranchConditional %5831 %5834 %5857
       %5834 = OpLabel
       %5835 = OpSGreaterThanEqual %bool %5826 %uint_4294967170
               OpSelectionMerge %5846 None
               OpBranchConditional %5835 %5838 %5846
       %5838 = OpLabel
       %5839 = OpShiftLeftLogical %uint %5826 %uint_23
       %5840 = OpIAdd %uint %5839 %uint_1065353216
       %5841 = OpBitwiseAnd %uint %5825 %uint_8388607
       %5842 = OpBitwiseOr %uint %5840 %5841
       %5843 = OpBitwiseOr %uint %5842 %5718
       %5844 = OpBitcast %float %5843
               OpBranch %5846
       %5846 = OpLabel
       %5847 = OpPhi %float %5844 %5838 %261 %5834
       %5848 = OpPhi %bool %false %5838 %true %5834
               OpSelectionMerge %5854 None
               OpBranchConditional %5848 %5851 %5854
       %5851 = OpLabel
       %5852 = OpBitcast %float %5718
               OpBranch %5854
       %5854 = OpLabel
       %5855 = OpPhi %float %5852 %5851 %5847 %5846
               OpBranch %5857
       %5857 = OpLabel
       %5858 = OpPhi %float %5855 %5854 %261 %5830
       %5859 = OpPhi %bool %false %5854 %true %5830
               OpSelectionMerge %5866 None
               OpBranchConditional %5859 %5862 %5866
       %5862 = OpLabel
       %5863 = OpBitwiseOr %uint %5718 %uint_2139095040
       %5864 = OpBitcast %float %5863
               OpBranch %5866
       %5866 = OpLabel
       %5867 = OpPhi %float %5864 %5862 %5858 %5857
               OpBranch %5869
       %5869 = OpLabel
       %5870 = OpPhi %float %5867 %5866 %float_0 %5819
               OpBranch %5872
       %5872 = OpLabel
       %5873 = OpPhi %float %5870 %5869 %5435 %5447
               OpBranch %5875
       %5875 = OpLabel
       %5876 = OpPhi %float %5873 %5872 %261 %5443
       %5877 = OpPhi %bool %false %5872 %true %5443
               OpSelectionMerge %5885 None
               OpBranchConditional %5877 %5880 %5885
       %5880 = OpLabel
       %5881 = OpVectorShuffle %v2float %5426 %765 1 4294967295
       %5882 = OpFMul %v2float %5426 %5881
       %5883 = OpCompositeExtract %float %5882 0
               OpBranch %5885
       %5885 = OpLabel
       %5886 = OpPhi %float %5883 %5880 %5876 %5875
               OpBranch %5888
       %5888 = OpLabel
       %5889 = OpPhi %float %5886 %5885 %5435 %5416
               OpBranch %5891
       %5891 = OpLabel
       %5892 = OpPhi %float %5889 %5888 %5386 %5411
               OpBranch %5894
       %5894 = OpLabel
       %5895 = OpPhi %float %5892 %5891 %261 %5406
       %5896 = OpPhi %bool %false %5891 %true %5406
               OpBranch %5898
       %5898 = OpLabel
       %5899 = OpPhi %float %5895 %5894 %261 %5401
       %5900 = OpPhi %bool %5896 %5894 %5402 %5401
               OpBranch %5902
       %5902 = OpLabel
       %5903 = OpPhi %float %5899 %5898 %261 %5396
       %5904 = OpPhi %bool %5900 %5898 %5397 %5396
               OpBranch %5906
       %5906 = OpLabel
       %5907 = OpPhi %float %5903 %5902 %261 %5391
       %5908 = OpPhi %bool %5904 %5902 %5392 %5391
               OpBranch %5910
       %5910 = OpLabel
       %5911 = OpPhi %float %5907 %5906 %261 %5381
       %5912 = OpPhi %bool %5908 %5906 %5387 %5381
               OpSelectionMerge %5918 None
               OpBranchConditional %5912 %5915 %5918
       %5915 = OpLabel
       %5916 = OpFSub %float %5385 %5385
               OpBranch %5918
       %5918 = OpLabel
       %5919 = OpPhi %float %5916 %5915 %5911 %5910
       %5920 = OpFSub %float %42 %5385
       %5921 = OpFSub %float %42 %5920
       %5922 = OpFSub %float %5921 %5385
       %5923 = OpFSub %float %5922 %5919
       %5924 = OpFAdd %float %5920 %5923
       %5925 = OpFMul %float %5384 %float_7_54978942en08
       %5926 = OpFNegate %float %5925
               OpSelectionMerge %6448 None
               OpBranchConditional %5388 %5929 %6448
       %5929 = OpLabel
       %5930 = OpIsNan %bool %float_7_54978942en08
       %5931 = OpLogicalNot %bool %5930
               OpSelectionMerge %6444 None
               OpBranchConditional %5931 %5934 %6444
       %5934 = OpLabel
       %5935 = OpIsNan %bool %5926
       %5936 = OpLogicalNot %bool %5935
               OpSelectionMerge %6440 None
               OpBranchConditional %5936 %5939 %6440
       %5939 = OpLabel
       %5940 = OpIsInf %bool %5384
       %5941 = OpLogicalNot %bool %5940
               OpSelectionMerge %6436 None
               OpBranchConditional %5941 %5944 %6436
       %5944 = OpLabel
       %5945 = OpIsInf %bool %float_7_54978942en08
       %5946 = OpLogicalNot %bool %5945
               OpSelectionMerge %6432 None
               OpBranchConditional %5946 %5949 %6432
       %5949 = OpLabel
       %5950 = OpIsInf %bool %5926
       %5951 = OpLogicalNot %bool %5950
               OpSelectionMerge %6429 None
               OpBranchConditional %5951 %5954 %6429
       %5954 = OpLabel
       %5955 = OpCompositeInsert %v2float %5384 %826 1
       %5956 = OpBitcast %v2uint %5955
       %5957 = OpBitwiseAnd %v2uint %5956 %267
       %5958 = OpINotEqual %v2bool %5957 %270
       %5959 = OpBitwiseAnd %v2uint %5956 %272
       %5960 = OpIEqual %v2bool %5959 %270
       %5961 = OpLogicalOr %v2bool %5960 %5958
       %5962 = OpBitwiseAnd %v2uint %5956 %277
       %5963 = OpBitcast %v2float %5962
       %5964 = OpSelect %v2float %5961 %5955 %5963
       %5965 = OpBitcast %uint %5926
       %5966 = OpBitwiseAnd %uint %5965 %uint_2139095040
       %5967 = OpINotEqual %bool %5966 %uint_0
       %5968 = OpBitwiseAnd %uint %5965 %uint_8388607
       %5969 = OpIEqual %bool %5968 %uint_0
       %5970 = OpLogicalOr %bool %5969 %5967
       %5971 = OpBitwiseAnd %uint %5965 %uint_2147483648
       %5972 = OpBitcast %float %5971
       %5973 = OpSelect %float %5970 %5926 %5972
       %5974 = OpFOrdEqual %v2bool %5964 %290
       %5975 = OpVectorShuffle %v2bool %5974 %292 1 4294967295
       %5976 = OpLogicalOr %v2bool %5975 %5974
       %5977 = OpCompositeExtract %bool %5976 0
       %5978 = OpLogicalNot %bool %5977
               OpSelectionMerge %6426 None
               OpBranchConditional %5978 %5981 %6426
       %5981 = OpLabel
       %5982 = OpFUnordNotEqual %bool %5973 %float_0
               OpSelectionMerge %6413 None
               OpBranchConditional %5982 %5985 %6413
       %5985 = OpLabel
       %5986 = OpBitcast %v2uint %5964
       %5987 = OpCompositeExtract %uint %5986 1
       %5988 = OpShiftRightLogical %uint %5987 %uint_23
       %5989 = OpBitwiseAnd %uint %5988 %uint_255
       %5990 = OpCompositeExtract %uint %5986 0
       %5991 = OpShiftRightLogical %uint %5990 %uint_23
       %5992 = OpBitwiseAnd %uint %5991 %uint_255
       %5993 = OpBitcast %uint %5973
       %5994 = OpShiftRightLogical %uint %5993 %uint_23
       %5995 = OpBitwiseAnd %uint %5994 %uint_255
       %5996 = OpIAdd %uint %5995 %uint_4294967169
       %5997 = OpBitwiseAnd %v2uint %5986 %272
       %5998 = OpBitwiseOr %v2uint %5997 %319
       %5999 = OpBitwiseAnd %uint %5993 %uint_2147483648
       %6000 = OpBitwiseXor %uint %5990 %5987
       %6001 = OpBitwiseAnd %uint %6000 %uint_2147483648
       %6002 = OpCompositeExtract %uint %5998 0
       %6003 = OpCompositeExtract %uint %5998 1
       %6004 = OpUMulExtended %_struct_58 %6003 %6002
       %6005 = OpCompositeExtract %uint %6004 1
       %6006 = OpIMul %uint %6002 %6003
       %6007 = OpShiftLeftLogical %uint %6005 %uint_14
       %6008 = OpShiftRightLogical %uint %6006 %uint_18
       %6009 = OpBitwiseOr %uint %6008 %6007
       %6010 = OpShiftLeftLogical %uint %6006 %uint_14
       %6011 = OpCompositeConstruct %v2uint %6010 %6009
       %6012 = OpBitwiseOr %uint %6009 %6010
       %6013 = OpINotEqual %bool %6012 %uint_0
       %6014 = OpIAdd %uint %5989 %uint_4294967042
       %6015 = OpIAdd %uint %6014 %5992
               OpSelectionMerge %6410 None
               OpBranchConditional %6013 %6018 %6410
       %6018 = OpLabel
       %6019 = OpISub %uint %6015 %5996
       %6020 = OpShiftLeftLogical %uint %5993 %uint_5
       %6021 = OpBitwiseAnd %uint %6020 %uint_268435424
       %6022 = OpBitwiseOr %uint %6021 %uint_268435456
       %6023 = OpCompositeInsert %v2uint %6022 %352 1
       %6024 = OpExtInst %uint %184 SAbs %6019
       %6025 = OpINotEqual %bool %6024 %uint_0
               OpSelectionMerge %6052 None
               OpBranchConditional %6025 %6028 %6052
       %6028 = OpLabel
       %6029 = OpUGreaterThanEqual %bool %6024 %uint_32
               OpSelectionMerge %6037 None
               OpBranchConditional %6029 %6032 %6037
       %6032 = OpLabel
       %6033 = OpBitwiseAnd %uint %6024 %uint_31
       %6034 = OpShiftLeftLogical %uint %uint_1 %6033
       %6035 = OpCompositeInsert %v2uint %6034 %352 1
               OpBranch %6037
       %6037 = OpLabel
       %6038 = OpPhi %v2uint %6035 %6032 %525 %6028
       %6039 = OpPhi %bool %false %6032 %true %6028
               OpSelectionMerge %6049 None
               OpBranchConditional %6039 %6042 %6049
       %6042 = OpLabel
       %6043 = OpISub %uint %uint_0 %6024
       %6044 = OpBitwiseAnd %uint %6043 %uint_31
       %6045 = OpShiftRightLogical %uint %uint_1 %6044
       %6046 = OpShiftLeftLogical %uint %uint_1 %6024
       %6047 = OpCompositeConstruct %v2uint %6046 %6045
               OpBranch %6049
       %6049 = OpLabel
       %6050 = OpPhi %v2uint %6047 %6042 %6038 %6037
               OpBranch %6052
       %6052 = OpLabel
       %6053 = OpPhi %v2uint %7071 %6018 %6050 %6049
       %6054 = OpCompositeExtract %uint %6053 0
       %6055 = OpShiftRightLogical %uint %6054 %uint_1
       %6056 = OpIAdd %uint %6055 %uint_2147483647
       %6057 = OpBitwiseAnd %uint %6054 %uint_1
       %6058 = OpIAdd %uint %6056 %6057
       %6059 = OpShiftRightLogical %uint %6058 %uint_31
       %6060 = OpIAdd %uint %6054 %uint_4294967295
       %6061 = OpCompositeExtract %uint %6053 1
       %6062 = OpIAdd %uint %6061 %uint_4294967295
       %6063 = OpIAdd %uint %6062 %6059
       %6064 = OpCompositeConstruct %v2uint %6060 %6063
       %6065 = OpSLessThanEqual %bool %6019 %uint_0
               OpSelectionMerge %6117 None
               OpBranchConditional %6065 %6068 %6117
       %6068 = OpLabel
       %6069 = OpSGreaterThanEqual %bool %6019 %uint_4294967233
               OpSelectionMerge %6112 None
               OpBranchConditional %6069 %6072 %6112
       %6072 = OpLabel
       %6073 = OpISub %uint %uint_0 %6019
       %6074 = OpBitwiseAnd %v2uint %6064 %6011
       %6075 = OpINotEqual %bool %6015 %5996
               OpSelectionMerge %6107 None
               OpBranchConditional %6075 %6078 %6107
       %6078 = OpLabel
       %6079 = OpUGreaterThanEqual %bool %6073 %uint_32
               OpSelectionMerge %6087 None
               OpBranchConditional %6079 %6082 %6087
       %6082 = OpLabel
       %6083 = OpBitwiseAnd %uint %6073 %uint_31
       %6084 = OpShiftRightLogical %uint %6009 %6083
       %6085 = OpCompositeInsert %v2uint %6084 %417 0
               OpBranch %6087
       %6087 = OpLabel
       %6088 = OpPhi %v2uint %6023 %6082 %525 %6078
       %6089 = OpPhi %v2uint %6074 %6082 %525 %6078
       %6090 = OpPhi %v2uint %6085 %6082 %525 %6078
       %6091 = OpPhi %bool %false %6082 %true %6078
               OpSelectionMerge %6102 None
               OpBranchConditional %6091 %6094 %6102
       %6094 = OpLabel
       %6095 = OpShiftRightLogical %uint %6010 %6073
       %6096 = OpBitwiseAnd %uint %6019 %uint_31
       %6097 = OpShiftLeftLogical %uint %6009 %6096
       %6098 = OpBitwiseOr %uint %6097 %6095
       %6099 = OpShiftRightLogical %uint %6009 %6073
       %6100 = OpCompositeConstruct %v2uint %6098 %6099
               OpBranch %6102
       %6102 = OpLabel
       %6103 = OpPhi %v2uint %6023 %6094 %6088 %6087
       %6104 = OpPhi %v2uint %6074 %6094 %6089 %6087
       %6105 = OpPhi %v2uint %6100 %6094 %6090 %6087
               OpBranch %6107
       %6107 = OpLabel
       %6108 = OpPhi %v2uint %6103 %6102 %6023 %6072
       %6109 = OpPhi %v2uint %6104 %6102 %6074 %6072
       %6110 = OpPhi %v2uint %6105 %6102 %6011 %6072
               OpBranch %6112
       %6112 = OpLabel
       %6113 = OpPhi %v2uint %6108 %6107 %6023 %6068
       %6114 = OpPhi %v2uint %6109 %6107 %6011 %6068
       %6115 = OpPhi %v2uint %6110 %6107 %270 %6068
               OpBranch %6117
       %6117 = OpLabel
       %6118 = OpPhi %v2uint %6113 %6112 %525 %6052
       %6119 = OpPhi %v2uint %6114 %6112 %525 %6052
       %6120 = OpPhi %v2uint %6115 %6112 %525 %6052
       %6121 = OpPhi %bool %false %6112 %true %6052
               OpSelectionMerge %6163 None
               OpBranchConditional %6121 %6124 %6163
       %6124 = OpLabel
       %6125 = OpULessThanEqual %bool %6019 %uint_63
               OpSelectionMerge %6158 None
               OpBranchConditional %6125 %6128 %6158
       %6128 = OpLabel
       %6129 = OpBitwiseAnd %uint %6063 %6022
       %6130 = OpCompositeInsert %v2uint %6129 %352 1
       %6131 = OpUGreaterThanEqual %bool %6019 %uint_32
               OpSelectionMerge %6139 None
               OpBranchConditional %6131 %6134 %6139
       %6134 = OpLabel
       %6135 = OpBitwiseAnd %uint %6019 %uint_31
       %6136 = OpShiftRightLogical %uint %6022 %6135
       %6137 = OpCompositeInsert %v2uint %6136 %417 0
               OpBranch %6139
       %6139 = OpLabel
       %6140 = OpPhi %v2uint %6137 %6134 %525 %6128
       %6141 = OpPhi %v2uint %6130 %6134 %525 %6128
       %6142 = OpPhi %v2uint %6011 %6134 %525 %6128
       %6143 = OpPhi %bool %false %6134 %true %6128
               OpSelectionMerge %6153 None
               OpBranchConditional %6143 %6146 %6153
       %6146 = OpLabel
       %6147 = OpISub %uint %uint_0 %6019
       %6148 = OpBitwiseAnd %uint %6147 %uint_31
       %6149 = OpShiftLeftLogical %uint %6022 %6148
       %6150 = OpShiftRightLogical %uint %6022 %6019
       %6151 = OpCompositeConstruct %v2uint %6149 %6150
               OpBranch %6153
       %6153 = OpLabel
       %6154 = OpPhi %v2uint %6151 %6146 %6140 %6139
       %6155 = OpPhi %v2uint %6130 %6146 %6141 %6139
       %6156 = OpPhi %v2uint %6011 %6146 %6142 %6139
               OpBranch %6158
       %6158 = OpLabel
       %6159 = OpPhi %v2uint %6154 %6153 %270 %6124
       %6160 = OpPhi %v2uint %6155 %6153 %6023 %6124
       %6161 = OpPhi %v2uint %6156 %6153 %6011 %6124
               OpBranch %6163
       %6163 = OpLabel
       %6164 = OpPhi %v2uint %6120 %6117 %6161 %6158
       %6165 = OpPhi %v2uint %6119 %6117 %6160 %6158
       %6166 = OpPhi %v2uint %6118 %6117 %6159 %6158
       %6167 = OpExtInst %uint %184 SMax %6015 %5996
       %6168 = OpINotEqual %bool %5999 %6001
               OpSelectionMerge %6215 None
               OpBranchConditional %6168 %6171 %6215
       %6171 = OpLabel
       %6172 = OpCompositeExtract %uint %6166 0
       %6173 = OpBitwiseXor %uint %6172 %uint_4294967295
       %6174 = OpCompositeExtract %uint %6166 1
       %6175 = OpBitwiseXor %uint %6174 %uint_4294967295
       %6176 = OpShiftRightLogical %uint %6173 %uint_1
       %6177 = OpBitwiseAnd %uint %6173 %uint_1
       %6178 = OpIAdd %uint %6176 %6177
       %6179 = OpShiftRightLogical %uint %6178 %uint_31
       %6180 = OpISub %uint %uint_0 %6172
       %6181 = OpCompositeExtract %uint %6164 0
       %6182 = OpShiftRightLogical %uint %6181 %uint_1
       %6183 = OpShiftRightLogical %uint %6180 %uint_1
       %6184 = OpIAdd %uint %6183 %6182
       %6185 = OpBitwiseAnd %uint %6181 %uint_1
       %6186 = OpBitwiseAnd %uint %6185 %6180
       %6187 = OpIAdd %uint %6184 %6186
       %6188 = OpShiftRightLogical %uint %6187 %uint_31
       %6189 = OpISub %uint %6181 %6172
       %6190 = OpCompositeExtract %uint %6164 1
       %6191 = OpVectorShuffle %v2uint %6165 %525 1 4294967295
       %6192 = OpBitwiseOr %v2uint %6191 %6165
       %6193 = OpCompositeExtract %uint %6192 0
       %6194 = OpINotEqual %bool %6193 %uint_0
       %6195 = OpSGreaterThan %bool %6015 %5996
       %6196 = OpSelect %bool %6194 %6195 %false
       %6197 = OpSelect %v2uint %6196 %533 %270
       %6198 = OpCompositeExtract %uint %6197 0
       %6199 = OpShiftRightLogical %uint %6189 %uint_1
       %6200 = OpShiftRightLogical %uint %6198 %uint_1
       %6201 = OpIAdd %uint %6200 %6199
       %6202 = OpBitwiseAnd %uint %6189 %uint_1
       %6203 = OpBitwiseAnd %uint %6202 %6198
       %6204 = OpIAdd %uint %6201 %6203
       %6205 = OpShiftRightLogical %uint %6204 %uint_31
       %6206 = OpIAdd %uint %6198 %6189
       %6207 = OpCompositeExtract %uint %6197 1
       %6208 = OpIAdd %uint %6190 %6175
       %6209 = OpIAdd %uint %6208 %6179
       %6210 = OpIAdd %uint %6209 %6188
       %6211 = OpIAdd %uint %6210 %6207
       %6212 = OpIAdd %uint %6211 %6205
       %6213 = OpCompositeConstruct %v2uint %6206 %6212
               OpBranch %6215
       %6215 = OpLabel
       %6216 = OpPhi %v2uint %6213 %6171 %525 %6163
       %6217 = OpPhi %bool %false %6171 %true %6163
               OpSelectionMerge %6236 None
               OpBranchConditional %6217 %6220 %6236
       %6220 = OpLabel
       %6221 = OpCompositeExtract %uint %6164 0
       %6222 = OpCompositeExtract %uint %6166 0
       %6223 = OpShiftRightLogical %uint %6221 %uint_1
       %6224 = OpShiftRightLogical %uint %6222 %uint_1
       %6225 = OpIAdd %uint %6224 %6223
       %6226 = OpBitwiseAnd %uint %6221 %uint_1
       %6227 = OpBitwiseAnd %uint %6226 %6222
       %6228 = OpIAdd %uint %6225 %6227
       %6229 = OpShiftRightLogical %uint %6228 %uint_31
       %6230 = OpIAdd %uint %6222 %6221
       %6231 = OpIAdd %v2uint %6166 %6164
       %6232 = OpCompositeExtract %uint %6231 1
       %6233 = OpIAdd %uint %6229 %6232
       %6234 = OpCompositeConstruct %v2uint %6230 %6233
               OpBranch %6236
       %6236 = OpLabel
       %6237 = OpPhi %v2uint %6234 %6220 %6216 %6215
       %6238 = OpCompositeExtract %uint %6237 1
       %6239 = OpSLessThan %bool %6238 %uint_0
               OpSelectionMerge %6255 None
               OpBranchConditional %6239 %6242 %6255
       %6242 = OpLabel
       %6243 = OpCompositeExtract %uint %6237 0
       %6244 = OpBitwiseXor %uint %6243 %uint_4294967295
       %6245 = OpBitwiseXor %uint %6238 %uint_4294967295
       %6246 = OpShiftRightLogical %uint %6244 %uint_1
       %6247 = OpBitwiseAnd %uint %6244 %uint_1
       %6248 = OpIAdd %uint %6246 %6247
       %6249 = OpShiftRightLogical %uint %6248 %uint_31
       %6250 = OpISub %uint %uint_0 %6243
       %6251 = OpIAdd %uint %6249 %6245
       %6252 = OpCompositeConstruct %v2uint %6250 %6251
       %6253 = OpBitwiseXor %uint %6001 %uint_2147483648
               OpBranch %6255
       %6255 = OpLabel
       %6256 = OpPhi %uint %6253 %6242 %6001 %6236
       %6257 = OpPhi %v2uint %6252 %6242 %6237 %6236
       %6258 = OpCompositeExtract %uint %6257 1
       %6259 = OpExtInst %uint %184 FindUMsb %6258
       %6260 = OpISub %uint %uint_31 %6259
       %6261 = OpIEqual %bool %6258 %uint_0
       %6262 = OpCompositeExtract %uint %6257 0
       %6263 = OpExtInst %uint %184 FindUMsb %6262
       %6264 = OpISub %uint %uint_31 %6263
       %6265 = OpIAdd %uint %6264 %uint_32
       %6266 = OpSelect %uint %6261 %6265 %6260
       %6267 = OpISub %uint %uint_3 %6266
       %6268 = OpIAdd %uint %6267 %6167
       %6269 = OpUGreaterThan %bool %6266 %uint_3
               OpSelectionMerge %6300 None
               OpBranchConditional %6269 %6272 %6300
       %6272 = OpLabel
       %6273 = OpIAdd %uint %6266 %uint_4294967293
       %6274 = OpUGreaterThanEqual %bool %6273 %uint_32
               OpSelectionMerge %6282 None
               OpBranchConditional %6274 %6277 %6282
       %6277 = OpLabel
       %6278 = OpBitwiseAnd %uint %6273 %uint_31
       %6279 = OpShiftLeftLogical %uint %6262 %6278
       %6280 = OpCompositeInsert %v2uint %6279 %352 1
               OpBranch %6282
       %6282 = OpLabel
       %6283 = OpPhi %uint %uint_0 %6277 %351 %6272
       %6284 = OpPhi %v2uint %6280 %6277 %525 %6272
       %6285 = OpPhi %bool %false %6277 %true %6272
               OpSelectionMerge %6296 None
               OpBranchConditional %6285 %6288 %6296
       %6288 = OpLabel
       %6289 = OpShiftLeftLogical %uint %6258 %6273
       %6290 = OpBitwiseAnd %uint %6267 %uint_31
       %6291 = OpShiftRightLogical %uint %6262 %6290
       %6292 = OpBitwiseOr %uint %6291 %6289
       %6293 = OpShiftLeftLogical %uint %6262 %6273
       %6294 = OpCompositeConstruct %v2uint %6293 %6292
               OpBranch %6296
       %6296 = OpLabel
       %6297 = OpPhi %uint %uint_0 %6288 %6283 %6282
       %6298 = OpPhi %v2uint %6294 %6288 %6284 %6282
               OpBranch %6300
       %6300 = OpLabel
       %6301 = OpPhi %v2uint %6257 %6255 %6298 %6296
       %6302 = OpPhi %uint %6267 %6255 %6297 %6296
       %6303 = OpIAdd %uint %6302 %uint_5
       %6304 = OpBitwiseAnd %uint %6303 %uint_31
       %6305 = OpShiftLeftLogical %uint %uint_1 %6304
       %6306 = OpCompositeInsert %v2uint %6305 %352 1
       %6307 = OpIAdd %uint %6305 %uint_4294967295
       %6308 = OpCompositeInsert %v2uint %6307 %647 1
       %6309 = OpBitwiseAnd %v2uint %6308 %6301
       %6310 = OpCompositeExtract %uint %6309 1
       %6311 = OpBitwiseAnd %v2uint %6306 %6301
       %6312 = OpIAdd %uint %6302 %uint_2
       %6313 = OpBitwiseAnd %uint %6312 %uint_31
       %6314 = OpShiftLeftLogical %uint %uint_4 %6313
       %6315 = OpUGreaterThan %bool %6310 %6314
       %6316 = OpLogicalNot %bool %6315
               OpSelectionMerge %6347 None
               OpBranchConditional %6316 %6319 %6347
       %6319 = OpLabel
       %6320 = OpCompositeExtract %uint %6309 0
       %6321 = OpVectorShuffle %v2uint %6165 %525 1 4294967295
       %6322 = OpBitwiseOr %v2uint %6321 %6165
       %6323 = OpCompositeExtract %uint %6322 0
       %6324 = OpINotEqual %bool %6323 %uint_0
       %6325 = OpSelect %uint %6324 %uint_1 %uint_0
       %6326 = OpBitwiseOr %uint %6320 %6325
       %6327 = OpIEqual %bool %6310 %6314
       %6328 = OpINotEqual %bool %6326 %uint_0
       %6329 = OpSelect %bool %6327 %6328 %false
       %6330 = OpLogicalNot %bool %6329
               OpSelectionMerge %6343 None
               OpBranchConditional %6330 %6333 %6343
       %6333 = OpLabel
       %6334 = OpINotEqual %bool %6310 %6314
       %6335 = OpLogicalOr %bool %6334 %6328
       %6336 = OpVectorShuffle %v2uint %6311 %525 1 4294967295
       %6337 = OpBitwiseOr %v2uint %6336 %6311
       %6338 = OpCompositeExtract %uint %6337 0
       %6339 = OpIEqual %bool %6338 %uint_0
       %6340 = OpSelect %bool %6335 %true %6339
       %6341 = OpLogicalNot %bool %6340
               OpBranch %6343
       %6343 = OpLabel
       %6344 = OpPhi %v2uint %6301 %6333 %525 %6319
       %6345 = OpPhi %bool %6341 %6333 %6329 %6319
               OpBranch %6347
       %6347 = OpLabel
       %6348 = OpPhi %v2uint %6344 %6343 %525 %6300
       %6349 = OpPhi %bool %6345 %6343 %6315 %6300
               OpSelectionMerge %6357 None
               OpBranchConditional %6349 %6352 %6357
       %6352 = OpLabel
       %6353 = OpCompositeExtract %uint %6301 1
       %6354 = OpIAdd %uint %6305 %6353
       %6355 = OpCompositeInsert %v2uint %6354 %6301 1
               OpBranch %6357
       %6357 = OpLabel
       %6358 = OpPhi %v2uint %6355 %6352 %6348 %6347
       %6359 = OpCompositeExtract %uint %6358 1
       %6360 = OpShiftRightLogical %uint %6359 %6304
       %6361 = OpUGreaterThan %bool %6360 %uint_16777215
       %6362 = OpSelect %uint %6361 %uint_1 %uint_0
       %6363 = OpShiftRightLogical %uint %6360 %6362
       %6364 = OpIAdd %uint %6268 %6362
       %6365 = OpINotEqual %bool %6363 %uint_0
               OpSelectionMerge %6407 None
               OpBranchConditional %6365 %6368 %6407
       %6368 = OpLabel
       %6369 = OpSLessThanEqual %bool %6364 %uint_127
               OpSelectionMerge %6395 None
               OpBranchConditional %6369 %6372 %6395
       %6372 = OpLabel
       %6373 = OpSGreaterThanEqual %bool %6364 %uint_4294967170
               OpSelectionMerge %6384 None
               OpBranchConditional %6373 %6376 %6384
       %6376 = OpLabel
       %6377 = OpShiftLeftLogical %uint %6364 %uint_23
       %6378 = OpIAdd %uint %6377 %uint_1065353216
       %6379 = OpBitwiseAnd %uint %6363 %uint_8388607
       %6380 = OpBitwiseOr %uint %6378 %6379
       %6381 = OpBitwiseOr %uint %6380 %6256
       %6382 = OpBitcast %float %6381
               OpBranch %6384
       %6384 = OpLabel
       %6385 = OpPhi %float %6382 %6376 %261 %6372
       %6386 = OpPhi %bool %false %6376 %true %6372
               OpSelectionMerge %6392 None
               OpBranchConditional %6386 %6389 %6392
       %6389 = OpLabel
       %6390 = OpBitcast %float %6256
               OpBranch %6392
       %6392 = OpLabel
       %6393 = OpPhi %float %6390 %6389 %6385 %6384
               OpBranch %6395
       %6395 = OpLabel
       %6396 = OpPhi %float %6393 %6392 %261 %6368
       %6397 = OpPhi %bool %false %6392 %true %6368
               OpSelectionMerge %6404 None
               OpBranchConditional %6397 %6400 %6404
       %6400 = OpLabel
       %6401 = OpBitwiseOr %uint %6256 %uint_2139095040
       %6402 = OpBitcast %float %6401
               OpBranch %6404
       %6404 = OpLabel
       %6405 = OpPhi %float %6402 %6400 %6396 %6395
               OpBranch %6407
       %6407 = OpLabel
       %6408 = OpPhi %float %6405 %6404 %float_0 %6357
               OpBranch %6410
       %6410 = OpLabel
       %6411 = OpPhi %float %6408 %6407 %5973 %5985
               OpBranch %6413
       %6413 = OpLabel
       %6414 = OpPhi %float %6411 %6410 %261 %5981
       %6415 = OpPhi %bool %false %6410 %true %5981
               OpSelectionMerge %6423 None
               OpBranchConditional %6415 %6418 %6423
       %6418 = OpLabel
       %6419 = OpVectorShuffle %v2float %5964 %765 1 4294967295
       %6420 = OpFMul %v2float %5964 %6419
       %6421 = OpCompositeExtract %float %6420 0
               OpBranch %6423
       %6423 = OpLabel
       %6424 = OpPhi %float %6421 %6418 %6414 %6413
               OpBranch %6426
       %6426 = OpLabel
       %6427 = OpPhi %float %6424 %6423 %5973 %5954
               OpBranch %6429
       %6429 = OpLabel
       %6430 = OpPhi %float %6427 %6426 %5926 %5949
               OpBranch %6432
       %6432 = OpLabel
       %6433 = OpPhi %float %6430 %6429 %261 %5944
       %6434 = OpPhi %bool %false %6429 %true %5944
               OpBranch %6436
       %6436 = OpLabel
       %6437 = OpPhi %float %6433 %6432 %261 %5939
       %6438 = OpPhi %bool %6434 %6432 %5940 %5939
               OpBranch %6440
       %6440 = OpLabel
       %6441 = OpPhi %float %6437 %6436 %261 %5934
       %6442 = OpPhi %bool %6438 %6436 %5935 %5934
               OpBranch %6444
       %6444 = OpLabel
       %6445 = OpPhi %float %6441 %6440 %261 %5929
       %6446 = OpPhi %bool %6442 %6440 %5930 %5929
               OpBranch %6448
       %6448 = OpLabel
       %6449 = OpPhi %float %6445 %6444 %261 %5918
       %6450 = OpPhi %bool %6446 %6444 %5387 %5918
               OpSelectionMerge %6456 None
               OpBranchConditional %6450 %6453 %6456
       %6453 = OpLabel
       %6454 = OpFSub %float %5925 %5925
               OpBranch %6456
       %6456 = OpLabel
       %6457 = OpPhi %float %6454 %6453 %6449 %6448
       %6458 = OpFSub %float %5924 %5925
       %6459 = OpFSub %float %5924 %6458
       %6460 = OpFSub %float %6459 %5925
       %6461 = OpFSub %float %6460 %6457
       %6462 = OpFAdd %float %6458 %6461
       %6463 = OpFMul %float %5384 %float_5_39030253en15
       %6464 = OpFNegate %float %6463
               OpSelectionMerge %6986 None
               OpBranchConditional %5388 %6467 %6986
       %6467 = OpLabel
       %6468 = OpIsNan %bool %float_5_39030253en15
       %6469 = OpLogicalNot %bool %6468
               OpSelectionMerge %6982 None
               OpBranchConditional %6469 %6472 %6982
       %6472 = OpLabel
       %6473 = OpIsNan %bool %6464
       %6474 = OpLogicalNot %bool %6473
               OpSelectionMerge %6978 None
               OpBranchConditional %6474 %6477 %6978
       %6477 = OpLabel
       %6478 = OpIsInf %bool %5384
       %6479 = OpLogicalNot %bool %6478
               OpSelectionMerge %6974 None
               OpBranchConditional %6479 %6482 %6974
       %6482 = OpLabel
       %6483 = OpIsInf %bool %float_5_39030253en15
       %6484 = OpLogicalNot %bool %6483
               OpSelectionMerge %6970 None
               OpBranchConditional %6484 %6487 %6970
       %6487 = OpLabel
       %6488 = OpIsInf %bool %6464
       %6489 = OpLogicalNot %bool %6488
               OpSelectionMerge %6967 None
               OpBranchConditional %6489 %6492 %6967
       %6492 = OpLabel
       %6493 = OpCompositeInsert %v2float %5384 %3008 1
       %6494 = OpBitcast %v2uint %6493
       %6495 = OpBitwiseAnd %v2uint %6494 %267
       %6496 = OpINotEqual %v2bool %6495 %270
       %6497 = OpBitwiseAnd %v2uint %6494 %272
       %6498 = OpIEqual %v2bool %6497 %270
       %6499 = OpLogicalOr %v2bool %6498 %6496
       %6500 = OpBitwiseAnd %v2uint %6494 %277
       %6501 = OpBitcast %v2float %6500
       %6502 = OpSelect %v2float %6499 %6493 %6501
       %6503 = OpBitcast %uint %6464
       %6504 = OpBitwiseAnd %uint %6503 %uint_2139095040
       %6505 = OpINotEqual %bool %6504 %uint_0
       %6506 = OpBitwiseAnd %uint %6503 %uint_8388607
       %6507 = OpIEqual %bool %6506 %uint_0
       %6508 = OpLogicalOr %bool %6507 %6505
       %6509 = OpBitwiseAnd %uint %6503 %uint_2147483648
       %6510 = OpBitcast %float %6509
       %6511 = OpSelect %float %6508 %6464 %6510
       %6512 = OpFOrdEqual %v2bool %6502 %290
       %6513 = OpVectorShuffle %v2bool %6512 %292 1 4294967295
       %6514 = OpLogicalOr %v2bool %6513 %6512
       %6515 = OpCompositeExtract %bool %6514 0
       %6516 = OpLogicalNot %bool %6515
               OpSelectionMerge %6964 None
               OpBranchConditional %6516 %6519 %6964
       %6519 = OpLabel
       %6520 = OpFUnordNotEqual %bool %6511 %float_0
               OpSelectionMerge %6951 None
               OpBranchConditional %6520 %6523 %6951
       %6523 = OpLabel
       %6524 = OpBitcast %v2uint %6502
       %6525 = OpCompositeExtract %uint %6524 1
       %6526 = OpShiftRightLogical %uint %6525 %uint_23
       %6527 = OpBitwiseAnd %uint %6526 %uint_255
       %6528 = OpCompositeExtract %uint %6524 0
       %6529 = OpShiftRightLogical %uint %6528 %uint_23
       %6530 = OpBitwiseAnd %uint %6529 %uint_255
       %6531 = OpBitcast %uint %6511
       %6532 = OpShiftRightLogical %uint %6531 %uint_23
       %6533 = OpBitwiseAnd %uint %6532 %uint_255
       %6534 = OpIAdd %uint %6533 %uint_4294967169
       %6535 = OpBitwiseAnd %v2uint %6524 %272
       %6536 = OpBitwiseOr %v2uint %6535 %319
       %6537 = OpBitwiseAnd %uint %6531 %uint_2147483648
       %6538 = OpBitwiseXor %uint %6528 %6525
       %6539 = OpBitwiseAnd %uint %6538 %uint_2147483648
       %6540 = OpCompositeExtract %uint %6536 0
       %6541 = OpCompositeExtract %uint %6536 1
       %6542 = OpUMulExtended %_struct_58 %6541 %6540
       %6543 = OpCompositeExtract %uint %6542 1
       %6544 = OpIMul %uint %6540 %6541
       %6545 = OpShiftLeftLogical %uint %6543 %uint_14
       %6546 = OpShiftRightLogical %uint %6544 %uint_18
       %6547 = OpBitwiseOr %uint %6546 %6545
       %6548 = OpShiftLeftLogical %uint %6544 %uint_14
       %6549 = OpCompositeConstruct %v2uint %6548 %6547
       %6550 = OpBitwiseOr %uint %6547 %6548
       %6551 = OpINotEqual %bool %6550 %uint_0
       %6552 = OpIAdd %uint %6527 %uint_4294967042
       %6553 = OpIAdd %uint %6552 %6530
               OpSelectionMerge %6948 None
               OpBranchConditional %6551 %6556 %6948
       %6556 = OpLabel
       %6557 = OpISub %uint %6553 %6534
       %6558 = OpShiftLeftLogical %uint %6531 %uint_5
       %6559 = OpBitwiseAnd %uint %6558 %uint_268435424
       %6560 = OpBitwiseOr %uint %6559 %uint_268435456
       %6561 = OpCompositeInsert %v2uint %6560 %352 1
       %6562 = OpExtInst %uint %184 SAbs %6557
       %6563 = OpINotEqual %bool %6562 %uint_0
               OpSelectionMerge %6590 None
               OpBranchConditional %6563 %6566 %6590
       %6566 = OpLabel
       %6567 = OpUGreaterThanEqual %bool %6562 %uint_32
               OpSelectionMerge %6575 None
               OpBranchConditional %6567 %6570 %6575
       %6570 = OpLabel
       %6571 = OpBitwiseAnd %uint %6562 %uint_31
       %6572 = OpShiftLeftLogical %uint %uint_1 %6571
       %6573 = OpCompositeInsert %v2uint %6572 %352 1
               OpBranch %6575
       %6575 = OpLabel
       %6576 = OpPhi %v2uint %6573 %6570 %525 %6566
       %6577 = OpPhi %bool %false %6570 %true %6566
               OpSelectionMerge %6587 None
               OpBranchConditional %6577 %6580 %6587
       %6580 = OpLabel
       %6581 = OpISub %uint %uint_0 %6562
       %6582 = OpBitwiseAnd %uint %6581 %uint_31
       %6583 = OpShiftRightLogical %uint %uint_1 %6582
       %6584 = OpShiftLeftLogical %uint %uint_1 %6562
       %6585 = OpCompositeConstruct %v2uint %6584 %6583
               OpBranch %6587
       %6587 = OpLabel
       %6588 = OpPhi %v2uint %6585 %6580 %6576 %6575
               OpBranch %6590
       %6590 = OpLabel
       %6591 = OpPhi %v2uint %7071 %6556 %6588 %6587
       %6592 = OpCompositeExtract %uint %6591 0
       %6593 = OpShiftRightLogical %uint %6592 %uint_1
       %6594 = OpIAdd %uint %6593 %uint_2147483647
       %6595 = OpBitwiseAnd %uint %6592 %uint_1
       %6596 = OpIAdd %uint %6594 %6595
       %6597 = OpShiftRightLogical %uint %6596 %uint_31
       %6598 = OpIAdd %uint %6592 %uint_4294967295
       %6599 = OpCompositeExtract %uint %6591 1
       %6600 = OpIAdd %uint %6599 %uint_4294967295
       %6601 = OpIAdd %uint %6600 %6597
       %6602 = OpCompositeConstruct %v2uint %6598 %6601
       %6603 = OpSLessThanEqual %bool %6557 %uint_0
               OpSelectionMerge %6655 None
               OpBranchConditional %6603 %6606 %6655
       %6606 = OpLabel
       %6607 = OpSGreaterThanEqual %bool %6557 %uint_4294967233
               OpSelectionMerge %6650 None
               OpBranchConditional %6607 %6610 %6650
       %6610 = OpLabel
       %6611 = OpISub %uint %uint_0 %6557
       %6612 = OpBitwiseAnd %v2uint %6602 %6549
       %6613 = OpINotEqual %bool %6553 %6534
               OpSelectionMerge %6645 None
               OpBranchConditional %6613 %6616 %6645
       %6616 = OpLabel
       %6617 = OpUGreaterThanEqual %bool %6611 %uint_32
               OpSelectionMerge %6625 None
               OpBranchConditional %6617 %6620 %6625
       %6620 = OpLabel
       %6621 = OpBitwiseAnd %uint %6611 %uint_31
       %6622 = OpShiftRightLogical %uint %6547 %6621
       %6623 = OpCompositeInsert %v2uint %6622 %417 0
               OpBranch %6625
       %6625 = OpLabel
       %6626 = OpPhi %v2uint %6561 %6620 %525 %6616
       %6627 = OpPhi %v2uint %6612 %6620 %525 %6616
       %6628 = OpPhi %v2uint %6623 %6620 %525 %6616
       %6629 = OpPhi %bool %false %6620 %true %6616
               OpSelectionMerge %6640 None
               OpBranchConditional %6629 %6632 %6640
       %6632 = OpLabel
       %6633 = OpShiftRightLogical %uint %6548 %6611
       %6634 = OpBitwiseAnd %uint %6557 %uint_31
       %6635 = OpShiftLeftLogical %uint %6547 %6634
       %6636 = OpBitwiseOr %uint %6635 %6633
       %6637 = OpShiftRightLogical %uint %6547 %6611
       %6638 = OpCompositeConstruct %v2uint %6636 %6637
               OpBranch %6640
       %6640 = OpLabel
       %6641 = OpPhi %v2uint %6561 %6632 %6626 %6625
       %6642 = OpPhi %v2uint %6612 %6632 %6627 %6625
       %6643 = OpPhi %v2uint %6638 %6632 %6628 %6625
               OpBranch %6645
       %6645 = OpLabel
       %6646 = OpPhi %v2uint %6641 %6640 %6561 %6610
       %6647 = OpPhi %v2uint %6642 %6640 %6612 %6610
       %6648 = OpPhi %v2uint %6643 %6640 %6549 %6610
               OpBranch %6650
       %6650 = OpLabel
       %6651 = OpPhi %v2uint %6646 %6645 %6561 %6606
       %6652 = OpPhi %v2uint %6647 %6645 %6549 %6606
       %6653 = OpPhi %v2uint %6648 %6645 %270 %6606
               OpBranch %6655
       %6655 = OpLabel
       %6656 = OpPhi %v2uint %6651 %6650 %525 %6590
       %6657 = OpPhi %v2uint %6652 %6650 %525 %6590
       %6658 = OpPhi %v2uint %6653 %6650 %525 %6590
       %6659 = OpPhi %bool %false %6650 %true %6590
               OpSelectionMerge %6701 None
               OpBranchConditional %6659 %6662 %6701
       %6662 = OpLabel
       %6663 = OpULessThanEqual %bool %6557 %uint_63
               OpSelectionMerge %6696 None
               OpBranchConditional %6663 %6666 %6696
       %6666 = OpLabel
       %6667 = OpBitwiseAnd %uint %6601 %6560
       %6668 = OpCompositeInsert %v2uint %6667 %352 1
       %6669 = OpUGreaterThanEqual %bool %6557 %uint_32
               OpSelectionMerge %6677 None
               OpBranchConditional %6669 %6672 %6677
       %6672 = OpLabel
       %6673 = OpBitwiseAnd %uint %6557 %uint_31
       %6674 = OpShiftRightLogical %uint %6560 %6673
       %6675 = OpCompositeInsert %v2uint %6674 %417 0
               OpBranch %6677
       %6677 = OpLabel
       %6678 = OpPhi %v2uint %6675 %6672 %525 %6666
       %6679 = OpPhi %v2uint %6668 %6672 %525 %6666
       %6680 = OpPhi %v2uint %6549 %6672 %525 %6666
       %6681 = OpPhi %bool %false %6672 %true %6666
               OpSelectionMerge %6691 None
               OpBranchConditional %6681 %6684 %6691
       %6684 = OpLabel
       %6685 = OpISub %uint %uint_0 %6557
       %6686 = OpBitwiseAnd %uint %6685 %uint_31
       %6687 = OpShiftLeftLogical %uint %6560 %6686
       %6688 = OpShiftRightLogical %uint %6560 %6557
       %6689 = OpCompositeConstruct %v2uint %6687 %6688
               OpBranch %6691
       %6691 = OpLabel
       %6692 = OpPhi %v2uint %6689 %6684 %6678 %6677
       %6693 = OpPhi %v2uint %6668 %6684 %6679 %6677
       %6694 = OpPhi %v2uint %6549 %6684 %6680 %6677
               OpBranch %6696
       %6696 = OpLabel
       %6697 = OpPhi %v2uint %6692 %6691 %270 %6662
       %6698 = OpPhi %v2uint %6693 %6691 %6561 %6662
       %6699 = OpPhi %v2uint %6694 %6691 %6549 %6662
               OpBranch %6701
       %6701 = OpLabel
       %6702 = OpPhi %v2uint %6658 %6655 %6699 %6696
       %6703 = OpPhi %v2uint %6657 %6655 %6698 %6696
       %6704 = OpPhi %v2uint %6656 %6655 %6697 %6696
       %6705 = OpExtInst %uint %184 SMax %6553 %6534
       %6706 = OpINotEqual %bool %6537 %6539
               OpSelectionMerge %6753 None
               OpBranchConditional %6706 %6709 %6753
       %6709 = OpLabel
       %6710 = OpCompositeExtract %uint %6704 0
       %6711 = OpBitwiseXor %uint %6710 %uint_4294967295
       %6712 = OpCompositeExtract %uint %6704 1
       %6713 = OpBitwiseXor %uint %6712 %uint_4294967295
       %6714 = OpShiftRightLogical %uint %6711 %uint_1
       %6715 = OpBitwiseAnd %uint %6711 %uint_1
       %6716 = OpIAdd %uint %6714 %6715
       %6717 = OpShiftRightLogical %uint %6716 %uint_31
       %6718 = OpISub %uint %uint_0 %6710
       %6719 = OpCompositeExtract %uint %6702 0
       %6720 = OpShiftRightLogical %uint %6719 %uint_1
       %6721 = OpShiftRightLogical %uint %6718 %uint_1
       %6722 = OpIAdd %uint %6721 %6720
       %6723 = OpBitwiseAnd %uint %6719 %uint_1
       %6724 = OpBitwiseAnd %uint %6723 %6718
       %6725 = OpIAdd %uint %6722 %6724
       %6726 = OpShiftRightLogical %uint %6725 %uint_31
       %6727 = OpISub %uint %6719 %6710
       %6728 = OpCompositeExtract %uint %6702 1
       %6729 = OpVectorShuffle %v2uint %6703 %525 1 4294967295
       %6730 = OpBitwiseOr %v2uint %6729 %6703
       %6731 = OpCompositeExtract %uint %6730 0
       %6732 = OpINotEqual %bool %6731 %uint_0
       %6733 = OpSGreaterThan %bool %6553 %6534
       %6734 = OpSelect %bool %6732 %6733 %false
       %6735 = OpSelect %v2uint %6734 %533 %270
       %6736 = OpCompositeExtract %uint %6735 0
       %6737 = OpShiftRightLogical %uint %6727 %uint_1
       %6738 = OpShiftRightLogical %uint %6736 %uint_1
       %6739 = OpIAdd %uint %6738 %6737
       %6740 = OpBitwiseAnd %uint %6727 %uint_1
       %6741 = OpBitwiseAnd %uint %6740 %6736
       %6742 = OpIAdd %uint %6739 %6741
       %6743 = OpShiftRightLogical %uint %6742 %uint_31
       %6744 = OpIAdd %uint %6736 %6727
       %6745 = OpCompositeExtract %uint %6735 1
       %6746 = OpIAdd %uint %6728 %6713
       %6747 = OpIAdd %uint %6746 %6717
       %6748 = OpIAdd %uint %6747 %6726
       %6749 = OpIAdd %uint %6748 %6745
       %6750 = OpIAdd %uint %6749 %6743
       %6751 = OpCompositeConstruct %v2uint %6744 %6750
               OpBranch %6753
       %6753 = OpLabel
       %6754 = OpPhi %v2uint %6751 %6709 %525 %6701
       %6755 = OpPhi %bool %false %6709 %true %6701
               OpSelectionMerge %6774 None
               OpBranchConditional %6755 %6758 %6774
       %6758 = OpLabel
       %6759 = OpCompositeExtract %uint %6702 0
       %6760 = OpCompositeExtract %uint %6704 0
       %6761 = OpShiftRightLogical %uint %6759 %uint_1
       %6762 = OpShiftRightLogical %uint %6760 %uint_1
       %6763 = OpIAdd %uint %6762 %6761
       %6764 = OpBitwiseAnd %uint %6759 %uint_1
       %6765 = OpBitwiseAnd %uint %6764 %6760
       %6766 = OpIAdd %uint %6763 %6765
       %6767 = OpShiftRightLogical %uint %6766 %uint_31
       %6768 = OpIAdd %uint %6760 %6759
       %6769 = OpIAdd %v2uint %6704 %6702
       %6770 = OpCompositeExtract %uint %6769 1
       %6771 = OpIAdd %uint %6767 %6770
       %6772 = OpCompositeConstruct %v2uint %6768 %6771
               OpBranch %6774
       %6774 = OpLabel
       %6775 = OpPhi %v2uint %6772 %6758 %6754 %6753
       %6776 = OpCompositeExtract %uint %6775 1
       %6777 = OpSLessThan %bool %6776 %uint_0
               OpSelectionMerge %6793 None
               OpBranchConditional %6777 %6780 %6793
       %6780 = OpLabel
       %6781 = OpCompositeExtract %uint %6775 0
       %6782 = OpBitwiseXor %uint %6781 %uint_4294967295
       %6783 = OpBitwiseXor %uint %6776 %uint_4294967295
       %6784 = OpShiftRightLogical %uint %6782 %uint_1
       %6785 = OpBitwiseAnd %uint %6782 %uint_1
       %6786 = OpIAdd %uint %6784 %6785
       %6787 = OpShiftRightLogical %uint %6786 %uint_31
       %6788 = OpISub %uint %uint_0 %6781
       %6789 = OpIAdd %uint %6787 %6783
       %6790 = OpCompositeConstruct %v2uint %6788 %6789
       %6791 = OpBitwiseXor %uint %6539 %uint_2147483648
               OpBranch %6793
       %6793 = OpLabel
       %6794 = OpPhi %uint %6791 %6780 %6539 %6774
       %6795 = OpPhi %v2uint %6790 %6780 %6775 %6774
       %6796 = OpCompositeExtract %uint %6795 1
       %6797 = OpExtInst %uint %184 FindUMsb %6796
       %6798 = OpISub %uint %uint_31 %6797
       %6799 = OpIEqual %bool %6796 %uint_0
       %6800 = OpCompositeExtract %uint %6795 0
       %6801 = OpExtInst %uint %184 FindUMsb %6800
       %6802 = OpISub %uint %uint_31 %6801
       %6803 = OpIAdd %uint %6802 %uint_32
       %6804 = OpSelect %uint %6799 %6803 %6798
       %6805 = OpISub %uint %uint_3 %6804
       %6806 = OpIAdd %uint %6805 %6705
       %6807 = OpUGreaterThan %bool %6804 %uint_3
               OpSelectionMerge %6838 None
               OpBranchConditional %6807 %6810 %6838
       %6810 = OpLabel
       %6811 = OpIAdd %uint %6804 %uint_4294967293
       %6812 = OpUGreaterThanEqual %bool %6811 %uint_32
               OpSelectionMerge %6820 None
               OpBranchConditional %6812 %6815 %6820
       %6815 = OpLabel
       %6816 = OpBitwiseAnd %uint %6811 %uint_31
       %6817 = OpShiftLeftLogical %uint %6800 %6816
       %6818 = OpCompositeInsert %v2uint %6817 %352 1
               OpBranch %6820
       %6820 = OpLabel
       %6821 = OpPhi %uint %uint_0 %6815 %351 %6810
       %6822 = OpPhi %v2uint %6818 %6815 %525 %6810
       %6823 = OpPhi %bool %false %6815 %true %6810
               OpSelectionMerge %6834 None
               OpBranchConditional %6823 %6826 %6834
       %6826 = OpLabel
       %6827 = OpShiftLeftLogical %uint %6796 %6811
       %6828 = OpBitwiseAnd %uint %6805 %uint_31
       %6829 = OpShiftRightLogical %uint %6800 %6828
       %6830 = OpBitwiseOr %uint %6829 %6827
       %6831 = OpShiftLeftLogical %uint %6800 %6811
       %6832 = OpCompositeConstruct %v2uint %6831 %6830
               OpBranch %6834
       %6834 = OpLabel
       %6835 = OpPhi %uint %uint_0 %6826 %6821 %6820
       %6836 = OpPhi %v2uint %6832 %6826 %6822 %6820
               OpBranch %6838
       %6838 = OpLabel
       %6839 = OpPhi %v2uint %6795 %6793 %6836 %6834
       %6840 = OpPhi %uint %6805 %6793 %6835 %6834
       %6841 = OpIAdd %uint %6840 %uint_5
       %6842 = OpBitwiseAnd %uint %6841 %uint_31
       %6843 = OpShiftLeftLogical %uint %uint_1 %6842
       %6844 = OpCompositeInsert %v2uint %6843 %352 1
       %6845 = OpIAdd %uint %6843 %uint_4294967295
       %6846 = OpCompositeInsert %v2uint %6845 %647 1
       %6847 = OpBitwiseAnd %v2uint %6846 %6839
       %6848 = OpCompositeExtract %uint %6847 1
       %6849 = OpBitwiseAnd %v2uint %6844 %6839
       %6850 = OpIAdd %uint %6840 %uint_2
       %6851 = OpBitwiseAnd %uint %6850 %uint_31
       %6852 = OpShiftLeftLogical %uint %uint_4 %6851
       %6853 = OpUGreaterThan %bool %6848 %6852
       %6854 = OpLogicalNot %bool %6853
               OpSelectionMerge %6885 None
               OpBranchConditional %6854 %6857 %6885
       %6857 = OpLabel
       %6858 = OpCompositeExtract %uint %6847 0
       %6859 = OpVectorShuffle %v2uint %6703 %525 1 4294967295
       %6860 = OpBitwiseOr %v2uint %6859 %6703
       %6861 = OpCompositeExtract %uint %6860 0
       %6862 = OpINotEqual %bool %6861 %uint_0
       %6863 = OpSelect %uint %6862 %uint_1 %uint_0
       %6864 = OpBitwiseOr %uint %6858 %6863
       %6865 = OpIEqual %bool %6848 %6852
       %6866 = OpINotEqual %bool %6864 %uint_0
       %6867 = OpSelect %bool %6865 %6866 %false
       %6868 = OpLogicalNot %bool %6867
               OpSelectionMerge %6881 None
               OpBranchConditional %6868 %6871 %6881
       %6871 = OpLabel
       %6872 = OpINotEqual %bool %6848 %6852
       %6873 = OpLogicalOr %bool %6872 %6866
       %6874 = OpVectorShuffle %v2uint %6849 %525 1 4294967295
       %6875 = OpBitwiseOr %v2uint %6874 %6849
       %6876 = OpCompositeExtract %uint %6875 0
       %6877 = OpIEqual %bool %6876 %uint_0
       %6878 = OpSelect %bool %6873 %true %6877
       %6879 = OpLogicalNot %bool %6878
               OpBranch %6881
       %6881 = OpLabel
       %6882 = OpPhi %v2uint %6839 %6871 %525 %6857
       %6883 = OpPhi %bool %6879 %6871 %6867 %6857
               OpBranch %6885
       %6885 = OpLabel
       %6886 = OpPhi %v2uint %6882 %6881 %525 %6838
       %6887 = OpPhi %bool %6883 %6881 %6853 %6838
               OpSelectionMerge %6895 None
               OpBranchConditional %6887 %6890 %6895
       %6890 = OpLabel
       %6891 = OpCompositeExtract %uint %6839 1
       %6892 = OpIAdd %uint %6843 %6891
       %6893 = OpCompositeInsert %v2uint %6892 %6839 1
               OpBranch %6895
       %6895 = OpLabel
       %6896 = OpPhi %v2uint %6893 %6890 %6886 %6885
       %6897 = OpCompositeExtract %uint %6896 1
       %6898 = OpShiftRightLogical %uint %6897 %6842
       %6899 = OpUGreaterThan %bool %6898 %uint_16777215
       %6900 = OpSelect %uint %6899 %uint_1 %uint_0
       %6901 = OpShiftRightLogical %uint %6898 %6900
       %6902 = OpIAdd %uint %6806 %6900
       %6903 = OpINotEqual %bool %6901 %uint_0
               OpSelectionMerge %6945 None
               OpBranchConditional %6903 %6906 %6945
       %6906 = OpLabel
       %6907 = OpSLessThanEqual %bool %6902 %uint_127
               OpSelectionMerge %6933 None
               OpBranchConditional %6907 %6910 %6933
       %6910 = OpLabel
       %6911 = OpSGreaterThanEqual %bool %6902 %uint_4294967170
               OpSelectionMerge %6922 None
               OpBranchConditional %6911 %6914 %6922
       %6914 = OpLabel
       %6915 = OpShiftLeftLogical %uint %6902 %uint_23
       %6916 = OpIAdd %uint %6915 %uint_1065353216
       %6917 = OpBitwiseAnd %uint %6901 %uint_8388607
       %6918 = OpBitwiseOr %uint %6916 %6917
       %6919 = OpBitwiseOr %uint %6918 %6794
       %6920 = OpBitcast %float %6919
               OpBranch %6922
       %6922 = OpLabel
       %6923 = OpPhi %float %6920 %6914 %261 %6910
       %6924 = OpPhi %bool %false %6914 %true %6910
               OpSelectionMerge %6930 None
               OpBranchConditional %6924 %6927 %6930
       %6927 = OpLabel
       %6928 = OpBitcast %float %6794
               OpBranch %6930
       %6930 = OpLabel
       %6931 = OpPhi %float %6928 %6927 %6923 %6922
               OpBranch %6933
       %6933 = OpLabel
       %6934 = OpPhi %float %6931 %6930 %261 %6906
       %6935 = OpPhi %bool %false %6930 %true %6906
               OpSelectionMerge %6942 None
               OpBranchConditional %6935 %6938 %6942
       %6938 = OpLabel
       %6939 = OpBitwiseOr %uint %6794 %uint_2139095040
       %6940 = OpBitcast %float %6939
               OpBranch %6942
       %6942 = OpLabel
       %6943 = OpPhi %float %6940 %6938 %6934 %6933
               OpBranch %6945
       %6945 = OpLabel
       %6946 = OpPhi %float %6943 %6942 %float_0 %6895
               OpBranch %6948
       %6948 = OpLabel
       %6949 = OpPhi %float %6946 %6945 %6511 %6523
               OpBranch %6951
       %6951 = OpLabel
       %6952 = OpPhi %float %6949 %6948 %261 %6519
       %6953 = OpPhi %bool %false %6948 %true %6519
               OpSelectionMerge %6961 None
               OpBranchConditional %6953 %6956 %6961
       %6956 = OpLabel
       %6957 = OpVectorShuffle %v2float %6502 %765 1 4294967295
       %6958 = OpFMul %v2float %6502 %6957
       %6959 = OpCompositeExtract %float %6958 0
               OpBranch %6961
       %6961 = OpLabel
       %6962 = OpPhi %float %6959 %6956 %6952 %6951
               OpBranch %6964
       %6964 = OpLabel
       %6965 = OpPhi %float %6962 %6961 %6511 %6492
               OpBranch %6967
       %6967 = OpLabel
       %6968 = OpPhi %float %6965 %6964 %6464 %6487
               OpBranch %6970
       %6970 = OpLabel
       %6971 = OpPhi %float %6968 %6967 %261 %6482
       %6972 = OpPhi %bool %false %6967 %true %6482
               OpBranch %6974
       %6974 = OpLabel
       %6975 = OpPhi %float %6971 %6970 %261 %6477
       %6976 = OpPhi %bool %6972 %6970 %6478 %6477
               OpBranch %6978
       %6978 = OpLabel
       %6979 = OpPhi %float %6975 %6974 %261 %6472
       %6980 = OpPhi %bool %6976 %6974 %6473 %6472
               OpBranch %6982
       %6982 = OpLabel
       %6983 = OpPhi %float %6979 %6978 %261 %6467
       %6984 = OpPhi %bool %6980 %6978 %6468 %6467
               OpBranch %6986
       %6986 = OpLabel
       %6987 = OpPhi %float %6983 %6982 %261 %6456
       %6988 = OpPhi %bool %6984 %6982 %5387 %6456
               OpSelectionMerge %6994 None
               OpBranchConditional %6988 %6991 %6994
       %6991 = OpLabel
       %6992 = OpFSub %float %6463 %6463
               OpBranch %6994
       %6994 = OpLabel
       %6995 = OpPhi %float %6992 %6991 %6987 %6986
       %6996 = OpFSub %float %6462 %6463
       %6997 = OpFSub %float %6462 %6996
       %6998 = OpFSub %float %6997 %6463
       %6999 = OpFAdd %float %6996 %6998
       %7000 = OpFNegate %float %6995
       %7001 = OpConvertFToS %uint %5384
               OpBranch %7003
       %7003 = OpLabel
       %7004 = OpPhi %uint %7001 %6994 %5375 %5374
       %7005 = OpPhi %float %6999 %6994 %5376 %5374
       %7006 = OpPhi %float %7000 %6994 %5377 %5374
               OpBranch %7008
       %7008 = OpLabel
       %7009 = OpBitcast %uint %35
       %7010 = OpFMul %float %7005 %7005
       %7011 = OpFMul %float %7005 %7010
       %7012 = OpFMul %float %7010 %float_1_58969102en10
       %7013 = OpFAdd %float %7012 %float_n2_50507597en08
       %7014 = OpFMul %float %7010 %7013
       %7015 = OpFAdd %float %7014 %float_2_72500006en06
       %7016 = OpFMul %float %7010 %7015
       %7017 = OpFAdd %float %7016 %float_n0_00019840087
       %7018 = OpFMul %float %7010 %7017
       %7019 = OpFAdd %float %7018 %float_0_00833333191
       %7020 = OpFMul %float %7006 %float_0_5
       %7021 = OpFMul %float %7011 %7019
       %7022 = OpFSub %float %7020 %7021
       %7023 = OpFMul %float %7010 %7022
       %7024 = OpFSub %float %7023 %7006
       %7025 = OpFMul %float %7011 %float_0_166666672
       %7026 = OpFAdd %float %7025 %7024
       %7027 = OpFSub %float %7005 %7026
       %7028 = OpFMul %float %7010 %float_1_13596476en11
       %7029 = OpFSub %float %float_2_08757234en09 %7028
       %7030 = OpFMul %float %7010 %7029
       %7031 = OpFAdd %float %7030 %float_n2_7301013en07
       %7032 = OpFMul %float %7010 %7031
       %7033 = OpFAdd %float %7032 %float_2_48005999en05
       %7034 = OpFMul %float %7010 %7033
       %7035 = OpFAdd %float %7034 %float_n0_00138888881
       %7036 = OpFMul %float %7010 %7035
       %7037 = OpFAdd %float %7036 %float_0_0416666679
       %7038 = OpFMul %float %7010 %7037
       %7039 = OpBitcast %uint %7005
       %7040 = OpBitwiseAnd %uint %7039 %uint_2147483647
       %7041 = OpBitcast %float %7040
       %7042 = OpBitcast %uint %7041
       %7043 = OpIAdd %uint %7042 %uint_4278190080
       %7044 = OpBitcast %float %7043
       %7045 = OpIAdd %uint %7042 %uint_3244713574
       %7046 = OpULessThan %bool %7045 %uint_11429479
       %7047 = OpSelect %float %7046 %7044 %float_0
       %7048 = OpSGreaterThan %bool %7042 %uint_1061683200
       %7049 = OpSelect %float %7048 %float_0_28125 %7047
       %7050 = OpFMul %float %7010 %float_0_5
       %7051 = OpFSub %float %7050 %7049
       %7052 = OpFSub %float %float_1 %7049
       %7053 = OpFMul %float %7010 %7038
       %7054 = OpFMul %float %7006 %7005
       %7055 = OpFSub %float %7053 %7054
       %7056 = OpFSub %float %7055 %7051
       %7057 = OpFAdd %float %7052 %7056
       %7058 = OpBitwiseAnd %uint %7004 %uint_1
       %7059 = OpIEqual %bool %7058 %uint_0
       %7060 = OpSelect %float %7059 %7027 %7057
       %7061 = OpBitcast %uint %7060
       %7062 = OpShiftLeftLogical %uint %7004 %uint_30
       %7063 = OpBitwiseAnd %uint %7062 %uint_2147483648
       %7064 = OpBitwiseXor %uint %7063 %7009
       %7065 = OpBitwiseXor %uint %7064 %7061
       %7066 = OpBitwiseXor %uint %7065 %43
       %7067 = OpBitcast %float %7066
       %7068 = OpSelect %float %3601 %float_0x1_8p_128 %7067
       %7069 = OpFOrdEqual %bool %35 %float_0
       %7070 = OpSelect %float %7069 %35 %7068
               OpReturnValue %7070
               OpFunctionEnd
       %7080 = OpExtInst %void %7072 PushConstantRegionOffset %uint_0 %uint_12
       %7075 = OpExtInst %void %7072 Kernel %21 %7073 %uint_1 %uint_0 %7074
       %7077 = OpExtInst %void %7072 ArgumentInfo %7076
       %7078 = OpExtInst %void %7072 ArgumentStorageBuffer %7075 %uint_0 %uint_0 %uint_0 %7077
       %7081 = OpExtInst %void %7072 SpecConstantWorkgroupSize %uint_0 %uint_1 %uint_2
